{
  "swagger": "2.0",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at https://graph.microsoft.com/beta",
    "version": "1.0.1"
  },
  "host": "graph.microsoft.com",
  "basePath": "/beta",
  "schemes": [
    "https"
  ],
  "paths": {
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entities from schemaExtensions",
        "operationId": "GetEntitiesFromSchemaExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "targetTypes",
                "targetTypes desc",
                "properties",
                "properties desc",
                "status",
                "status desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "targetTypes",
                "properties",
                "status",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of schemaExtension",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.schemaExtension"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Add new entity to schemaExtensions",
        "operationId": "AddEntityToSchemaExtensions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/schemaExtensions('{id}')": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "operationId": "GetEntityFromSchemaExtensionsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "targetTypes",
                "properties",
                "status",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Update entity in schemaExtensions",
        "operationId": "UpdateEntityInSchemaExtensions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Delete entity from schemaExtensions",
        "operationId": "DeleteEntityFromSchemaExtensions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entities from directoryObjects",
        "operationId": "GetEntitiesFromDirectoryObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryObject",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryObject"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Add new entity to directoryObjects",
        "operationId": "AddEntityToDirectoryObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entity from directoryObjects by key",
        "operationId": "GetEntityFromDirectoryObjectsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Update entity in directoryObjects",
        "operationId": "UpdateEntityInDirectoryObjects",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Delete entity from directoryObjects",
        "operationId": "DeleteEntityFromDirectoryObjects",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.administrativeUnit/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.orgContact/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.getByIds": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getByIds",
        "operationId": "InvokeGetByIds",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "InvokeValidateProperties",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entityType": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "mailNickname": {
                  "type": "string"
                },
                "onBehalfOfUserId": {
                  "format": "uuid",
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action checkMemberGroups",
        "operationId": "InvokeCheckMemberGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberGroups",
        "operationId": "InvokeGetMemberGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberObjects",
        "operationId": "InvokeGetMemberObjects",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "InvokeValidateProperties",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "mailNickname": {
                  "type": "string"
                },
                "onBehalfOfUserId": {
                  "format": "uuid",
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.renew": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action renew",
        "operationId": "InvokeRenew",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.restore": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action restore",
        "operationId": "InvokeRestore",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.assignedLicense"
                  }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "InvokeInvalidateAllRefreshTokens",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Message": {
                  "$ref": "#/definitions/microsoft.graph.message"
                },
                "SaveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "InvokeFindMeetingTimesOLD",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionHints": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "MinimumAttendeePercentage": {
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "InvokeGetMailTips",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EmailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "MailTipsOptions": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "StartDateTime",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDateTime",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.reminder"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "InvokeFindRoomLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "RoomList",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "InvokeSubscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "InvokeUnsubscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "InvokeAddFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "InvokeRemoveFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "InvokeResetUnseenCount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "InvokeRemoveAllDevicesFromManagement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.organization/microsoft.graph.setMobileDeviceManagementAuthority": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action setMobileDeviceManagementAuthority",
        "operationId": "InvokeSetMobileDeviceManagementAuthority",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.organization/microsoft.graph.getEncryptionPublicKey()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function getEncryptionPublicKey",
        "operationId": "InvokeGetEncryptionPublicKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.organization/microsoft.graph.uploadDepToken": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action uploadDepToken",
        "operationId": "InvokeUploadDepToken",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "appleId": {
                  "type": "string"
                },
                "depToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.organization/microsoft.graph.syncWithAppleDeviceEnrollmentProgram": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action syncWithAppleDeviceEnrollmentProgram",
        "operationId": "InvokeSyncWithAppleDeviceEnrollmentProgram",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "InvokeGetManagedAppDiagnosticStatuses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "InvokeGetManagedAppPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "InvokeWipeManagedAppRegistrationByDeviceTag",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Get entities from applications",
        "operationId": "GetEntitiesFromApplications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "api",
                "api desc",
                "allowPublicClient",
                "allowPublicClient desc",
                "applicationAliases",
                "applicationAliases desc",
                "appRoles",
                "appRoles desc",
                "createdDateTime",
                "createdDateTime desc",
                "installedClients",
                "installedClients desc",
                "displayName",
                "displayName desc",
                "info",
                "info desc",
                "keyCredentials",
                "keyCredentials desc",
                "logo",
                "logo desc",
                "orgRestrictions",
                "orgRestrictions desc",
                "passwordCredentials",
                "passwordCredentials desc",
                "preAuthorizedApplications",
                "preAuthorizedApplications desc",
                "requiredResourceAccess",
                "requiredResourceAccess desc",
                "tags",
                "tags desc",
                "web",
                "web desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "api",
                "allowPublicClient",
                "applicationAliases",
                "appRoles",
                "createdDateTime",
                "installedClients",
                "displayName",
                "info",
                "keyCredentials",
                "logo",
                "orgRestrictions",
                "passwordCredentials",
                "preAuthorizedApplications",
                "requiredResourceAccess",
                "tags",
                "web"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of application",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.application"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "applications"
        ],
        "summary": "Add new entity to applications",
        "operationId": "AddEntityToApplications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/applications('{id}')": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Get entity from applications by key",
        "operationId": "GetEntityFromApplicationsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "api",
                "allowPublicClient",
                "applicationAliases",
                "appRoles",
                "createdDateTime",
                "installedClients",
                "displayName",
                "info",
                "keyCredentials",
                "logo",
                "orgRestrictions",
                "passwordCredentials",
                "preAuthorizedApplications",
                "requiredResourceAccess",
                "tags",
                "web"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "applications"
        ],
        "summary": "Update entity in applications",
        "operationId": "UpdateEntityInApplications",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "applications"
        ],
        "summary": "Delete entity from applications",
        "operationId": "DeleteEntityFromApplications",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/applications('{id}')/extensionProperties": {
      "get": {
        "tags": [
          "applications##extensionProperties"
        ],
        "summary": "Get extensionProperties from applications",
        "operationId": "GetExtensionPropertiesFromApplications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "api",
                "api desc",
                "allowPublicClient",
                "allowPublicClient desc",
                "applicationAliases",
                "applicationAliases desc",
                "appRoles",
                "appRoles desc",
                "createdDateTime",
                "createdDateTime desc",
                "installedClients",
                "installedClients desc",
                "displayName",
                "displayName desc",
                "info",
                "info desc",
                "keyCredentials",
                "keyCredentials desc",
                "logo",
                "logo desc",
                "orgRestrictions",
                "orgRestrictions desc",
                "passwordCredentials",
                "passwordCredentials desc",
                "preAuthorizedApplications",
                "preAuthorizedApplications desc",
                "requiredResourceAccess",
                "requiredResourceAccess desc",
                "tags",
                "tags desc",
                "web",
                "web desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "api",
                "allowPublicClient",
                "applicationAliases",
                "appRoles",
                "createdDateTime",
                "installedClients",
                "displayName",
                "info",
                "keyCredentials",
                "logo",
                "orgRestrictions",
                "passwordCredentials",
                "preAuthorizedApplications",
                "requiredResourceAccess",
                "tags",
                "web"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensionProperties",
                "createdOnBehalfOf",
                "owners",
                "policies",
                "synchronization"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extensionProperty"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "applications##extensionProperties"
        ],
        "summary": "Add new navigation property to extensionProperties for applications",
        "operationId": "AddExtensionPropertiesToApplications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/applications('{id}')/synchronization": {
      "get": {
        "tags": [
          "applications##synchronization"
        ],
        "summary": "Get synchronization from applications",
        "operationId": "GetSynchronizationFromApplications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "api",
                "allowPublicClient",
                "applicationAliases",
                "appRoles",
                "createdDateTime",
                "installedClients",
                "displayName",
                "info",
                "keyCredentials",
                "logo",
                "orgRestrictions",
                "passwordCredentials",
                "preAuthorizedApplications",
                "requiredResourceAccess",
                "tags",
                "web"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensionProperties",
                "createdOnBehalfOf",
                "owners",
                "policies",
                "synchronization"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.synchronization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "applications##synchronization"
        ],
        "summary": "Update the navigation property synchronization in applications",
        "operationId": "UpdateSynchronizationInApplications",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.application"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/administrativeUnits": {
      "get": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Get entities from administrativeUnits",
        "operationId": "GetEntitiesFromAdministrativeUnits",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc",
                "visibility",
                "visibility desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "visibility"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of administrativeUnit",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.administrativeUnit"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Add new entity to administrativeUnits",
        "operationId": "AddEntityToAdministrativeUnits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/administrativeUnits('{id}')": {
      "get": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Get entity from administrativeUnits by key",
        "operationId": "GetEntityFromAdministrativeUnitsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "visibility"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Update entity in administrativeUnits",
        "operationId": "UpdateEntityInAdministrativeUnits",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Delete entity from administrativeUnits",
        "operationId": "DeleteEntityFromAdministrativeUnits",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/administrativeUnits('{id}')/extensions": {
      "get": {
        "tags": [
          "administrativeUnits##extensions"
        ],
        "summary": "Get extensions from administrativeUnits",
        "operationId": "GetExtensionsFromAdministrativeUnits",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc",
                "visibility",
                "visibility desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "visibility"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "scopedRoleMembers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "administrativeUnits##extensions"
        ],
        "summary": "Add new navigation property to extensions for administrativeUnits",
        "operationId": "AddExtensionsToAdministrativeUnits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/administrativeUnits('{id}')/scopedRoleMembers": {
      "get": {
        "tags": [
          "administrativeUnits##scopedRoleMembers"
        ],
        "summary": "Get scopedRoleMembers from administrativeUnits",
        "operationId": "GetScopedRoleMembersFromAdministrativeUnits",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc",
                "visibility",
                "visibility desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "visibility"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "scopedRoleMembers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "administrativeUnits##scopedRoleMembers"
        ],
        "summary": "Add new navigation property to scopedRoleMembers for administrativeUnits",
        "operationId": "AddScopedRoleMembersToAdministrativeUnits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.administrativeUnit"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/administrativeUnits/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "administrativeUnits"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/allowedDataLocations": {
      "get": {
        "tags": [
          "allowedDataLocations"
        ],
        "summary": "Get entities from allowedDataLocations",
        "operationId": "GetEntitiesFromAllowedDataLocations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "appId",
                "appId desc",
                "location",
                "location desc",
                "isDefault",
                "isDefault desc",
                "domain",
                "domain desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appId",
                "location",
                "isDefault",
                "domain"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of allowedDataLocation",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.allowedDataLocation"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "allowedDataLocations"
        ],
        "summary": "Add new entity to allowedDataLocations",
        "operationId": "AddEntityToAllowedDataLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.allowedDataLocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.allowedDataLocation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/allowedDataLocations('{id}')": {
      "get": {
        "tags": [
          "allowedDataLocations"
        ],
        "summary": "Get entity from allowedDataLocations by key",
        "operationId": "GetEntityFromAllowedDataLocationsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appId",
                "location",
                "isDefault",
                "domain"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.allowedDataLocation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "allowedDataLocations"
        ],
        "summary": "Update entity in allowedDataLocations",
        "operationId": "UpdateEntityInAllowedDataLocations",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.allowedDataLocation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "allowedDataLocations"
        ],
        "summary": "Delete entity from allowedDataLocations",
        "operationId": "DeleteEntityFromAllowedDataLocations",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/appRoleAssignments": {
      "get": {
        "tags": [
          "appRoleAssignments"
        ],
        "summary": "Get entities from appRoleAssignments",
        "operationId": "GetEntitiesFromAppRoleAssignments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "creationTimestamp",
                "creationTimestamp desc",
                "principalDisplayName",
                "principalDisplayName desc",
                "principalId",
                "principalId desc",
                "principalType",
                "principalType desc",
                "resourceDisplayName",
                "resourceDisplayName desc",
                "resourceId",
                "resourceId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "creationTimestamp",
                "principalDisplayName",
                "principalId",
                "principalType",
                "resourceDisplayName",
                "resourceId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of appRoleAssignment",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "appRoleAssignments"
        ],
        "summary": "Add new entity to appRoleAssignments",
        "operationId": "AddEntityToAppRoleAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/appRoleAssignments('{id}')": {
      "get": {
        "tags": [
          "appRoleAssignments"
        ],
        "summary": "Get entity from appRoleAssignments by key",
        "operationId": "GetEntityFromAppRoleAssignmentsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "creationTimestamp",
                "principalDisplayName",
                "principalId",
                "principalType",
                "resourceDisplayName",
                "resourceId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "appRoleAssignments"
        ],
        "summary": "Update entity in appRoleAssignments",
        "operationId": "UpdateEntityInAppRoleAssignments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "appRoleAssignments"
        ],
        "summary": "Delete entity from appRoleAssignments",
        "operationId": "DeleteEntityFromAppRoleAssignments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get entities from contacts",
        "operationId": "GetEntitiesFromContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "givenName",
                "givenName desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesSyncEnabled",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "officeLocation",
                "postalCode",
                "proxyAddresses",
                "state",
                "streetAddress",
                "surname"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of orgContact",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.orgContact"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Add new entity to contacts",
        "operationId": "AddEntityToContacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.orgContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.orgContact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contacts('{id}')": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get entity from contacts by key",
        "operationId": "GetEntityFromContactsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesSyncEnabled",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "officeLocation",
                "postalCode",
                "proxyAddresses",
                "state",
                "streetAddress",
                "surname"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.orgContact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contacts"
        ],
        "summary": "Update entity in contacts",
        "operationId": "UpdateEntityInContacts",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.orgContact"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "Delete entity from contacts",
        "operationId": "DeleteEntityFromContacts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contacts/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entities from devices",
        "operationId": "GetEntitiesFromDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "alternativeSecurityIds",
                "alternativeSecurityIds desc",
                "approximateLastSignInDateTime",
                "approximateLastSignInDateTime desc",
                "deviceId",
                "deviceId desc",
                "deviceMetadata",
                "deviceMetadata desc",
                "deviceVersion",
                "deviceVersion desc",
                "displayName",
                "displayName desc",
                "isCompliant",
                "isCompliant desc",
                "isManaged",
                "isManaged desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "operatingSystem",
                "operatingSystem desc",
                "operatingSystemVersion",
                "operatingSystemVersion desc",
                "physicalIds",
                "physicalIds desc",
                "trustType",
                "trustType desc",
                "Name",
                "Name desc",
                "Manufacturer",
                "Manufacturer desc",
                "Model",
                "Model desc",
                "Kind",
                "Kind desc",
                "Status",
                "Status desc",
                "Platform",
                "Platform desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "Name",
                "Manufacturer",
                "Model",
                "Kind",
                "Status",
                "Platform"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of device",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.device"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Add new entity to devices",
        "operationId": "AddEntityToDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices('{id}')": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entity from devices by key",
        "operationId": "GetEntityFromDevicesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "Name",
                "Manufacturer",
                "Model",
                "Kind",
                "Status",
                "Platform"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "devices"
        ],
        "summary": "Update entity in devices",
        "operationId": "UpdateEntityInDevices",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Delete entity from devices",
        "operationId": "DeleteEntityFromDevices",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices('{id}')/extensions": {
      "get": {
        "tags": [
          "devices##extensions"
        ],
        "summary": "Get extensions from devices",
        "operationId": "GetExtensionsFromDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "alternativeSecurityIds",
                "alternativeSecurityIds desc",
                "approximateLastSignInDateTime",
                "approximateLastSignInDateTime desc",
                "deviceId",
                "deviceId desc",
                "deviceMetadata",
                "deviceMetadata desc",
                "deviceVersion",
                "deviceVersion desc",
                "displayName",
                "displayName desc",
                "isCompliant",
                "isCompliant desc",
                "isManaged",
                "isManaged desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "operatingSystem",
                "operatingSystem desc",
                "operatingSystemVersion",
                "operatingSystemVersion desc",
                "physicalIds",
                "physicalIds desc",
                "trustType",
                "trustType desc",
                "Name",
                "Name desc",
                "Manufacturer",
                "Manufacturer desc",
                "Model",
                "Model desc",
                "Kind",
                "Kind desc",
                "Status",
                "Status desc",
                "Platform",
                "Platform desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "Name",
                "Manufacturer",
                "Model",
                "Kind",
                "Status",
                "Platform"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "registeredOwners",
                "registeredUsers",
                "commands"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices##extensions"
        ],
        "summary": "Add new navigation property to extensions for devices",
        "operationId": "AddExtensionsToDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices('{id}')/commands": {
      "get": {
        "tags": [
          "devices##commands"
        ],
        "summary": "Get commands from devices",
        "operationId": "GetCommandsFromDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "alternativeSecurityIds",
                "alternativeSecurityIds desc",
                "approximateLastSignInDateTime",
                "approximateLastSignInDateTime desc",
                "deviceId",
                "deviceId desc",
                "deviceMetadata",
                "deviceMetadata desc",
                "deviceVersion",
                "deviceVersion desc",
                "displayName",
                "displayName desc",
                "isCompliant",
                "isCompliant desc",
                "isManaged",
                "isManaged desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "operatingSystem",
                "operatingSystem desc",
                "operatingSystemVersion",
                "operatingSystemVersion desc",
                "physicalIds",
                "physicalIds desc",
                "trustType",
                "trustType desc",
                "Name",
                "Name desc",
                "Manufacturer",
                "Manufacturer desc",
                "Model",
                "Model desc",
                "Kind",
                "Kind desc",
                "Status",
                "Status desc",
                "Platform",
                "Platform desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "Name",
                "Manufacturer",
                "Model",
                "Kind",
                "Status",
                "Platform"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "registeredOwners",
                "registeredUsers",
                "commands"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.command"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices##commands"
        ],
        "summary": "Add new navigation property to commands for devices",
        "operationId": "AddCommandsToDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entities from domains",
        "operationId": "GetEntitiesFromDomains",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "authenticationType",
                "authenticationType desc",
                "availabilityStatus",
                "availabilityStatus desc",
                "isAdminManaged",
                "isAdminManaged desc",
                "isDefault",
                "isDefault desc",
                "isInitial",
                "isInitial desc",
                "isRoot",
                "isRoot desc",
                "isVerified",
                "isVerified desc",
                "supportedServices",
                "supportedServices desc",
                "state",
                "state desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of domain",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.domain"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add new entity to domains",
        "operationId": "AddEntityToDomains",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entity from domains by key",
        "operationId": "GetEntityFromDomainsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domains"
        ],
        "summary": "Update entity in domains",
        "operationId": "UpdateEntityInDomains",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "summary": "Delete entity from domains",
        "operationId": "DeleteEntityFromDomains",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/serviceConfigurationRecords": {
      "get": {
        "tags": [
          "domains##serviceConfigurationRecords"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "GetServiceConfigurationRecordsFromDomains",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "authenticationType",
                "authenticationType desc",
                "availabilityStatus",
                "availabilityStatus desc",
                "isAdminManaged",
                "isAdminManaged desc",
                "isDefault",
                "isDefault desc",
                "isInitial",
                "isInitial desc",
                "isRoot",
                "isRoot desc",
                "isVerified",
                "isVerified desc",
                "supportedServices",
                "supportedServices desc",
                "state",
                "state desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains##serviceConfigurationRecords"
        ],
        "summary": "Add new navigation property to serviceConfigurationRecords for domains",
        "operationId": "AddServiceConfigurationRecordsToDomains",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/verificationDnsRecords": {
      "get": {
        "tags": [
          "domains##verificationDnsRecords"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "GetVerificationDnsRecordsFromDomains",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "authenticationType",
                "authenticationType desc",
                "availabilityStatus",
                "availabilityStatus desc",
                "isAdminManaged",
                "isAdminManaged desc",
                "isDefault",
                "isDefault desc",
                "isInitial",
                "isInitial desc",
                "isRoot",
                "isRoot desc",
                "isVerified",
                "isVerified desc",
                "supportedServices",
                "supportedServices desc",
                "state",
                "state desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains##verificationDnsRecords"
        ],
        "summary": "Add new navigation property to verificationDnsRecords for domains",
        "operationId": "AddVerificationDnsRecordsToDomains",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/microsoft.graph.forceDelete": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Invoke action forceDelete",
        "operationId": "InvokeForceDelete",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "disableUserAccounts": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/microsoft.graph.verify": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Invoke action verify",
        "operationId": "InvokeVerify",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entities from domainDnsRecords",
        "operationId": "GetEntitiesFromDomainDnsRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "isOptional",
                "isOptional desc",
                "label",
                "label desc",
                "recordType",
                "recordType desc",
                "supportedService",
                "supportedService desc",
                "ttl",
                "ttl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of domainDnsRecord",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Add new entity to domainDnsRecords",
        "operationId": "AddEntityToDomainDnsRecords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords('{id}')": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entity from domainDnsRecords by key",
        "operationId": "GetEntityFromDomainDnsRecordsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Update entity in domainDnsRecords",
        "operationId": "UpdateEntityInDomainDnsRecords",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Delete entity from domainDnsRecords",
        "operationId": "DeleteEntityFromDomainDnsRecords",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entities from groups",
        "operationId": "GetEntitiesFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of group",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.group"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new entity to groups",
        "operationId": "AddEntityToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entity from groups by key",
        "operationId": "GetEntityFromGroupsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update entity in groups",
        "operationId": "UpdateEntityInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete entity from groups",
        "operationId": "DeleteEntityFromGroups",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/extensions": {
      "get": {
        "tags": [
          "groups##extensions"
        ],
        "summary": "Get extensions from groups",
        "operationId": "GetExtensionsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##extensions"
        ],
        "summary": "Add new navigation property to extensions for groups",
        "operationId": "AddExtensionsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/settings": {
      "get": {
        "tags": [
          "groups##settings"
        ],
        "summary": "Get settings from groups",
        "operationId": "GetSettingsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##settings"
        ],
        "summary": "Add new navigation property to settings for groups",
        "operationId": "AddSettingsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/endpoints": {
      "get": {
        "tags": [
          "groups##endpoints"
        ],
        "summary": "Get endpoints from groups",
        "operationId": "GetEndpointsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.endpoint"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##endpoints"
        ],
        "summary": "Add new navigation property to endpoints for groups",
        "operationId": "AddEndpointsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/threads": {
      "get": {
        "tags": [
          "groups##threads"
        ],
        "summary": "Get threads from groups",
        "operationId": "GetThreadsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversationThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##threads"
        ],
        "summary": "Add new navigation property to threads for groups",
        "operationId": "AddThreadsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/calendar": {
      "get": {
        "tags": [
          "groups##calendar"
        ],
        "summary": "Get calendar from groups",
        "operationId": "GetCalendarFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/calendarView": {
      "get": {
        "tags": [
          "groups##calendarView"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "GetCalendarViewFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/events": {
      "get": {
        "tags": [
          "groups##events"
        ],
        "summary": "Get events from groups",
        "operationId": "GetEventsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##events"
        ],
        "summary": "Add new navigation property to events for groups",
        "operationId": "AddEventsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/conversations": {
      "get": {
        "tags": [
          "groups##conversations"
        ],
        "summary": "Get conversations from groups",
        "operationId": "GetConversationsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##conversations"
        ],
        "summary": "Add new navigation property to conversations for groups",
        "operationId": "AddConversationsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/photo": {
      "get": {
        "tags": [
          "groups##photo"
        ],
        "summary": "Get photo from groups",
        "operationId": "GetPhotoFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups##photo"
        ],
        "summary": "Update the navigation property photo in groups",
        "operationId": "UpdatePhotoInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/photos": {
      "get": {
        "tags": [
          "groups##photos"
        ],
        "summary": "Get photos from groups",
        "operationId": "GetPhotosFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/acceptedSenders": {
      "get": {
        "tags": [
          "groups##acceptedSenders"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "GetAcceptedSendersFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##acceptedSenders"
        ],
        "summary": "Add new navigation property to acceptedSenders for groups",
        "operationId": "AddAcceptedSendersToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/rejectedSenders": {
      "get": {
        "tags": [
          "groups##rejectedSenders"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "GetRejectedSendersFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##rejectedSenders"
        ],
        "summary": "Add new navigation property to rejectedSenders for groups",
        "operationId": "AddRejectedSendersToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/drive": {
      "get": {
        "tags": [
          "groups##drive"
        ],
        "summary": "Get drive from groups",
        "operationId": "GetDriveFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups##drive"
        ],
        "summary": "Update the navigation property drive in groups",
        "operationId": "UpdateDriveInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/drives": {
      "get": {
        "tags": [
          "groups##drives"
        ],
        "summary": "Get drives from groups",
        "operationId": "GetDrivesFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##drives"
        ],
        "summary": "Add new navigation property to drives for groups",
        "operationId": "AddDrivesToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/sites": {
      "get": {
        "tags": [
          "groups##sites"
        ],
        "summary": "Get sites from groups",
        "operationId": "GetSitesFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##sites"
        ],
        "summary": "Add new navigation property to sites for groups",
        "operationId": "AddSitesToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/planner": {
      "get": {
        "tags": [
          "groups##planner"
        ],
        "summary": "Get planner from groups",
        "operationId": "GetPlannerFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups##planner"
        ],
        "summary": "Update the navigation property planner in groups",
        "operationId": "UpdatePlannerInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/onenote": {
      "get": {
        "tags": [
          "groups##onenote"
        ],
        "summary": "Get onenote from groups",
        "operationId": "GetOnenoteFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups##onenote"
        ],
        "summary": "Update the navigation property onenote in groups",
        "operationId": "UpdateOnenoteInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/team": {
      "get": {
        "tags": [
          "groups##team"
        ],
        "summary": "Get team from groups",
        "operationId": "GetTeamFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups##team"
        ],
        "summary": "Update the navigation property team in groups",
        "operationId": "UpdateTeamInGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/channels": {
      "get": {
        "tags": [
          "groups##channels"
        ],
        "summary": "Get channels from groups",
        "operationId": "GetChannelsFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##channels"
        ],
        "summary": "Add new navigation property to channels for groups",
        "operationId": "AddChannelsToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groups##groupLifecyclePolicies"
        ],
        "summary": "Get groupLifecyclePolicies from groups",
        "operationId": "GetGroupLifecyclePoliciesFromGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "membershipRule",
                "membershipRule desc",
                "membershipRuleProcessingState",
                "membershipRuleProcessingState desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "resourceBehaviorOptions",
                "resourceBehaviorOptions desc",
                "resourceProvisioningOptions",
                "resourceProvisioningOptions desc",
                "securityEnabled",
                "securityEnabled desc",
                "theme",
                "theme desc",
                "visibility",
                "visibility desc",
                "accessType",
                "accessType desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isFavorite",
                "isFavorite desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc",
                "unseenConversationsCount",
                "unseenConversationsCount desc",
                "unseenMessagesCount",
                "unseenMessagesCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "membershipRule",
                "membershipRuleProcessingState",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "preferredLanguage",
                "proxyAddresses",
                "renewedDateTime",
                "resourceBehaviorOptions",
                "resourceProvisioningOptions",
                "securityEnabled",
                "theme",
                "visibility",
                "accessType",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isFavorite",
                "isSubscribedByMail",
                "unseenCount",
                "unseenConversationsCount",
                "unseenMessagesCount"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "endpoints",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote",
                "team",
                "channels",
                "groupLifecyclePolicies"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups##groupLifecyclePolicies"
        ],
        "summary": "Add new navigation property to groupLifecyclePolicies for groups",
        "operationId": "AddGroupLifecyclePoliciesToGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "InvokeValidateProperties",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "mailNickname": {
                  "type": "string"
                },
                "onBehalfOfUserId": {
                  "format": "uuid",
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.renew": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action renew",
        "operationId": "InvokeRenew",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "InvokeSubscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "InvokeUnsubscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "InvokeAddFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "InvokeRemoveFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "InvokeResetUnseenCount",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entities from directoryRoles",
        "operationId": "GetEntitiesFromDirectoryRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "roleTemplateId",
                "roleTemplateId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "description",
                "displayName",
                "roleTemplateId"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRole",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRole"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Add new entity to directoryRoles",
        "operationId": "AddEntityToDirectoryRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoles('{id}')": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entity from directoryRoles by key",
        "operationId": "GetEntityFromDirectoryRolesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "description",
                "displayName",
                "roleTemplateId"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Update entity in directoryRoles",
        "operationId": "UpdateEntityInDirectoryRoles",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Delete entity from directoryRoles",
        "operationId": "DeleteEntityFromDirectoryRoles",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoles('{id}')/scopedMembers": {
      "get": {
        "tags": [
          "directoryRoles##scopedMembers"
        ],
        "summary": "Get scopedMembers from directoryRoles",
        "operationId": "GetScopedMembersFromDirectoryRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "roleTemplateId",
                "roleTemplateId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "description",
                "displayName",
                "roleTemplateId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members",
                "scopedMembers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoles##scopedMembers"
        ],
        "summary": "Add new navigation property to scopedMembers for directoryRoles",
        "operationId": "AddScopedMembersToDirectoryRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "operationId": "GetEntitiesFromDirectoryRoleTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRoleTemplate",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "operationId": "AddEntityToDirectoryRoleTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates('{id}')": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "operationId": "GetEntityFromDirectoryRoleTemplatesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "operationId": "UpdateEntityInDirectoryRoleTemplates",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "operationId": "DeleteEntityFromDirectoryRoleTemplates",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directorySettingTemplates": {
      "get": {
        "tags": [
          "directorySettingTemplates"
        ],
        "summary": "Get entities from directorySettingTemplates",
        "operationId": "GetEntitiesFromDirectorySettingTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "values"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directorySettingTemplate",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directorySettingTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directorySettingTemplates"
        ],
        "summary": "Add new entity to directorySettingTemplates",
        "operationId": "AddEntityToDirectorySettingTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySettingTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directorySettingTemplates('{id}')": {
      "get": {
        "tags": [
          "directorySettingTemplates"
        ],
        "summary": "Get entity from directorySettingTemplates by key",
        "operationId": "GetEntityFromDirectorySettingTemplatesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "displayName",
                "description",
                "values"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directorySettingTemplates"
        ],
        "summary": "Update entity in directorySettingTemplates",
        "operationId": "UpdateEntityInDirectorySettingTemplates",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySettingTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directorySettingTemplates"
        ],
        "summary": "Delete entity from directorySettingTemplates",
        "operationId": "DeleteEntityFromDirectorySettingTemplates",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entities from organization",
        "operationId": "GetEntitiesFromOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "country",
                "country desc",
                "countryLetterCode",
                "countryLetterCode desc",
                "displayName",
                "displayName desc",
                "isMultipleDataLocationsForServicesEnabled",
                "isMultipleDataLocationsForServicesEnabled desc",
                "marketingNotificationEmails",
                "marketingNotificationEmails desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationMails desc",
                "securityComplianceNotificationPhones",
                "securityComplianceNotificationPhones desc",
                "state",
                "state desc",
                "street",
                "street desc",
                "technicalNotificationMails",
                "technicalNotificationMails desc",
                "verifiedDomains",
                "verifiedDomains desc",
                "mobileDeviceManagementAuthority",
                "mobileDeviceManagementAuthority desc",
                "certificateConnectorSetting",
                "certificateConnectorSetting desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "isMultipleDataLocationsForServicesEnabled",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains",
                "mobileDeviceManagementAuthority",
                "certificateConnectorSetting"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of organization",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.organization"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Add new entity to organization",
        "operationId": "AddEntityToOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entity from organization by key",
        "operationId": "GetEntityFromOrganizationByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "isMultipleDataLocationsForServicesEnabled",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains",
                "mobileDeviceManagementAuthority",
                "certificateConnectorSetting"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "organization"
        ],
        "summary": "Update entity in organization",
        "operationId": "UpdateEntityInOrganization",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "summary": "Delete entity from organization",
        "operationId": "DeleteEntityFromOrganization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/extensions": {
      "get": {
        "tags": [
          "organization##extensions"
        ],
        "summary": "Get extensions from organization",
        "operationId": "GetExtensionsFromOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "country",
                "country desc",
                "countryLetterCode",
                "countryLetterCode desc",
                "displayName",
                "displayName desc",
                "isMultipleDataLocationsForServicesEnabled",
                "isMultipleDataLocationsForServicesEnabled desc",
                "marketingNotificationEmails",
                "marketingNotificationEmails desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationMails desc",
                "securityComplianceNotificationPhones",
                "securityComplianceNotificationPhones desc",
                "state",
                "state desc",
                "street",
                "street desc",
                "technicalNotificationMails",
                "technicalNotificationMails desc",
                "verifiedDomains",
                "verifiedDomains desc",
                "mobileDeviceManagementAuthority",
                "mobileDeviceManagementAuthority desc",
                "certificateConnectorSetting",
                "certificateConnectorSetting desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "isMultipleDataLocationsForServicesEnabled",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains",
                "mobileDeviceManagementAuthority",
                "certificateConnectorSetting"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "depOnboardingSettings",
                "appleVolumePurchaseProgramTokens"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization##extensions"
        ],
        "summary": "Add new navigation property to extensions for organization",
        "operationId": "AddExtensionsToOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/depOnboardingSettings": {
      "get": {
        "tags": [
          "organization##depOnboardingSettings"
        ],
        "summary": "Get depOnboardingSettings from organization",
        "operationId": "GetDepOnboardingSettingsFromOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "country",
                "country desc",
                "countryLetterCode",
                "countryLetterCode desc",
                "displayName",
                "displayName desc",
                "isMultipleDataLocationsForServicesEnabled",
                "isMultipleDataLocationsForServicesEnabled desc",
                "marketingNotificationEmails",
                "marketingNotificationEmails desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationMails desc",
                "securityComplianceNotificationPhones",
                "securityComplianceNotificationPhones desc",
                "state",
                "state desc",
                "street",
                "street desc",
                "technicalNotificationMails",
                "technicalNotificationMails desc",
                "verifiedDomains",
                "verifiedDomains desc",
                "mobileDeviceManagementAuthority",
                "mobileDeviceManagementAuthority desc",
                "certificateConnectorSetting",
                "certificateConnectorSetting desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "isMultipleDataLocationsForServicesEnabled",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains",
                "mobileDeviceManagementAuthority",
                "certificateConnectorSetting"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "depOnboardingSettings",
                "appleVolumePurchaseProgramTokens"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.depOnboardingSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization##depOnboardingSettings"
        ],
        "summary": "Add new navigation property to depOnboardingSettings for organization",
        "operationId": "AddDepOnboardingSettingsToOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/appleVolumePurchaseProgramTokens": {
      "get": {
        "tags": [
          "organization##appleVolumePurchaseProgramTokens"
        ],
        "summary": "Get appleVolumePurchaseProgramTokens from organization",
        "operationId": "GetAppleVolumePurchaseProgramTokensFromOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "country",
                "country desc",
                "countryLetterCode",
                "countryLetterCode desc",
                "displayName",
                "displayName desc",
                "isMultipleDataLocationsForServicesEnabled",
                "isMultipleDataLocationsForServicesEnabled desc",
                "marketingNotificationEmails",
                "marketingNotificationEmails desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationMails desc",
                "securityComplianceNotificationPhones",
                "securityComplianceNotificationPhones desc",
                "state",
                "state desc",
                "street",
                "street desc",
                "technicalNotificationMails",
                "technicalNotificationMails desc",
                "verifiedDomains",
                "verifiedDomains desc",
                "mobileDeviceManagementAuthority",
                "mobileDeviceManagementAuthority desc",
                "certificateConnectorSetting",
                "certificateConnectorSetting desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "isMultipleDataLocationsForServicesEnabled",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains",
                "mobileDeviceManagementAuthority",
                "certificateConnectorSetting"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "depOnboardingSettings",
                "appleVolumePurchaseProgramTokens"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.appleVolumePurchaseProgramToken"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization##appleVolumePurchaseProgramTokens"
        ],
        "summary": "Add new navigation property to appleVolumePurchaseProgramTokens for organization",
        "operationId": "AddAppleVolumePurchaseProgramTokensToOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/microsoft.graph.setMobileDeviceManagementAuthority": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Invoke action setMobileDeviceManagementAuthority",
        "operationId": "InvokeSetMobileDeviceManagementAuthority",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/microsoft.graph.getEncryptionPublicKey()": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Invoke function getEncryptionPublicKey",
        "operationId": "InvokeGetEncryptionPublicKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/microsoft.graph.uploadDepToken": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Invoke action uploadDepToken",
        "operationId": "InvokeUploadDepToken",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "appleId": {
                  "type": "string"
                },
                "depToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/microsoft.graph.syncWithAppleDeviceEnrollmentProgram": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Invoke action syncWithAppleDeviceEnrollmentProgram",
        "operationId": "InvokeSyncWithAppleDeviceEnrollmentProgram",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/oauth2PermissionGrants": {
      "get": {
        "tags": [
          "oauth2PermissionGrants"
        ],
        "summary": "Get entities from oauth2PermissionGrants",
        "operationId": "GetEntitiesFromOauth2PermissionGrants",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "clientId",
                "clientId desc",
                "consentType",
                "consentType desc",
                "expiryTime",
                "expiryTime desc",
                "principalId",
                "principalId desc",
                "resourceId",
                "resourceId desc",
                "scope",
                "scope desc",
                "startTime",
                "startTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "clientId",
                "consentType",
                "expiryTime",
                "principalId",
                "resourceId",
                "scope",
                "startTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of oAuth2PermissionGrant",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "oauth2PermissionGrants"
        ],
        "summary": "Add new entity to oauth2PermissionGrants",
        "operationId": "AddEntityToOauth2PermissionGrants",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/oauth2PermissionGrants('{id}')": {
      "get": {
        "tags": [
          "oauth2PermissionGrants"
        ],
        "summary": "Get entity from oauth2PermissionGrants by key",
        "operationId": "GetEntityFromOauth2PermissionGrantsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "clientId",
                "consentType",
                "expiryTime",
                "principalId",
                "resourceId",
                "scope",
                "startTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "oauth2PermissionGrants"
        ],
        "summary": "Update entity in oauth2PermissionGrants",
        "operationId": "UpdateEntityInOauth2PermissionGrants",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "oauth2PermissionGrants"
        ],
        "summary": "Delete entity from oauth2PermissionGrants",
        "operationId": "DeleteEntityFromOauth2PermissionGrants",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/scopedRoleMemberships": {
      "get": {
        "tags": [
          "scopedRoleMemberships"
        ],
        "summary": "Get entities from scopedRoleMemberships",
        "operationId": "GetEntitiesFromScopedRoleMemberships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "roleId",
                "roleId desc",
                "administrativeUnitId",
                "administrativeUnitId desc",
                "roleMemberInfo",
                "roleMemberInfo desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "roleId",
                "administrativeUnitId",
                "roleMemberInfo"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of scopedRoleMembership",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "scopedRoleMemberships"
        ],
        "summary": "Add new entity to scopedRoleMemberships",
        "operationId": "AddEntityToScopedRoleMemberships",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/scopedRoleMemberships('{id}')": {
      "get": {
        "tags": [
          "scopedRoleMemberships"
        ],
        "summary": "Get entity from scopedRoleMemberships by key",
        "operationId": "GetEntityFromScopedRoleMembershipsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "roleId",
                "administrativeUnitId",
                "roleMemberInfo"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "scopedRoleMemberships"
        ],
        "summary": "Update entity in scopedRoleMemberships",
        "operationId": "UpdateEntityInScopedRoleMemberships",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "scopedRoleMemberships"
        ],
        "summary": "Delete entity from scopedRoleMemberships",
        "operationId": "DeleteEntityFromScopedRoleMemberships",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/servicePrincipals": {
      "get": {
        "tags": [
          "servicePrincipals"
        ],
        "summary": "Get entities from servicePrincipals",
        "operationId": "GetEntitiesFromServicePrincipals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "addIns",
                "addIns desc",
                "appDisplayName",
                "appDisplayName desc",
                "appId",
                "appId desc",
                "appOwnerOrganizationId",
                "appOwnerOrganizationId desc",
                "appRoleAssignmentRequired",
                "appRoleAssignmentRequired desc",
                "appRoles",
                "appRoles desc",
                "displayName",
                "displayName desc",
                "errorUrl",
                "errorUrl desc",
                "homepage",
                "homepage desc",
                "keyCredentials",
                "keyCredentials desc",
                "logoutUrl",
                "logoutUrl desc",
                "oauth2Permissions",
                "oauth2Permissions desc",
                "passwordCredentials",
                "passwordCredentials desc",
                "preferredTokenSigningKeyThumbprint",
                "preferredTokenSigningKeyThumbprint desc",
                "publisherName",
                "publisherName desc",
                "replyUrls",
                "replyUrls desc",
                "samlMetadataUrl",
                "samlMetadataUrl desc",
                "servicePrincipalNames",
                "servicePrincipalNames desc",
                "tags",
                "tags desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "addIns",
                "appDisplayName",
                "appId",
                "appOwnerOrganizationId",
                "appRoleAssignmentRequired",
                "appRoles",
                "displayName",
                "errorUrl",
                "homepage",
                "keyCredentials",
                "logoutUrl",
                "oauth2Permissions",
                "passwordCredentials",
                "preferredTokenSigningKeyThumbprint",
                "publisherName",
                "replyUrls",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "tags"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of servicePrincipal",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.servicePrincipal"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "servicePrincipals"
        ],
        "summary": "Add new entity to servicePrincipals",
        "operationId": "AddEntityToServicePrincipals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/servicePrincipals('{id}')": {
      "get": {
        "tags": [
          "servicePrincipals"
        ],
        "summary": "Get entity from servicePrincipals by key",
        "operationId": "GetEntityFromServicePrincipalsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "addIns",
                "appDisplayName",
                "appId",
                "appOwnerOrganizationId",
                "appRoleAssignmentRequired",
                "appRoles",
                "displayName",
                "errorUrl",
                "homepage",
                "keyCredentials",
                "logoutUrl",
                "oauth2Permissions",
                "passwordCredentials",
                "preferredTokenSigningKeyThumbprint",
                "publisherName",
                "replyUrls",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "tags"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "servicePrincipals"
        ],
        "summary": "Update entity in servicePrincipals",
        "operationId": "UpdateEntityInServicePrincipals",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "servicePrincipals"
        ],
        "summary": "Delete entity from servicePrincipals",
        "operationId": "DeleteEntityFromServicePrincipals",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/servicePrincipals('{id}')/licenseDetails": {
      "get": {
        "tags": [
          "servicePrincipals##licenseDetails"
        ],
        "summary": "Get licenseDetails from servicePrincipals",
        "operationId": "GetLicenseDetailsFromServicePrincipals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "addIns",
                "addIns desc",
                "appDisplayName",
                "appDisplayName desc",
                "appId",
                "appId desc",
                "appOwnerOrganizationId",
                "appOwnerOrganizationId desc",
                "appRoleAssignmentRequired",
                "appRoleAssignmentRequired desc",
                "appRoles",
                "appRoles desc",
                "displayName",
                "displayName desc",
                "errorUrl",
                "errorUrl desc",
                "homepage",
                "homepage desc",
                "keyCredentials",
                "keyCredentials desc",
                "logoutUrl",
                "logoutUrl desc",
                "oauth2Permissions",
                "oauth2Permissions desc",
                "passwordCredentials",
                "passwordCredentials desc",
                "preferredTokenSigningKeyThumbprint",
                "preferredTokenSigningKeyThumbprint desc",
                "publisherName",
                "publisherName desc",
                "replyUrls",
                "replyUrls desc",
                "samlMetadataUrl",
                "samlMetadataUrl desc",
                "servicePrincipalNames",
                "servicePrincipalNames desc",
                "tags",
                "tags desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "addIns",
                "appDisplayName",
                "appId",
                "appOwnerOrganizationId",
                "appRoleAssignmentRequired",
                "appRoles",
                "displayName",
                "errorUrl",
                "homepage",
                "keyCredentials",
                "logoutUrl",
                "oauth2Permissions",
                "passwordCredentials",
                "preferredTokenSigningKeyThumbprint",
                "publisherName",
                "replyUrls",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "tags"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appRoleAssignedTo",
                "appRoleAssignments",
                "oauth2PermissionGrants",
                "memberOf",
                "createdObjects",
                "licenseDetails",
                "owners",
                "ownedObjects",
                "policies",
                "synchronization"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "servicePrincipals##licenseDetails"
        ],
        "summary": "Add new navigation property to licenseDetails for servicePrincipals",
        "operationId": "AddLicenseDetailsToServicePrincipals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/servicePrincipals('{id}')/synchronization": {
      "get": {
        "tags": [
          "servicePrincipals##synchronization"
        ],
        "summary": "Get synchronization from servicePrincipals",
        "operationId": "GetSynchronizationFromServicePrincipals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "addIns",
                "appDisplayName",
                "appId",
                "appOwnerOrganizationId",
                "appRoleAssignmentRequired",
                "appRoles",
                "displayName",
                "errorUrl",
                "homepage",
                "keyCredentials",
                "logoutUrl",
                "oauth2Permissions",
                "passwordCredentials",
                "preferredTokenSigningKeyThumbprint",
                "publisherName",
                "replyUrls",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "tags"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appRoleAssignedTo",
                "appRoleAssignments",
                "oauth2PermissionGrants",
                "memberOf",
                "createdObjects",
                "licenseDetails",
                "owners",
                "ownedObjects",
                "policies",
                "synchronization"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.synchronization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "servicePrincipals##synchronization"
        ],
        "summary": "Update the navigation property synchronization in servicePrincipals",
        "operationId": "UpdateSynchronizationInServicePrincipals",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.servicePrincipal"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get entities from settings",
        "operationId": "GetEntitiesFromSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "templateId",
                "templateId desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directorySetting",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directorySetting"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Add new entity to settings",
        "operationId": "AddEntityToSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/settings('{id}')": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get entity from settings by key",
        "operationId": "GetEntityFromSettingsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "settings"
        ],
        "summary": "Update entity in settings",
        "operationId": "UpdateEntityInSettings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directorySetting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Delete entity from settings",
        "operationId": "DeleteEntityFromSettings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entities from subscribedSkus",
        "operationId": "GetEntitiesFromSubscribedSkus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "capabilityStatus",
                "capabilityStatus desc",
                "consumedUnits",
                "consumedUnits desc",
                "prepaidUnits",
                "prepaidUnits desc",
                "servicePlans",
                "servicePlans desc",
                "skuId",
                "skuId desc",
                "skuPartNumber",
                "skuPartNumber desc",
                "appliesTo",
                "appliesTo desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber",
                "appliesTo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscribedSku",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscribedSku"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Add new entity to subscribedSkus",
        "operationId": "AddEntityToSubscribedSkus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscribedSkus('{id}')": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "operationId": "GetEntityFromSubscribedSkusByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber",
                "appliesTo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Update entity in subscribedSkus",
        "operationId": "UpdateEntityInSubscribedSkus",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Delete entity from subscribedSkus",
        "operationId": "DeleteEntityFromSubscribedSkus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get entities from users",
        "operationId": "GetEntitiesFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Select",
            "description": "N/A"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "required": true
          },
          {
            "in": "header",
            "name": "content-type",
            "description": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of user",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.user"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new entity to users",
        "operationId": "AddEntityToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve the properties and relationships of user object.",
        "operationId": "GetEntityFromUsersByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Select",
            "description": "N/A"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "required": true
          },
          {
            "in": "header",
            "name": "content-type",
            "description": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "DelegatedWork": [
              "User.ReadAll",
              "User.WriteAll",
              "User.WriteAll,User.ReadAll"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update entity in users",
        "operationId": "UpdateEntityInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete entity from users",
        "operationId": "DeleteEntityFromUsers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/extensions": {
      "get": {
        "tags": [
          "users##extensions"
        ],
        "summary": "Get extensions from users",
        "operationId": "GetExtensionsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##extensions"
        ],
        "summary": "Add new navigation property to extensions for users",
        "operationId": "AddExtensionsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/scopedRoleMemberOf": {
      "get": {
        "tags": [
          "users##scopedRoleMemberOf"
        ],
        "summary": "Get scopedRoleMemberOf from users",
        "operationId": "GetScopedRoleMemberOfFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##scopedRoleMemberOf"
        ],
        "summary": "Add new navigation property to scopedRoleMemberOf for users",
        "operationId": "AddScopedRoleMemberOfToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/licenseDetails": {
      "get": {
        "tags": [
          "users##licenseDetails"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "GetLicenseDetailsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##licenseDetails"
        ],
        "summary": "Add new navigation property to licenseDetails for users",
        "operationId": "AddLicenseDetailsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/activities": {
      "get": {
        "tags": [
          "users##activities"
        ],
        "summary": "Get activities from users",
        "operationId": "GetActivitiesFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.activity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##activities"
        ],
        "summary": "Add new navigation property to activities for users",
        "operationId": "AddActivitiesToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/outlook": {
      "get": {
        "tags": [
          "users##outlook"
        ],
        "summary": "Get outlook from users",
        "operationId": "GetOutlookFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.outlookUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##outlook"
        ],
        "summary": "Update the navigation property outlook in users",
        "operationId": "UpdateOutlookInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/messages": {
      "get": {
        "tags": [
          "users##messages"
        ],
        "summary": "Get messages from users",
        "operationId": "GetMessagesFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##messages"
        ],
        "summary": "Add new navigation property to messages for users",
        "operationId": "AddMessagesToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/joinedGroups": {
      "get": {
        "tags": [
          "users##joinedGroups"
        ],
        "summary": "Get joinedGroups from users",
        "operationId": "GetJoinedGroupsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/mailFolders": {
      "get": {
        "tags": [
          "users##mailFolders"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "GetMailFoldersFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##mailFolders"
        ],
        "summary": "Add new navigation property to mailFolders for users",
        "operationId": "AddMailFoldersToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendar": {
      "get": {
        "tags": [
          "users##calendar"
        ],
        "summary": "Get calendar from users",
        "operationId": "GetCalendarFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendars": {
      "get": {
        "tags": [
          "users##calendars"
        ],
        "summary": "Get calendars from users",
        "operationId": "GetCalendarsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##calendars"
        ],
        "summary": "Add new navigation property to calendars for users",
        "operationId": "AddCalendarsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendarGroups": {
      "get": {
        "tags": [
          "users##calendarGroups"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "GetCalendarGroupsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##calendarGroups"
        ],
        "summary": "Add new navigation property to calendarGroups for users",
        "operationId": "AddCalendarGroupsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendarView": {
      "get": {
        "tags": [
          "users##calendarView"
        ],
        "summary": "Get calendarView from users",
        "operationId": "GetCalendarViewFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/events": {
      "get": {
        "tags": [
          "users##events"
        ],
        "summary": "Get events from users",
        "operationId": "GetEventsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##events"
        ],
        "summary": "Add new navigation property to events for users",
        "operationId": "AddEventsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/people": {
      "get": {
        "tags": [
          "users##people"
        ],
        "summary": "Get people from users",
        "operationId": "GetPeopleFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/contacts": {
      "get": {
        "tags": [
          "users##contacts"
        ],
        "summary": "Get contacts from users",
        "operationId": "GetContactsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##contacts"
        ],
        "summary": "Add new navigation property to contacts for users",
        "operationId": "AddContactsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/contactFolders": {
      "get": {
        "tags": [
          "users##contactFolders"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "GetContactFoldersFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##contactFolders"
        ],
        "summary": "Add new navigation property to contactFolders for users",
        "operationId": "AddContactFoldersToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/inferenceClassification": {
      "get": {
        "tags": [
          "users##inferenceClassification"
        ],
        "summary": "Get inferenceClassification from users",
        "operationId": "GetInferenceClassificationFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.inferenceClassification"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##inferenceClassification"
        ],
        "summary": "Update the navigation property inferenceClassification in users",
        "operationId": "UpdateInferenceClassificationInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/photo": {
      "get": {
        "tags": [
          "users##photo"
        ],
        "summary": "Get photo from users",
        "operationId": "GetPhotoFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##photo"
        ],
        "summary": "Update the navigation property photo in users",
        "operationId": "UpdatePhotoInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/photos": {
      "get": {
        "tags": [
          "users##photos"
        ],
        "summary": "Get photos from users",
        "operationId": "GetPhotosFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/drive": {
      "get": {
        "tags": [
          "users##drive"
        ],
        "summary": "Get drive from users",
        "operationId": "GetDriveFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##drive"
        ],
        "summary": "Update the navigation property drive in users",
        "operationId": "UpdateDriveInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/drives": {
      "get": {
        "tags": [
          "users##drives"
        ],
        "summary": "Get drives from users",
        "operationId": "GetDrivesFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##drives"
        ],
        "summary": "Add new navigation property to drives for users",
        "operationId": "AddDrivesToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/insights": {
      "get": {
        "tags": [
          "users##insights"
        ],
        "summary": "Get insights from users",
        "operationId": "GetInsightsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.officeGraphInsights"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##insights"
        ],
        "summary": "Update the navigation property insights in users",
        "operationId": "UpdateInsightsInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/planner": {
      "get": {
        "tags": [
          "users##planner"
        ],
        "summary": "Get planner from users",
        "operationId": "GetPlannerFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##planner"
        ],
        "summary": "Update the navigation property planner in users",
        "operationId": "UpdatePlannerInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/onenote": {
      "get": {
        "tags": [
          "users##onenote"
        ],
        "summary": "Get onenote from users",
        "operationId": "GetOnenoteFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users##onenote"
        ],
        "summary": "Update the navigation property onenote in users",
        "operationId": "UpdateOnenoteInUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/devices": {
      "get": {
        "tags": [
          "users##devices"
        ],
        "summary": "Get devices from users",
        "operationId": "GetDevicesFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##devices"
        ],
        "summary": "Add new navigation property to devices for users",
        "operationId": "AddDevicesToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/joinedTeams": {
      "get": {
        "tags": [
          "users##joinedTeams"
        ],
        "summary": "Get joinedTeams from users",
        "operationId": "GetJoinedTeamsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##joinedTeams"
        ],
        "summary": "Add new navigation property to joinedTeams for users",
        "operationId": "AddJoinedTeamsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "users##deviceManagementTroubleshootingEvents"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from users",
        "operationId": "GetDeviceManagementTroubleshootingEventsFromUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users##deviceManagementTroubleshootingEvents"
        ],
        "summary": "Add new navigation property to deviceManagementTroubleshootingEvents for users",
        "operationId": "AddDeviceManagementTroubleshootingEventsToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.assignedLicense"
                  }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "InvokeInvalidateAllRefreshTokens",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Message": {
                  "$ref": "#/definitions/microsoft.graph.message"
                },
                "SaveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "InvokeFindMeetingTimesOLD",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionHints": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "MinimumAttendeePercentage": {
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "InvokeGetMailTips",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EmailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "MailTipsOptions": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "StartDateTime",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDateTime",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.reminder"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "InvokeFindRoomLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "RoomList",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "InvokeRemoveAllDevicesFromManagement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "InvokeGetManagedAppDiagnosticStatuses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "InvokeGetManagedAppPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "InvokeWipeManagedAppRegistrationByDeviceTag",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "policies"
        ],
        "summary": "Get entities from policies",
        "operationId": "GetEntitiesFromPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "alternativeIdentifier",
                "alternativeIdentifier desc",
                "definition",
                "definition desc",
                "displayName",
                "displayName desc",
                "isOrganizationDefault",
                "isOrganizationDefault desc",
                "keyCredentials",
                "keyCredentials desc",
                "type",
                "type desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "alternativeIdentifier",
                "definition",
                "displayName",
                "isOrganizationDefault",
                "keyCredentials",
                "type"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of policy",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.policy"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "policies"
        ],
        "summary": "Add new entity to policies",
        "operationId": "AddEntityToPolicies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.policy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.policy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/policies('{id}')": {
      "get": {
        "tags": [
          "policies"
        ],
        "summary": "Get entity from policies by key",
        "operationId": "GetEntityFromPoliciesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "alternativeIdentifier",
                "definition",
                "displayName",
                "isOrganizationDefault",
                "keyCredentials",
                "type"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.policy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "policies"
        ],
        "summary": "Update entity in policies",
        "operationId": "UpdateEntityInPolicies",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.policy"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "policies"
        ],
        "summary": "Delete entity from policies",
        "operationId": "DeleteEntityFromPolicies",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entities from contracts",
        "operationId": "GetEntitiesFromContracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "contractType",
                "contractType desc",
                "customerId",
                "customerId desc",
                "defaultDomainName",
                "defaultDomainName desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of contract",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.contract"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contracts"
        ],
        "summary": "Add new entity to contracts",
        "operationId": "AddEntityToContracts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contracts('{id}')": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entity from contracts by key",
        "operationId": "GetEntityFromContractsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contracts"
        ],
        "summary": "Update entity in contracts",
        "operationId": "UpdateEntityInContracts",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contracts"
        ],
        "summary": "Delete entity from contracts",
        "operationId": "DeleteEntityFromContracts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entities from workbooks",
        "operationId": "GetEntitiesFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of driveItem",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.driveItem"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new entity to workbooks",
        "operationId": "AddEntityToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entity from workbooks by key",
        "operationId": "GetEntityFromWorkbooksByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks"
        ],
        "summary": "Update entity in workbooks",
        "operationId": "UpdateEntityInWorkbooks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "workbooks"
        ],
        "summary": "Delete entity from workbooks",
        "operationId": "DeleteEntityFromWorkbooks",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/workbook": {
      "get": {
        "tags": [
          "workbooks##workbook"
        ],
        "summary": "Get workbook from workbooks",
        "operationId": "GetWorkbookFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.workbook"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks##workbook"
        ],
        "summary": "Update the navigation property workbook in workbooks",
        "operationId": "UpdateWorkbookInWorkbooks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/activities": {
      "get": {
        "tags": [
          "workbooks##activities"
        ],
        "summary": "Get activities from workbooks",
        "operationId": "GetActivitiesFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.itemActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks##activities"
        ],
        "summary": "Add new navigation property to activities for workbooks",
        "operationId": "AddActivitiesToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/children": {
      "get": {
        "tags": [
          "workbooks##children"
        ],
        "summary": "Get children from workbooks",
        "operationId": "GetChildrenFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks##children"
        ],
        "summary": "Add new navigation property to children for workbooks",
        "operationId": "AddChildrenToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/listItem": {
      "get": {
        "tags": [
          "workbooks##listItem"
        ],
        "summary": "Get listItem from workbooks",
        "operationId": "GetListItemFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.listItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks##listItem"
        ],
        "summary": "Update the navigation property listItem in workbooks",
        "operationId": "UpdateListItemInWorkbooks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/permissions": {
      "get": {
        "tags": [
          "workbooks##permissions"
        ],
        "summary": "Get permissions from workbooks",
        "operationId": "GetPermissionsFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.permission"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks##permissions"
        ],
        "summary": "Add new navigation property to permissions for workbooks",
        "operationId": "AddPermissionsToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/thumbnails": {
      "get": {
        "tags": [
          "workbooks##thumbnails"
        ],
        "summary": "Get thumbnails from workbooks",
        "operationId": "GetThumbnailsFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.thumbnailSet"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks##thumbnails"
        ],
        "summary": "Add new navigation property to thumbnails for workbooks",
        "operationId": "AddThumbnailsToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/versions": {
      "get": {
        "tags": [
          "workbooks##versions"
        ],
        "summary": "Get versions from workbooks",
        "operationId": "GetVersionsFromWorkbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "workbook",
                "activities",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItemVersion"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks##versions"
        ],
        "summary": "Add new navigation property to versions for workbooks",
        "operationId": "AddVersionsToWorkbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta(token={token})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.checkin": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action checkin",
        "operationId": "InvokeCheckin",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "checkInAs": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.checkout": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action checkout",
        "operationId": "InvokeCheckout",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.copy": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action copy",
        "operationId": "InvokeCopy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "parentReference": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createLink": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createLink",
        "operationId": "InvokeCreateLink",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                },
                "expirationDateTime": {
                  "format": "date-time",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "recipients": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "InvokeCreateUploadSession",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.invite": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action invite",
        "operationId": "InvokeInvite",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "recipients": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.driveRecipient"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.validatePermission": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action validatePermission",
        "operationId": "InvokeValidatePermission",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "challengeToken": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entities from drives",
        "operationId": "GetEntitiesFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of drive",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.drive"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives"
        ],
        "summary": "Add new entity to drives",
        "operationId": "AddEntityToDrives",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entity from drives by key",
        "operationId": "GetEntityFromDrivesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives"
        ],
        "summary": "Update entity in drives",
        "operationId": "UpdateEntityInDrives",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "drives"
        ],
        "summary": "Delete entity from drives",
        "operationId": "DeleteEntityFromDrives",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/activities": {
      "get": {
        "tags": [
          "drives##activities"
        ],
        "summary": "Get activities from drives",
        "operationId": "GetActivitiesFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.itemActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives##activities"
        ],
        "summary": "Add new navigation property to activities for drives",
        "operationId": "AddActivitiesToDrives",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/items": {
      "get": {
        "tags": [
          "drives##items"
        ],
        "summary": "Get items from drives",
        "operationId": "GetItemsFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives##items"
        ],
        "summary": "Add new navigation property to items for drives",
        "operationId": "AddItemsToDrives",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/list": {
      "get": {
        "tags": [
          "drives##list"
        ],
        "summary": "Get list from drives",
        "operationId": "GetListFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives##list"
        ],
        "summary": "Update the navigation property list in drives",
        "operationId": "UpdateListInDrives",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/root": {
      "get": {
        "tags": [
          "drives##root"
        ],
        "summary": "Get root from drives",
        "operationId": "GetRootFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives##root"
        ],
        "summary": "Update the navigation property root in drives",
        "operationId": "UpdateRootInDrives",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/special": {
      "get": {
        "tags": [
          "drives##special"
        ],
        "summary": "Get special from drives",
        "operationId": "GetSpecialFromDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives##special"
        ],
        "summary": "Add new navigation property to special for drives",
        "operationId": "AddSpecialToDrives",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function recent",
        "operationId": "InvokeRecent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "InvokeSharedWithMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entities from shares",
        "operationId": "GetEntitiesFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of sharedDriveItem",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares"
        ],
        "summary": "Add new entity to shares",
        "operationId": "AddEntityToShares",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entity from shares by key",
        "operationId": "GetEntityFromSharesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update entity in shares",
        "operationId": "UpdateEntityInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "shares"
        ],
        "summary": "Delete entity from shares",
        "operationId": "DeleteEntityFromShares",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/driveItem": {
      "get": {
        "tags": [
          "shares##driveItem"
        ],
        "summary": "Get driveItem from shares",
        "operationId": "GetDriveItemFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares##driveItem"
        ],
        "summary": "Update the navigation property driveItem in shares",
        "operationId": "UpdateDriveItemInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/items": {
      "get": {
        "tags": [
          "shares##items"
        ],
        "summary": "Get items from shares",
        "operationId": "GetItemsFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares##items"
        ],
        "summary": "Add new navigation property to items for shares",
        "operationId": "AddItemsToShares",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/list": {
      "get": {
        "tags": [
          "shares##list"
        ],
        "summary": "Get list from shares",
        "operationId": "GetListFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares##list"
        ],
        "summary": "Update the navigation property list in shares",
        "operationId": "UpdateListInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/listItem": {
      "get": {
        "tags": [
          "shares##listItem"
        ],
        "summary": "Get listItem from shares",
        "operationId": "GetListItemFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.listItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares##listItem"
        ],
        "summary": "Update the navigation property listItem in shares",
        "operationId": "UpdateListItemInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/root": {
      "get": {
        "tags": [
          "shares##root"
        ],
        "summary": "Get root from shares",
        "operationId": "GetRootFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares##root"
        ],
        "summary": "Update the navigation property root in shares",
        "operationId": "UpdateRootInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/site": {
      "get": {
        "tags": [
          "shares##site"
        ],
        "summary": "Get site from shares",
        "operationId": "GetSiteFromShares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares##site"
        ],
        "summary": "Update the navigation property site in shares",
        "operationId": "UpdateSiteInShares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entities from sites",
        "operationId": "GetEntitiesFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of site",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.site"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new entity to sites",
        "operationId": "AddEntityToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entity from sites by key",
        "operationId": "GetEntityFromSitesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "summary": "Update entity in sites",
        "operationId": "UpdateEntityInSites",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "sites"
        ],
        "summary": "Delete entity from sites",
        "operationId": "DeleteEntityFromSites",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/columns": {
      "get": {
        "tags": [
          "sites##columns"
        ],
        "summary": "Get columns from sites",
        "operationId": "GetColumnsFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.columnDefinition"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##columns"
        ],
        "summary": "Add new navigation property to columns for sites",
        "operationId": "AddColumnsToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/contentTypes": {
      "get": {
        "tags": [
          "sites##contentTypes"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "GetContentTypesFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contentType"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##contentTypes"
        ],
        "summary": "Add new navigation property to contentTypes for sites",
        "operationId": "AddContentTypesToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/drive": {
      "get": {
        "tags": [
          "sites##drive"
        ],
        "summary": "Get drive from sites",
        "operationId": "GetDriveFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites##drive"
        ],
        "summary": "Update the navigation property drive in sites",
        "operationId": "UpdateDriveInSites",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/drives": {
      "get": {
        "tags": [
          "sites##drives"
        ],
        "summary": "Get drives from sites",
        "operationId": "GetDrivesFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##drives"
        ],
        "summary": "Add new navigation property to drives for sites",
        "operationId": "AddDrivesToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/items": {
      "get": {
        "tags": [
          "sites##items"
        ],
        "summary": "Get items from sites",
        "operationId": "GetItemsFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.baseItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##items"
        ],
        "summary": "Add new navigation property to items for sites",
        "operationId": "AddItemsToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/lists": {
      "get": {
        "tags": [
          "sites##lists"
        ],
        "summary": "Get lists from sites",
        "operationId": "GetListsFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##lists"
        ],
        "summary": "Add new navigation property to lists for sites",
        "operationId": "AddListsToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/sites": {
      "get": {
        "tags": [
          "sites##sites"
        ],
        "summary": "Get sites from sites",
        "operationId": "GetSitesFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites##sites"
        ],
        "summary": "Add new navigation property to sites for sites",
        "operationId": "AddSitesToSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/onenote": {
      "get": {
        "tags": [
          "sites##onenote"
        ],
        "summary": "Get onenote from sites",
        "operationId": "GetOnenoteFromSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites##onenote"
        ],
        "summary": "Update the navigation property onenote in sites",
        "operationId": "UpdateOnenoteInSites",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/microsoft.graph.getByPath(path={path})": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Invoke function getByPath",
        "operationId": "InvokeGetByPath",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "GetEntitiesFromSubscriptions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/search"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "resource",
                "changeType",
                "clientState",
                "notificationUrl",
                "expirationDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscription",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscription"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "AddEntityToSubscriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscriptions('{id}')": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "GetEntityFromSubscriptionsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "resource",
                "changeType",
                "clientState",
                "notificationUrl",
                "expirationDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "UpdateEntityInSubscriptions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "DeleteEntityFromSubscriptions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/identityRiskEvents": {
      "get": {
        "tags": [
          "identityRiskEvents"
        ],
        "summary": "Get entities from identityRiskEvents",
        "operationId": "GetEntitiesFromIdentityRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of identityRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "identityRiskEvents"
        ],
        "summary": "Add new entity to identityRiskEvents",
        "operationId": "AddEntityToIdentityRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/identityRiskEvents('{id}')": {
      "get": {
        "tags": [
          "identityRiskEvents"
        ],
        "summary": "Get entity from identityRiskEvents by key",
        "operationId": "GetEntityFromIdentityRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "identityRiskEvents"
        ],
        "summary": "Update entity in identityRiskEvents",
        "operationId": "UpdateEntityInIdentityRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "identityRiskEvents"
        ],
        "summary": "Delete entity from identityRiskEvents",
        "operationId": "DeleteEntityFromIdentityRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/impossibleTravelRiskEvents": {
      "get": {
        "tags": [
          "impossibleTravelRiskEvents"
        ],
        "summary": "Get entities from impossibleTravelRiskEvents",
        "operationId": "GetEntitiesFromImpossibleTravelRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc",
                "location",
                "location desc",
                "ipAddress",
                "ipAddress desc",
                "userAgent",
                "userAgent desc",
                "deviceInformation",
                "deviceInformation desc",
                "isAtypicalLocation",
                "isAtypicalLocation desc",
                "previousSigninDateTime",
                "previousSigninDateTime desc",
                "previousLocation",
                "previousLocation desc",
                "previousIpAddress",
                "previousIpAddress desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress",
                "userAgent",
                "deviceInformation",
                "isAtypicalLocation",
                "previousSigninDateTime",
                "previousLocation",
                "previousIpAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of impossibleTravelRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.impossibleTravelRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "impossibleTravelRiskEvents"
        ],
        "summary": "Add new entity to impossibleTravelRiskEvents",
        "operationId": "AddEntityToImpossibleTravelRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.impossibleTravelRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.impossibleTravelRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/impossibleTravelRiskEvents('{id}')": {
      "get": {
        "tags": [
          "impossibleTravelRiskEvents"
        ],
        "summary": "Get entity from impossibleTravelRiskEvents by key",
        "operationId": "GetEntityFromImpossibleTravelRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress",
                "userAgent",
                "deviceInformation",
                "isAtypicalLocation",
                "previousSigninDateTime",
                "previousLocation",
                "previousIpAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.impossibleTravelRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "impossibleTravelRiskEvents"
        ],
        "summary": "Update entity in impossibleTravelRiskEvents",
        "operationId": "UpdateEntityInImpossibleTravelRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.impossibleTravelRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "impossibleTravelRiskEvents"
        ],
        "summary": "Delete entity from impossibleTravelRiskEvents",
        "operationId": "DeleteEntityFromImpossibleTravelRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/leakedCredentialsRiskEvents": {
      "get": {
        "tags": [
          "leakedCredentialsRiskEvents"
        ],
        "summary": "Get entities from leakedCredentialsRiskEvents",
        "operationId": "GetEntitiesFromLeakedCredentialsRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of leakedCredentialsRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.leakedCredentialsRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "leakedCredentialsRiskEvents"
        ],
        "summary": "Add new entity to leakedCredentialsRiskEvents",
        "operationId": "AddEntityToLeakedCredentialsRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.leakedCredentialsRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.leakedCredentialsRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/leakedCredentialsRiskEvents('{id}')": {
      "get": {
        "tags": [
          "leakedCredentialsRiskEvents"
        ],
        "summary": "Get entity from leakedCredentialsRiskEvents by key",
        "operationId": "GetEntityFromLeakedCredentialsRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.leakedCredentialsRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "leakedCredentialsRiskEvents"
        ],
        "summary": "Update entity in leakedCredentialsRiskEvents",
        "operationId": "UpdateEntityInLeakedCredentialsRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.leakedCredentialsRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "leakedCredentialsRiskEvents"
        ],
        "summary": "Delete entity from leakedCredentialsRiskEvents",
        "operationId": "DeleteEntityFromLeakedCredentialsRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/anonymousIpRiskEvents": {
      "get": {
        "tags": [
          "anonymousIpRiskEvents"
        ],
        "summary": "Get entities from anonymousIpRiskEvents",
        "operationId": "GetEntitiesFromAnonymousIpRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc",
                "location",
                "location desc",
                "ipAddress",
                "ipAddress desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of anonymousIpRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.anonymousIpRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "anonymousIpRiskEvents"
        ],
        "summary": "Add new entity to anonymousIpRiskEvents",
        "operationId": "AddEntityToAnonymousIpRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.anonymousIpRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.anonymousIpRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/anonymousIpRiskEvents('{id}')": {
      "get": {
        "tags": [
          "anonymousIpRiskEvents"
        ],
        "summary": "Get entity from anonymousIpRiskEvents by key",
        "operationId": "GetEntityFromAnonymousIpRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.anonymousIpRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "anonymousIpRiskEvents"
        ],
        "summary": "Update entity in anonymousIpRiskEvents",
        "operationId": "UpdateEntityInAnonymousIpRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.anonymousIpRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "anonymousIpRiskEvents"
        ],
        "summary": "Delete entity from anonymousIpRiskEvents",
        "operationId": "DeleteEntityFromAnonymousIpRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/suspiciousIpRiskEvents": {
      "get": {
        "tags": [
          "suspiciousIpRiskEvents"
        ],
        "summary": "Get entities from suspiciousIpRiskEvents",
        "operationId": "GetEntitiesFromSuspiciousIpRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc",
                "location",
                "location desc",
                "ipAddress",
                "ipAddress desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of suspiciousIpRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.suspiciousIpRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "suspiciousIpRiskEvents"
        ],
        "summary": "Add new entity to suspiciousIpRiskEvents",
        "operationId": "AddEntityToSuspiciousIpRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.suspiciousIpRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.suspiciousIpRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/suspiciousIpRiskEvents('{id}')": {
      "get": {
        "tags": [
          "suspiciousIpRiskEvents"
        ],
        "summary": "Get entity from suspiciousIpRiskEvents by key",
        "operationId": "GetEntityFromSuspiciousIpRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.suspiciousIpRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "suspiciousIpRiskEvents"
        ],
        "summary": "Update entity in suspiciousIpRiskEvents",
        "operationId": "UpdateEntityInSuspiciousIpRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.suspiciousIpRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "suspiciousIpRiskEvents"
        ],
        "summary": "Delete entity from suspiciousIpRiskEvents",
        "operationId": "DeleteEntityFromSuspiciousIpRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/unfamiliarLocationRiskEvents": {
      "get": {
        "tags": [
          "unfamiliarLocationRiskEvents"
        ],
        "summary": "Get entities from unfamiliarLocationRiskEvents",
        "operationId": "GetEntitiesFromUnfamiliarLocationRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc",
                "location",
                "location desc",
                "ipAddress",
                "ipAddress desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of unfamiliarLocationRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.unfamiliarLocationRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "unfamiliarLocationRiskEvents"
        ],
        "summary": "Add new entity to unfamiliarLocationRiskEvents",
        "operationId": "AddEntityToUnfamiliarLocationRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.unfamiliarLocationRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.unfamiliarLocationRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/unfamiliarLocationRiskEvents('{id}')": {
      "get": {
        "tags": [
          "unfamiliarLocationRiskEvents"
        ],
        "summary": "Get entity from unfamiliarLocationRiskEvents by key",
        "operationId": "GetEntityFromUnfamiliarLocationRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.unfamiliarLocationRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "unfamiliarLocationRiskEvents"
        ],
        "summary": "Update entity in unfamiliarLocationRiskEvents",
        "operationId": "UpdateEntityInUnfamiliarLocationRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.unfamiliarLocationRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "unfamiliarLocationRiskEvents"
        ],
        "summary": "Delete entity from unfamiliarLocationRiskEvents",
        "operationId": "DeleteEntityFromUnfamiliarLocationRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/malwareRiskEvents": {
      "get": {
        "tags": [
          "malwareRiskEvents"
        ],
        "summary": "Get entities from malwareRiskEvents",
        "operationId": "GetEntitiesFromMalwareRiskEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userDisplayName",
                "userDisplayName desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "riskEventDateTime",
                "riskEventDateTime desc",
                "riskEventType",
                "riskEventType desc",
                "riskLevel",
                "riskLevel desc",
                "riskEventStatus",
                "riskEventStatus desc",
                "closedDateTime",
                "closedDateTime desc",
                "createdDateTime",
                "createdDateTime desc",
                "userId",
                "userId desc",
                "location",
                "location desc",
                "ipAddress",
                "ipAddress desc",
                "deviceInformation",
                "deviceInformation desc",
                "malwareName",
                "malwareName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress",
                "deviceInformation",
                "malwareName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of malwareRiskEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.malwareRiskEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "malwareRiskEvents"
        ],
        "summary": "Add new entity to malwareRiskEvents",
        "operationId": "AddEntityToMalwareRiskEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.malwareRiskEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.malwareRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/malwareRiskEvents('{id}')": {
      "get": {
        "tags": [
          "malwareRiskEvents"
        ],
        "summary": "Get entity from malwareRiskEvents by key",
        "operationId": "GetEntityFromMalwareRiskEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userDisplayName",
                "userPrincipalName",
                "riskEventDateTime",
                "riskEventType",
                "riskLevel",
                "riskEventStatus",
                "closedDateTime",
                "createdDateTime",
                "userId",
                "location",
                "ipAddress",
                "deviceInformation",
                "malwareName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "impactedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.malwareRiskEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "malwareRiskEvents"
        ],
        "summary": "Update entity in malwareRiskEvents",
        "operationId": "UpdateEntityInMalwareRiskEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.malwareRiskEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "malwareRiskEvents"
        ],
        "summary": "Delete entity from malwareRiskEvents",
        "operationId": "DeleteEntityFromMalwareRiskEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles": {
      "get": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Get entities from privilegedRoles",
        "operationId": "GetEntitiesFromPrivilegedRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "name",
                "name desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "settings",
                "assignments",
                "summary"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of privilegedRole",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.privilegedRole"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Add new entity to privilegedRoles",
        "operationId": "AddEntityToPrivilegedRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles('{id}')": {
      "get": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Get entity from privilegedRoles by key",
        "operationId": "GetEntityFromPrivilegedRolesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "settings",
                "assignments",
                "summary"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Update entity in privilegedRoles",
        "operationId": "UpdateEntityInPrivilegedRoles",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Delete entity from privilegedRoles",
        "operationId": "DeleteEntityFromPrivilegedRoles",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles('{id}')/settings": {
      "get": {
        "tags": [
          "privilegedRoles##settings"
        ],
        "summary": "Get settings from privilegedRoles",
        "operationId": "GetSettingsFromPrivilegedRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "settings",
                "assignments",
                "summary"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleSettings"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoles##settings"
        ],
        "summary": "Update the navigation property settings in privilegedRoles",
        "operationId": "UpdateSettingsInPrivilegedRoles",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles('{id}')/summary": {
      "get": {
        "tags": [
          "privilegedRoles##summary"
        ],
        "summary": "Get summary from privilegedRoles",
        "operationId": "GetSummaryFromPrivilegedRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "settings",
                "assignments",
                "summary"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoles##summary"
        ],
        "summary": "Update the navigation property summary in privilegedRoles",
        "operationId": "UpdateSummaryInPrivilegedRoles",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles('{id}')/microsoft.graph.selfActivate": {
      "post": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Invoke action selfActivate",
        "operationId": "InvokeSelfActivate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string"
                },
                "duration": {
                  "type": "string"
                },
                "ticketNumber": {
                  "type": "string"
                },
                "ticketSystem": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoles('{id}')/microsoft.graph.selfDeactivate": {
      "post": {
        "tags": [
          "privilegedRoles"
        ],
        "summary": "Invoke action selfDeactivate",
        "operationId": "InvokeSelfDeactivate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments": {
      "get": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Get entities from privilegedRoleAssignments",
        "operationId": "GetEntitiesFromPrivilegedRoleAssignments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userId",
                "userId desc",
                "roleId",
                "roleId desc",
                "isElevated",
                "isElevated desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "resultMessage",
                "resultMessage desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "isElevated",
                "expirationDateTime",
                "resultMessage"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of privilegedRoleAssignment",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Add new entity to privilegedRoleAssignments",
        "operationId": "AddEntityToPrivilegedRoleAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments('{id}')": {
      "get": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Get entity from privilegedRoleAssignments by key",
        "operationId": "GetEntityFromPrivilegedRoleAssignmentsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "isElevated",
                "expirationDateTime",
                "resultMessage"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Update entity in privilegedRoleAssignments",
        "operationId": "UpdateEntityInPrivilegedRoleAssignments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Delete entity from privilegedRoleAssignments",
        "operationId": "DeleteEntityFromPrivilegedRoleAssignments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments('{id}')/roleInfo": {
      "get": {
        "tags": [
          "privilegedRoleAssignments##roleInfo"
        ],
        "summary": "Get roleInfo from privilegedRoleAssignments",
        "operationId": "GetRoleInfoFromPrivilegedRoleAssignments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "isElevated",
                "expirationDateTime",
                "resultMessage"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoleAssignments##roleInfo"
        ],
        "summary": "Update the navigation property roleInfo in privilegedRoleAssignments",
        "operationId": "UpdateRoleInfoInPrivilegedRoleAssignments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments/microsoft.graph.my()": {
      "get": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Invoke function my",
        "operationId": "InvokeMy",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments('{id}')/microsoft.graph.makePermanent": {
      "post": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Invoke action makePermanent",
        "operationId": "InvokeMakePermanent",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string"
                },
                "ticketNumber": {
                  "type": "string"
                },
                "ticketSystem": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments('{id}')/microsoft.graph.makeEligible": {
      "post": {
        "tags": [
          "privilegedRoleAssignments"
        ],
        "summary": "Invoke action makeEligible",
        "operationId": "InvokeMakeEligible",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedOperationEvents": {
      "get": {
        "tags": [
          "privilegedOperationEvents"
        ],
        "summary": "Get entities from privilegedOperationEvents",
        "operationId": "GetEntitiesFromPrivilegedOperationEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userId",
                "userId desc",
                "userName",
                "userName desc",
                "userMail",
                "userMail desc",
                "roleId",
                "roleId desc",
                "roleName",
                "roleName desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "creationDateTime",
                "creationDateTime desc",
                "requestorId",
                "requestorId desc",
                "requestorName",
                "requestorName desc",
                "tenantId",
                "tenantId desc",
                "requestType",
                "requestType desc",
                "additionalInformation",
                "additionalInformation desc",
                "referenceKey",
                "referenceKey desc",
                "referenceSystem",
                "referenceSystem desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "userName",
                "userMail",
                "roleId",
                "roleName",
                "expirationDateTime",
                "creationDateTime",
                "requestorId",
                "requestorName",
                "tenantId",
                "requestType",
                "additionalInformation",
                "referenceKey",
                "referenceSystem"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of privilegedOperationEvent",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.privilegedOperationEvent"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedOperationEvents"
        ],
        "summary": "Add new entity to privilegedOperationEvents",
        "operationId": "AddEntityToPrivilegedOperationEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedOperationEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedOperationEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedOperationEvents('{id}')": {
      "get": {
        "tags": [
          "privilegedOperationEvents"
        ],
        "summary": "Get entity from privilegedOperationEvents by key",
        "operationId": "GetEntityFromPrivilegedOperationEventsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "userName",
                "userMail",
                "roleId",
                "roleName",
                "expirationDateTime",
                "creationDateTime",
                "requestorId",
                "requestorName",
                "tenantId",
                "requestType",
                "additionalInformation",
                "referenceKey",
                "referenceSystem"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedOperationEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedOperationEvents"
        ],
        "summary": "Update entity in privilegedOperationEvents",
        "operationId": "UpdateEntityInPrivilegedOperationEvents",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedOperationEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedOperationEvents"
        ],
        "summary": "Delete entity from privilegedOperationEvents",
        "operationId": "DeleteEntityFromPrivilegedOperationEvents",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus": {
      "get": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Get entities from privilegedSignupStatus",
        "operationId": "GetEntitiesFromPrivilegedSignupStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "isRegistered",
                "isRegistered desc",
                "status",
                "status desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isRegistered",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of privilegedSignupStatus",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.privilegedSignupStatus"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Add new entity to privilegedSignupStatus",
        "operationId": "AddEntityToPrivilegedSignupStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedSignupStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedSignupStatus"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus('{id}')": {
      "get": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Get entity from privilegedSignupStatus by key",
        "operationId": "GetEntityFromPrivilegedSignupStatusByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isRegistered",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedSignupStatus"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Update entity in privilegedSignupStatus",
        "operationId": "UpdateEntityInPrivilegedSignupStatus",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedSignupStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Delete entity from privilegedSignupStatus",
        "operationId": "DeleteEntityFromPrivilegedSignupStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.signUp": {
      "post": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Invoke action signUp",
        "operationId": "InvokeSignUp",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.isSignedUp()": {
      "get": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Invoke function isSignedUp",
        "operationId": "InvokeIsSignedUp",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.canSignUp()": {
      "get": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Invoke function canSignUp",
        "operationId": "InvokeCanSignUp",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.completeSetup": {
      "post": {
        "tags": [
          "privilegedSignupStatus"
        ],
        "summary": "Invoke action completeSetup",
        "operationId": "InvokeCompleteSetup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tenantSetupInfo": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedApproval": {
      "get": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Get entities from privilegedApproval",
        "operationId": "GetEntitiesFromPrivilegedApproval",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userId",
                "userId desc",
                "roleId",
                "roleId desc",
                "approvalType",
                "approvalType desc",
                "approvalState",
                "approvalState desc",
                "approvalDuration",
                "approvalDuration desc",
                "requestorReason",
                "requestorReason desc",
                "approverReason",
                "approverReason desc",
                "startDateTime",
                "startDateTime desc",
                "endDateTime",
                "endDateTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "approvalType",
                "approvalState",
                "approvalDuration",
                "requestorReason",
                "approverReason",
                "startDateTime",
                "endDateTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of privilegedApproval",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.privilegedApproval"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Add new entity to privilegedApproval",
        "operationId": "AddEntityToPrivilegedApproval",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedApproval"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedApproval"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedApproval('{id}')": {
      "get": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Get entity from privilegedApproval by key",
        "operationId": "GetEntityFromPrivilegedApprovalByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "approvalType",
                "approvalState",
                "approvalDuration",
                "requestorReason",
                "approverReason",
                "startDateTime",
                "endDateTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedApproval"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Update entity in privilegedApproval",
        "operationId": "UpdateEntityInPrivilegedApproval",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedApproval"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Delete entity from privilegedApproval",
        "operationId": "DeleteEntityFromPrivilegedApproval",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedApproval('{id}')/roleInfo": {
      "get": {
        "tags": [
          "privilegedApproval##roleInfo"
        ],
        "summary": "Get roleInfo from privilegedApproval",
        "operationId": "GetRoleInfoFromPrivilegedApproval",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "roleId",
                "approvalType",
                "approvalState",
                "approvalDuration",
                "requestorReason",
                "approverReason",
                "startDateTime",
                "endDateTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "roleInfo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedApproval##roleInfo"
        ],
        "summary": "Update the navigation property roleInfo in privilegedApproval",
        "operationId": "UpdateRoleInfoInPrivilegedApproval",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.privilegedApproval"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/privilegedApproval/microsoft.graph.myRequests()": {
      "get": {
        "tags": [
          "privilegedApproval"
        ],
        "summary": "Invoke function myRequests",
        "operationId": "InvokeMyRequests",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entities from invitations",
        "operationId": "GetEntitiesFromInvitations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "invitedUserDisplayName",
                "invitedUserDisplayName desc",
                "invitedUserType",
                "invitedUserType desc",
                "invitedUserEmailAddress",
                "invitedUserEmailAddress desc",
                "invitedUserMessageInfo",
                "invitedUserMessageInfo desc",
                "sendInvitationMessage",
                "sendInvitationMessage desc",
                "inviteRedirectUrl",
                "inviteRedirectUrl desc",
                "inviteRedeemUrl",
                "inviteRedeemUrl desc",
                "status",
                "status desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "invitedUserDisplayName",
                "invitedUserType",
                "invitedUserEmailAddress",
                "invitedUserMessageInfo",
                "sendInvitationMessage",
                "inviteRedirectUrl",
                "inviteRedeemUrl",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "invitedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of invitation",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.invitation"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Add new entity to invitations",
        "operationId": "AddEntityToInvitations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/invitations('{id}')": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entity from invitations by key",
        "operationId": "GetEntityFromInvitationsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "invitedUserDisplayName",
                "invitedUserType",
                "invitedUserEmailAddress",
                "invitedUserMessageInfo",
                "sendInvitationMessage",
                "inviteRedirectUrl",
                "inviteRedeemUrl",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "invitedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "invitations"
        ],
        "summary": "Update entity in invitations",
        "operationId": "UpdateEntityInInvitations",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "invitations"
        ],
        "summary": "Delete entity from invitations",
        "operationId": "DeleteEntityFromInvitations",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/appConfigurationGroupAssignments": {
      "get": {
        "tags": [
          "appConfigurationGroupAssignments"
        ],
        "summary": "Get entities from appConfigurationGroupAssignments",
        "operationId": "GetEntitiesFromAppConfigurationGroupAssignments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "appConfiguration",
                "appConfiguration desc",
                "targetGroupId",
                "targetGroupId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appConfiguration",
                "targetGroupId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of mdmAppConfigGroupAssignment",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "appConfigurationGroupAssignments"
        ],
        "summary": "Add new entity to appConfigurationGroupAssignments",
        "operationId": "AddEntityToAppConfigurationGroupAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/appConfigurationGroupAssignments('{id}')": {
      "get": {
        "tags": [
          "appConfigurationGroupAssignments"
        ],
        "summary": "Get entity from appConfigurationGroupAssignments by key",
        "operationId": "GetEntityFromAppConfigurationGroupAssignmentsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appConfiguration",
                "targetGroupId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "appConfigurationGroupAssignments"
        ],
        "summary": "Update entity in appConfigurationGroupAssignments",
        "operationId": "UpdateEntityInAppConfigurationGroupAssignments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "appConfigurationGroupAssignments"
        ],
        "summary": "Delete entity from appConfigurationGroupAssignments",
        "operationId": "DeleteEntityFromAppConfigurationGroupAssignments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/assignments": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get entities from assignments",
        "operationId": "GetEntitiesFromAssignments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "target",
                "target desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "target"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of managedDeviceMobileAppConfigurationAssignment",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Add new entity to assignments",
        "operationId": "AddEntityToAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/assignments('{id}')": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get entity from assignments by key",
        "operationId": "GetEntityFromAssignmentsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "target"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "assignments"
        ],
        "summary": "Update entity in assignments",
        "operationId": "UpdateEntityInAssignments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Delete entity from assignments",
        "operationId": "DeleteEntityFromAssignments",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/vppTokens": {
      "get": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Get entities from vppTokens",
        "operationId": "GetEntitiesFromVppTokens",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "organizationName",
                "organizationName desc",
                "vppTokenAccountType",
                "vppTokenAccountType desc",
                "appleId",
                "appleId desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "lastSyncDateTime",
                "lastSyncDateTime desc",
                "token",
                "token desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "state",
                "state desc",
                "tokenActionResults",
                "tokenActionResults desc",
                "lastSyncStatus",
                "lastSyncStatus desc",
                "automaticallyUpdateApps",
                "automaticallyUpdateApps desc",
                "countryOrRegion",
                "countryOrRegion desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "organizationName",
                "vppTokenAccountType",
                "appleId",
                "expirationDateTime",
                "lastSyncDateTime",
                "token",
                "lastModifiedDateTime",
                "state",
                "tokenActionResults",
                "lastSyncStatus",
                "automaticallyUpdateApps",
                "countryOrRegion"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of vppToken",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.vppToken"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Add new entity to vppTokens",
        "operationId": "AddEntityToVppTokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.vppToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.vppToken"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/vppTokens('{id}')": {
      "get": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Get entity from vppTokens by key",
        "operationId": "GetEntityFromVppTokensByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "organizationName",
                "vppTokenAccountType",
                "appleId",
                "expirationDateTime",
                "lastSyncDateTime",
                "token",
                "lastModifiedDateTime",
                "state",
                "tokenActionResults",
                "lastSyncStatus",
                "automaticallyUpdateApps",
                "countryOrRegion"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.vppToken"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Update entity in vppTokens",
        "operationId": "UpdateEntityInVppTokens",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.vppToken"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Delete entity from vppTokens",
        "operationId": "DeleteEntityFromVppTokens",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/vppTokens('{id}')/microsoft.graph.syncLicenses": {
      "post": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Invoke action syncLicenses",
        "operationId": "InvokeSyncLicenses",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/vppTokens('{id}')/microsoft.graph.revokeLicenses": {
      "post": {
        "tags": [
          "vppTokens"
        ],
        "summary": "Invoke action revokeLicenses",
        "operationId": "InvokeRevokeLicenses",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/enrollmentConfigurationAssignment": {
      "get": {
        "tags": [
          "enrollmentConfigurationAssignment"
        ],
        "summary": "Get entities from enrollmentConfigurationAssignment",
        "operationId": "GetEntitiesFromEnrollmentConfigurationAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "target",
                "target desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "target"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of enrollmentConfigurationAssignment",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "enrollmentConfigurationAssignment"
        ],
        "summary": "Add new entity to enrollmentConfigurationAssignment",
        "operationId": "AddEntityToEnrollmentConfigurationAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/enrollmentConfigurationAssignment('{id}')": {
      "get": {
        "tags": [
          "enrollmentConfigurationAssignment"
        ],
        "summary": "Get entity from enrollmentConfigurationAssignment by key",
        "operationId": "GetEntityFromEnrollmentConfigurationAssignmentByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "target"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "enrollmentConfigurationAssignment"
        ],
        "summary": "Update entity in enrollmentConfigurationAssignment",
        "operationId": "UpdateEntityInEnrollmentConfigurationAssignment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "enrollmentConfigurationAssignment"
        ],
        "summary": "Delete entity from enrollmentConfigurationAssignment",
        "operationId": "DeleteEntityFromEnrollmentConfigurationAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/commands": {
      "get": {
        "tags": [
          "commands"
        ],
        "summary": "Get entities from commands",
        "operationId": "GetEntitiesFromCommands",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "Status",
                "Status desc",
                "Type",
                "Type desc",
                "AppServiceName",
                "AppServiceName desc",
                "PackageFamilyName",
                "PackageFamilyName desc",
                "Error",
                "Error desc",
                "Payload",
                "Payload desc",
                "PermissionTicket",
                "PermissionTicket desc",
                "PostBackUri",
                "PostBackUri desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "Status",
                "Type",
                "AppServiceName",
                "PackageFamilyName",
                "Error",
                "Payload",
                "PermissionTicket",
                "PostBackUri"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "responsepayload"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of command",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.command"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "commands"
        ],
        "summary": "Add new entity to commands",
        "operationId": "AddEntityToCommands",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.command"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.command"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/commands('{id}')": {
      "get": {
        "tags": [
          "commands"
        ],
        "summary": "Get entity from commands by key",
        "operationId": "GetEntityFromCommandsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "Status",
                "Type",
                "AppServiceName",
                "PackageFamilyName",
                "Error",
                "Payload",
                "PermissionTicket",
                "PostBackUri"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "responsepayload"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.command"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "commands"
        ],
        "summary": "Update entity in commands",
        "operationId": "UpdateEntityInCommands",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.command"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "commands"
        ],
        "summary": "Delete entity from commands",
        "operationId": "DeleteEntityFromCommands",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/payloadResponse": {
      "get": {
        "tags": [
          "payloadResponse"
        ],
        "summary": "Get entities from payloadResponse",
        "operationId": "GetEntitiesFromPayloadResponse",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of payloadResponse",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.payloadResponse"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "payloadResponse"
        ],
        "summary": "Add new entity to payloadResponse",
        "operationId": "AddEntityToPayloadResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.payloadResponse"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.payloadResponse"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/payloadResponse('{id}')": {
      "get": {
        "tags": [
          "payloadResponse"
        ],
        "summary": "Get entity from payloadResponse by key",
        "operationId": "GetEntityFromPayloadResponseByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.payloadResponse"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "payloadResponse"
        ],
        "summary": "Update entity in payloadResponse",
        "operationId": "UpdateEntityInPayloadResponse",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.payloadResponse"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "payloadResponse"
        ],
        "summary": "Delete entity from payloadResponse",
        "operationId": "DeleteEntityFromPayloadResponse",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/team": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Get entities from team",
        "operationId": "GetEntitiesFromTeam",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "memberSettings",
                "memberSettings desc",
                "messagingSettings",
                "messagingSettings desc",
                "funSettings",
                "funSettings desc",
                "guestSettings",
                "guestSettings desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "memberSettings",
                "messagingSettings",
                "funSettings",
                "guestSettings"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "channels"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of team",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.team"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Add new entity to team",
        "operationId": "AddEntityToTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/team('{id}')": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Get entity from team by key",
        "operationId": "GetEntityFromTeamByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "memberSettings",
                "messagingSettings",
                "funSettings",
                "guestSettings"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "channels"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "team"
        ],
        "summary": "Update entity in team",
        "operationId": "UpdateEntityInTeam",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Delete entity from team",
        "operationId": "DeleteEntityFromTeam",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/team('{id}')/channels": {
      "get": {
        "tags": [
          "team##channels"
        ],
        "summary": "Get channels from team",
        "operationId": "GetChannelsFromTeam",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "memberSettings",
                "memberSettings desc",
                "messagingSettings",
                "messagingSettings desc",
                "funSettings",
                "funSettings desc",
                "guestSettings",
                "guestSettings desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "memberSettings",
                "messagingSettings",
                "funSettings",
                "guestSettings"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "channels"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "team##channels"
        ],
        "summary": "Add new navigation property to channels for team",
        "operationId": "AddChannelsToTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.team"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/channels": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Get entities from channels",
        "operationId": "GetEntitiesFromChannels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "description"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatThreads"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of channel",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.channel"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "channels"
        ],
        "summary": "Add new entity to channels",
        "operationId": "AddEntityToChannels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/channels('{id}')": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Get entity from channels by key",
        "operationId": "GetEntityFromChannelsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "description"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatThreads"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "channels"
        ],
        "summary": "Update entity in channels",
        "operationId": "UpdateEntityInChannels",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "channels"
        ],
        "summary": "Delete entity from channels",
        "operationId": "DeleteEntityFromChannels",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/channels('{id}')/chatThreads": {
      "get": {
        "tags": [
          "channels##chatThreads"
        ],
        "summary": "Get chatThreads from channels",
        "operationId": "GetChatThreadsFromChannels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "description"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatThreads"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "channels##chatThreads"
        ],
        "summary": "Add new navigation property to chatThreads for channels",
        "operationId": "AddChatThreadsToChannels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.channel"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/chatThreads": {
      "get": {
        "tags": [
          "chatThreads"
        ],
        "summary": "Get entities from chatThreads",
        "operationId": "GetEntitiesFromChatThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatMessages",
                "rootMessage"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of chatThread",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.chatThread"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "chatThreads"
        ],
        "summary": "Add new entity to chatThreads",
        "operationId": "AddEntityToChatThreads",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/chatThreads('{id}')": {
      "get": {
        "tags": [
          "chatThreads"
        ],
        "summary": "Get entity from chatThreads by key",
        "operationId": "GetEntityFromChatThreadsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatMessages",
                "rootMessage"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "chatThreads"
        ],
        "summary": "Update entity in chatThreads",
        "operationId": "UpdateEntityInChatThreads",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "chatThreads"
        ],
        "summary": "Delete entity from chatThreads",
        "operationId": "DeleteEntityFromChatThreads",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/chatThreads('{id}')/chatMessages": {
      "get": {
        "tags": [
          "chatThreads##chatMessages"
        ],
        "summary": "Get chatMessages from chatThreads",
        "operationId": "GetChatMessagesFromChatThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "chatMessages",
                "rootMessage"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatMessage"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "chatThreads##chatMessages"
        ],
        "summary": "Add new navigation property to chatMessages for chatThreads",
        "operationId": "AddChatMessagesToChatThreads",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.chatThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Get entities from groupLifecyclePolicies",
        "operationId": "GetEntitiesFromGroupLifecyclePolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "groupLifetimeInDays",
                "groupLifetimeInDays desc",
                "managedGroupTypes",
                "managedGroupTypes desc",
                "alternateNotificationEmails",
                "alternateNotificationEmails desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "groupLifetimeInDays",
                "managedGroupTypes",
                "alternateNotificationEmails"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupLifecyclePolicy",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Add new entity to groupLifecyclePolicies",
        "operationId": "AddEntityToGroupLifecyclePolicies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies('{id}')": {
      "get": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Get entity from groupLifecyclePolicies by key",
        "operationId": "GetEntityFromGroupLifecyclePoliciesByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "groupLifetimeInDays",
                "managedGroupTypes",
                "alternateNotificationEmails"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Update entity in groupLifecyclePolicies",
        "operationId": "UpdateEntityInGroupLifecyclePolicies",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Delete entity from groupLifecyclePolicies",
        "operationId": "DeleteEntityFromGroupLifecyclePolicies",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies/microsoft.graph.renewGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Invoke action renewGroup",
        "operationId": "InvokeRenewGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies('{id}')/microsoft.graph.addGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Invoke action addGroup",
        "operationId": "InvokeAddGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies('{id}')/microsoft.graph.removeGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies"
        ],
        "summary": "Invoke action removeGroup",
        "operationId": "InvokeRemoveGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/identityProviders": {
      "get": {
        "tags": [
          "identityProviders"
        ],
        "summary": "Get entities from identityProviders",
        "operationId": "GetEntitiesFromIdentityProviders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "type",
                "type desc",
                "name",
                "name desc",
                "clientId",
                "clientId desc",
                "clientSecret",
                "clientSecret desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "type",
                "name",
                "clientId",
                "clientSecret"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of IdentityProvider",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.IdentityProvider"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "identityProviders"
        ],
        "summary": "Add new entity to identityProviders",
        "operationId": "AddEntityToIdentityProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.IdentityProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.IdentityProvider"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/identityProviders('{id}')": {
      "get": {
        "tags": [
          "identityProviders"
        ],
        "summary": "Get entity from identityProviders by key",
        "operationId": "GetEntityFromIdentityProvidersByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "type",
                "name",
                "clientId",
                "clientSecret"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.IdentityProvider"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "identityProviders"
        ],
        "summary": "Update entity in identityProviders",
        "operationId": "UpdateEntityInIdentityProviders",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.IdentityProvider"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "identityProviders"
        ],
        "summary": "Delete entity from identityProviders",
        "operationId": "DeleteEntityFromIdentityProviders",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/functions": {
      "get": {
        "tags": [
          "functions"
        ],
        "summary": "Get entities from functions",
        "operationId": "GetEntitiesFromFunctions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "parameters",
                "parameters desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "parameters"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of attributeMappingFunctionSchema",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.attributeMappingFunctionSchema"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "functions"
        ],
        "summary": "Add new entity to functions",
        "operationId": "AddEntityToFunctions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.attributeMappingFunctionSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.attributeMappingFunctionSchema"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/functions('{id}')": {
      "get": {
        "tags": [
          "functions"
        ],
        "summary": "Get entity from functions by key",
        "operationId": "GetEntityFromFunctionsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "parameters"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.attributeMappingFunctionSchema"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "functions"
        ],
        "summary": "Update entity in functions",
        "operationId": "UpdateEntityInFunctions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.attributeMappingFunctionSchema"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "functions"
        ],
        "summary": "Delete entity from functions",
        "operationId": "DeleteEntityFromFunctions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/filterOperators": {
      "get": {
        "tags": [
          "filterOperators"
        ],
        "summary": "Get entities from filterOperators",
        "operationId": "GetEntitiesFromFilterOperators",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "arity",
                "arity desc",
                "multivaluedComparisonType",
                "multivaluedComparisonType desc",
                "supportedAttributeTypes",
                "supportedAttributeTypes desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "arity",
                "multivaluedComparisonType",
                "supportedAttributeTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of filterOperatorSchema",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.filterOperatorSchema"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "filterOperators"
        ],
        "summary": "Add new entity to filterOperators",
        "operationId": "AddEntityToFilterOperators",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.filterOperatorSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.filterOperatorSchema"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/filterOperators('{id}')": {
      "get": {
        "tags": [
          "filterOperators"
        ],
        "summary": "Get entity from filterOperators by key",
        "operationId": "GetEntityFromFilterOperatorsByKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "arity",
                "multivaluedComparisonType",
                "supportedAttributeTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.filterOperatorSchema"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "filterOperators"
        ],
        "summary": "Update entity in filterOperators",
        "operationId": "UpdateEntityInFilterOperators",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.filterOperatorSchema"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "filterOperators"
        ],
        "summary": "Delete entity from filterOperators",
        "operationId": "DeleteEntityFromFilterOperators",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get me",
        "operationId": "GetMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update me",
        "operationId": "UpdateMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/extensions": {
      "get": {
        "tags": [
          "me##extensions"
        ],
        "summary": "Get extensions from me",
        "operationId": "GetExtensionsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##extensions"
        ],
        "summary": "Add new navigation property to extensions for me",
        "operationId": "AddExtensionsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/scopedRoleMemberOf": {
      "get": {
        "tags": [
          "me##scopedRoleMemberOf"
        ],
        "summary": "Get scopedRoleMemberOf from me",
        "operationId": "GetScopedRoleMemberOfFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##scopedRoleMemberOf"
        ],
        "summary": "Add new navigation property to scopedRoleMemberOf for me",
        "operationId": "AddScopedRoleMemberOfToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/licenseDetails": {
      "get": {
        "tags": [
          "me##licenseDetails"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "GetLicenseDetailsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##licenseDetails"
        ],
        "summary": "Add new navigation property to licenseDetails for me",
        "operationId": "AddLicenseDetailsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/activities": {
      "get": {
        "tags": [
          "me##activities"
        ],
        "summary": "Get activities from me",
        "operationId": "GetActivitiesFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.activity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##activities"
        ],
        "summary": "Add new navigation property to activities for me",
        "operationId": "AddActivitiesToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/outlook": {
      "get": {
        "tags": [
          "me##outlook"
        ],
        "summary": "Get outlook from me",
        "operationId": "GetOutlookFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.outlookUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##outlook"
        ],
        "summary": "Update the navigation property outlook in me",
        "operationId": "UpdateOutlookInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/messages": {
      "get": {
        "tags": [
          "me##messages"
        ],
        "summary": "Get messages from me",
        "operationId": "GetMessagesFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##messages"
        ],
        "summary": "Add new navigation property to messages for me",
        "operationId": "AddMessagesToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/joinedGroups": {
      "get": {
        "tags": [
          "me##joinedGroups"
        ],
        "summary": "Get joinedGroups from me",
        "operationId": "GetJoinedGroupsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/mailFolders": {
      "get": {
        "tags": [
          "me##mailFolders"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "GetMailFoldersFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##mailFolders"
        ],
        "summary": "Add new navigation property to mailFolders for me",
        "operationId": "AddMailFoldersToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/calendar": {
      "get": {
        "tags": [
          "me##calendar"
        ],
        "summary": "Get calendar from me",
        "operationId": "GetCalendarFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/calendars": {
      "get": {
        "tags": [
          "me##calendars"
        ],
        "summary": "Get calendars from me",
        "operationId": "GetCalendarsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##calendars"
        ],
        "summary": "Add new navigation property to calendars for me",
        "operationId": "AddCalendarsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/calendarGroups": {
      "get": {
        "tags": [
          "me##calendarGroups"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "GetCalendarGroupsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##calendarGroups"
        ],
        "summary": "Add new navigation property to calendarGroups for me",
        "operationId": "AddCalendarGroupsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/calendarView": {
      "get": {
        "tags": [
          "me##calendarView"
        ],
        "summary": "Get calendarView from me",
        "operationId": "GetCalendarViewFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/events": {
      "get": {
        "tags": [
          "me##events"
        ],
        "summary": "Get events from me",
        "operationId": "GetEventsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##events"
        ],
        "summary": "Add new navigation property to events for me",
        "operationId": "AddEventsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/people": {
      "get": {
        "tags": [
          "me##people"
        ],
        "summary": "Get people from me",
        "operationId": "GetPeopleFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/contacts": {
      "get": {
        "tags": [
          "me##contacts"
        ],
        "summary": "Get contacts from me",
        "operationId": "GetContactsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##contacts"
        ],
        "summary": "Add new navigation property to contacts for me",
        "operationId": "AddContactsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/contactFolders": {
      "get": {
        "tags": [
          "me##contactFolders"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "GetContactFoldersFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##contactFolders"
        ],
        "summary": "Add new navigation property to contactFolders for me",
        "operationId": "AddContactFoldersToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/inferenceClassification": {
      "get": {
        "tags": [
          "me##inferenceClassification"
        ],
        "summary": "Get inferenceClassification from me",
        "operationId": "GetInferenceClassificationFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.inferenceClassification"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##inferenceClassification"
        ],
        "summary": "Update the navigation property inferenceClassification in me",
        "operationId": "UpdateInferenceClassificationInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/photo": {
      "get": {
        "tags": [
          "me##photo"
        ],
        "summary": "Get photo from me",
        "operationId": "GetPhotoFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##photo"
        ],
        "summary": "Update the navigation property photo in me",
        "operationId": "UpdatePhotoInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/photos": {
      "get": {
        "tags": [
          "me##photos"
        ],
        "summary": "Get photos from me",
        "operationId": "GetPhotosFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/drive": {
      "get": {
        "tags": [
          "me##drive"
        ],
        "summary": "Get drive from me",
        "operationId": "GetDriveFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##drive"
        ],
        "summary": "Update the navigation property drive in me",
        "operationId": "UpdateDriveInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/drives": {
      "get": {
        "tags": [
          "me##drives"
        ],
        "summary": "Get drives from me",
        "operationId": "GetDrivesFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##drives"
        ],
        "summary": "Add new navigation property to drives for me",
        "operationId": "AddDrivesToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/insights": {
      "get": {
        "tags": [
          "me##insights"
        ],
        "summary": "Get insights from me",
        "operationId": "GetInsightsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.officeGraphInsights"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##insights"
        ],
        "summary": "Update the navigation property insights in me",
        "operationId": "UpdateInsightsInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/planner": {
      "get": {
        "tags": [
          "me##planner"
        ],
        "summary": "Get planner from me",
        "operationId": "GetPlannerFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##planner"
        ],
        "summary": "Update the navigation property planner in me",
        "operationId": "UpdatePlannerInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/onenote": {
      "get": {
        "tags": [
          "me##onenote"
        ],
        "summary": "Get onenote from me",
        "operationId": "GetOnenoteFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me##onenote"
        ],
        "summary": "Update the navigation property onenote in me",
        "operationId": "UpdateOnenoteInMe",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/devices": {
      "get": {
        "tags": [
          "me##devices"
        ],
        "summary": "Get devices from me",
        "operationId": "GetDevicesFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##devices"
        ],
        "summary": "Add new navigation property to devices for me",
        "operationId": "AddDevicesToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/joinedTeams": {
      "get": {
        "tags": [
          "me##joinedTeams"
        ],
        "summary": "Get joinedTeams from me",
        "operationId": "GetJoinedTeamsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##joinedTeams"
        ],
        "summary": "Add new navigation property to joinedTeams for me",
        "operationId": "AddJoinedTeamsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "me##deviceManagementTroubleshootingEvents"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from me",
        "operationId": "GetDeviceManagementTroubleshootingEventsFromMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deletedDateTime",
                "deletedDateTime desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "deviceKeys",
                "deviceKeys desc",
                "displayName",
                "displayName desc",
                "employeeId",
                "employeeId desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredDataLocation",
                "preferredDataLocation desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "refreshTokensValidFromDateTime",
                "refreshTokensValidFromDateTime desc",
                "showInAddressList",
                "showInAddressList desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "identityUserRisk",
                "identityUserRisk desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedDateTime",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "deviceKeys",
                "displayName",
                "employeeId",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesDomainName",
                "onPremisesSamAccountName",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredDataLocation",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "refreshTokensValidFromDateTime",
                "showInAddressList",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills",
                "identityUserRisk",
                "deviceEnrollmentLimit"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "scopedRoleMemberOf",
                "licenseDetails",
                "activities",
                "outlook",
                "messages",
                "joinedGroups",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "insights",
                "planner",
                "onenote",
                "managedDevices",
                "managedAppRegistrations",
                "devices",
                "joinedTeams",
                "deviceManagementTroubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me##deviceManagementTroubleshootingEvents"
        ],
        "summary": "Add new navigation property to deviceManagementTroubleshootingEvents for me",
        "operationId": "AddDeviceManagementTroubleshootingEventsToMe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.assignedLicense"
                  }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "InvokeInvalidateAllRefreshTokens",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Message": {
                  "$ref": "#/definitions/microsoft.graph.message"
                },
                "SaveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "InvokeFindMeetingTimesOLD",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionHints": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "MinimumAttendeePercentage": {
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "InvokeGetMailTips",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EmailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "MailTipsOptions": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "StartDateTime",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDateTime",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.reminder"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "InvokeFindRoomLists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "RoomList",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "InvokeFindRooms",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAddress"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "InvokeRemoveAllDevicesFromManagement",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "InvokeGetManagedAppDiagnosticStatuses",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "InvokeGetManagedAppPolicies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "InvokeWipeManagedAppRegistrationByDeviceTag",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directory": {
      "get": {
        "tags": [
          "directory"
        ],
        "summary": "Get directory",
        "operationId": "GetDirectory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deletedItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directory"
        ],
        "summary": "Update directory",
        "operationId": "UpdateDirectory",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directory/deletedItems": {
      "get": {
        "tags": [
          "directory##deletedItems"
        ],
        "summary": "Get deletedItems from directory",
        "operationId": "GetDeletedItemsFromDirectory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deletedItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directory##deletedItems"
        ],
        "summary": "Add new navigation property to deletedItems for directory",
        "operationId": "AddDeletedItemsToDirectory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get drive",
        "operationId": "GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive"
        ],
        "summary": "Update drive",
        "operationId": "UpdateDrive",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/activities": {
      "get": {
        "tags": [
          "drive##activities"
        ],
        "summary": "Get activities from drive",
        "operationId": "GetActivitiesFromDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.itemActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drive##activities"
        ],
        "summary": "Add new navigation property to activities for drive",
        "operationId": "AddActivitiesToDrive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/items": {
      "get": {
        "tags": [
          "drive##items"
        ],
        "summary": "Get items from drive",
        "operationId": "GetItemsFromDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drive##items"
        ],
        "summary": "Add new navigation property to items for drive",
        "operationId": "AddItemsToDrive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/list": {
      "get": {
        "tags": [
          "drive##list"
        ],
        "summary": "Get list from drive",
        "operationId": "GetListFromDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive##list"
        ],
        "summary": "Update the navigation property list in drive",
        "operationId": "UpdateListInDrive",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/root": {
      "get": {
        "tags": [
          "drive##root"
        ],
        "summary": "Get root from drive",
        "operationId": "GetRootFromDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive##root"
        ],
        "summary": "Update the navigation property root in drive",
        "operationId": "UpdateRootInDrive",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/special": {
      "get": {
        "tags": [
          "drive##special"
        ],
        "summary": "Get special from drive",
        "operationId": "GetSpecialFromDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "activities",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drive##special"
        ],
        "summary": "Add new navigation property to special for drive",
        "operationId": "AddSpecialToDrive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function recent",
        "operationId": "InvokeRecent",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "InvokeSharedWithMe",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get planner",
        "operationId": "GetPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks",
                "plans",
                "buckets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "Update planner",
        "operationId": "UpdatePlanner",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/planner/tasks": {
      "get": {
        "tags": [
          "planner##tasks"
        ],
        "summary": "Get tasks from planner",
        "operationId": "GetTasksFromPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks",
                "plans",
                "buckets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerTask"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner##tasks"
        ],
        "summary": "Add new navigation property to tasks for planner",
        "operationId": "AddTasksToPlanner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/planner/plans": {
      "get": {
        "tags": [
          "planner##plans"
        ],
        "summary": "Get plans from planner",
        "operationId": "GetPlansFromPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks",
                "plans",
                "buckets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerPlan"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner##plans"
        ],
        "summary": "Add new navigation property to plans for planner",
        "operationId": "AddPlansToPlanner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/planner/buckets": {
      "get": {
        "tags": [
          "planner##buckets"
        ],
        "summary": "Get buckets from planner",
        "operationId": "GetBucketsFromPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks",
                "plans",
                "buckets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerBucket"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner##buckets"
        ],
        "summary": "Add new navigation property to buckets for planner",
        "operationId": "AddBucketsToPlanner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement": {
      "get": {
        "tags": [
          "deviceManagement"
        ],
        "summary": "Get deviceManagement",
        "operationId": "GetDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement"
        ],
        "summary": "Update deviceManagement",
        "operationId": "UpdateDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/termsAndConditions": {
      "get": {
        "tags": [
          "deviceManagement##termsAndConditions"
        ],
        "summary": "Get termsAndConditions from deviceManagement",
        "operationId": "GetTermsAndConditionsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.termsAndConditions"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##termsAndConditions"
        ],
        "summary": "Add new navigation property to termsAndConditions for deviceManagement",
        "operationId": "AddTermsAndConditionsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/androidForWorkSettings": {
      "get": {
        "tags": [
          "deviceManagement##androidForWorkSettings"
        ],
        "summary": "Get androidForWorkSettings from deviceManagement",
        "operationId": "GetAndroidForWorkSettingsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.androidForWorkSettings"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##androidForWorkSettings"
        ],
        "summary": "Update the navigation property androidForWorkSettings in deviceManagement",
        "operationId": "UpdateAndroidForWorkSettingsInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/androidForWorkAppConfigurationSchemas": {
      "get": {
        "tags": [
          "deviceManagement##androidForWorkAppConfigurationSchemas"
        ],
        "summary": "Get androidForWorkAppConfigurationSchemas from deviceManagement",
        "operationId": "GetAndroidForWorkAppConfigurationSchemasFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.androidForWorkAppConfigurationSchema"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##androidForWorkAppConfigurationSchemas"
        ],
        "summary": "Add new navigation property to androidForWorkAppConfigurationSchemas for deviceManagement",
        "operationId": "AddAndroidForWorkAppConfigurationSchemasToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/androidForWorkEnrollmentProfiles": {
      "get": {
        "tags": [
          "deviceManagement##androidForWorkEnrollmentProfiles"
        ],
        "summary": "Get androidForWorkEnrollmentProfiles from deviceManagement",
        "operationId": "GetAndroidForWorkEnrollmentProfilesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.androidForWorkEnrollmentProfile"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##androidForWorkEnrollmentProfiles"
        ],
        "summary": "Add new navigation property to androidForWorkEnrollmentProfiles for deviceManagement",
        "operationId": "AddAndroidForWorkEnrollmentProfilesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/enrollmentProfiles": {
      "get": {
        "tags": [
          "deviceManagement##enrollmentProfiles"
        ],
        "summary": "Get enrollmentProfiles from deviceManagement",
        "operationId": "GetEnrollmentProfilesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enrollmentProfile"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##enrollmentProfiles"
        ],
        "summary": "Add new navigation property to enrollmentProfiles for deviceManagement",
        "operationId": "AddEnrollmentProfilesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/importedDeviceIdentities": {
      "get": {
        "tags": [
          "deviceManagement##importedDeviceIdentities"
        ],
        "summary": "Get importedDeviceIdentities from deviceManagement",
        "operationId": "GetImportedDeviceIdentitiesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.importedDeviceIdentity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##importedDeviceIdentities"
        ],
        "summary": "Add new navigation property to importedDeviceIdentities for deviceManagement",
        "operationId": "AddImportedDeviceIdentitiesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/importedAppleDeviceIdentities": {
      "get": {
        "tags": [
          "deviceManagement##importedAppleDeviceIdentities"
        ],
        "summary": "Get importedAppleDeviceIdentities from deviceManagement",
        "operationId": "GetImportedAppleDeviceIdentitiesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.importedAppleDeviceIdentity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##importedAppleDeviceIdentities"
        ],
        "summary": "Add new navigation property to importedAppleDeviceIdentities for deviceManagement",
        "operationId": "AddImportedAppleDeviceIdentitiesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/remoteActionAudits": {
      "get": {
        "tags": [
          "deviceManagement##remoteActionAudits"
        ],
        "summary": "Get remoteActionAudits from deviceManagement",
        "operationId": "GetRemoteActionAuditsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.remoteActionAudit"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##remoteActionAudits"
        ],
        "summary": "Add new navigation property to remoteActionAudits for deviceManagement",
        "operationId": "AddRemoteActionAuditsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/applePushNotificationCertificate": {
      "get": {
        "tags": [
          "deviceManagement##applePushNotificationCertificate"
        ],
        "summary": "Get applePushNotificationCertificate from deviceManagement",
        "operationId": "GetApplePushNotificationCertificateFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.applePushNotificationCertificate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##applePushNotificationCertificate"
        ],
        "summary": "Update the navigation property applePushNotificationCertificate in deviceManagement",
        "operationId": "UpdateApplePushNotificationCertificateInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceManagementScripts": {
      "get": {
        "tags": [
          "deviceManagement##deviceManagementScripts"
        ],
        "summary": "Get deviceManagementScripts from deviceManagement",
        "operationId": "GetDeviceManagementScriptsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementScript"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceManagementScripts"
        ],
        "summary": "Add new navigation property to deviceManagementScripts for deviceManagement",
        "operationId": "AddDeviceManagementScriptsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/detectedApps": {
      "get": {
        "tags": [
          "deviceManagement##detectedApps"
        ],
        "summary": "Get detectedApps from deviceManagement",
        "operationId": "GetDetectedAppsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.detectedApp"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##detectedApps"
        ],
        "summary": "Add new navigation property to detectedApps for deviceManagement",
        "operationId": "AddDetectedAppsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/managedDevices": {
      "get": {
        "tags": [
          "deviceManagement##managedDevices"
        ],
        "summary": "Get managedDevices from deviceManagement",
        "operationId": "GetManagedDevicesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDevice"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##managedDevices"
        ],
        "summary": "Add new navigation property to managedDevices for deviceManagement",
        "operationId": "AddManagedDevicesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/windowsMalwareInformation": {
      "get": {
        "tags": [
          "deviceManagement##windowsMalwareInformation"
        ],
        "summary": "Get windowsMalwareInformation from deviceManagement",
        "operationId": "GetWindowsMalwareInformationFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsMalwareInformation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##windowsMalwareInformation"
        ],
        "summary": "Add new navigation property to windowsMalwareInformation for deviceManagement",
        "operationId": "AddWindowsMalwareInformationToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceConfigurations": {
      "get": {
        "tags": [
          "deviceManagement##deviceConfigurations"
        ],
        "summary": "Get deviceConfigurations from deviceManagement",
        "operationId": "GetDeviceConfigurationsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceConfigurations"
        ],
        "summary": "Add new navigation property to deviceConfigurations for deviceManagement",
        "operationId": "AddDeviceConfigurationsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceCompliancePolicies": {
      "get": {
        "tags": [
          "deviceManagement##deviceCompliancePolicies"
        ],
        "summary": "Get deviceCompliancePolicies from deviceManagement",
        "operationId": "GetDeviceCompliancePoliciesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceCompliancePolicies"
        ],
        "summary": "Add new navigation property to deviceCompliancePolicies for deviceManagement",
        "operationId": "AddDeviceCompliancePoliciesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceSetupConfigurations": {
      "get": {
        "tags": [
          "deviceManagement##deviceSetupConfigurations"
        ],
        "summary": "Get deviceSetupConfigurations from deviceManagement",
        "operationId": "GetDeviceSetupConfigurationsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceSetupConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceSetupConfigurations"
        ],
        "summary": "Add new navigation property to deviceSetupConfigurations for deviceManagement",
        "operationId": "AddDeviceSetupConfigurationsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceCompliancePolicyDeviceStateSummary": {
      "get": {
        "tags": [
          "deviceManagement##deviceCompliancePolicyDeviceStateSummary"
        ],
        "summary": "Get deviceCompliancePolicyDeviceStateSummary from deviceManagement",
        "operationId": "GetDeviceCompliancePolicyDeviceStateSummaryFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##deviceCompliancePolicyDeviceStateSummary"
        ],
        "summary": "Update the navigation property deviceCompliancePolicyDeviceStateSummary in deviceManagement",
        "operationId": "UpdateDeviceCompliancePolicyDeviceStateSummaryInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceCompliancePolicySettingStateSummaries": {
      "get": {
        "tags": [
          "deviceManagement##deviceCompliancePolicySettingStateSummaries"
        ],
        "summary": "Get deviceCompliancePolicySettingStateSummaries from deviceManagement",
        "operationId": "GetDeviceCompliancePolicySettingStateSummariesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicySettingStateSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceCompliancePolicySettingStateSummaries"
        ],
        "summary": "Add new navigation property to deviceCompliancePolicySettingStateSummaries for deviceManagement",
        "operationId": "AddDeviceCompliancePolicySettingStateSummariesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceConfigurationDeviceStateSummaries": {
      "get": {
        "tags": [
          "deviceManagement##deviceConfigurationDeviceStateSummaries"
        ],
        "summary": "Get deviceConfigurationDeviceStateSummaries from deviceManagement",
        "operationId": "GetDeviceConfigurationDeviceStateSummariesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceConfigurationDeviceStateSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##deviceConfigurationDeviceStateSummaries"
        ],
        "summary": "Update the navigation property deviceConfigurationDeviceStateSummaries in deviceManagement",
        "operationId": "UpdateDeviceConfigurationDeviceStateSummariesInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceConfigurationUserStateSummaries": {
      "get": {
        "tags": [
          "deviceManagement##deviceConfigurationUserStateSummaries"
        ],
        "summary": "Get deviceConfigurationUserStateSummaries from deviceManagement",
        "operationId": "GetDeviceConfigurationUserStateSummariesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceConfigurationUserStateSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##deviceConfigurationUserStateSummaries"
        ],
        "summary": "Update the navigation property deviceConfigurationUserStateSummaries in deviceManagement",
        "operationId": "UpdateDeviceConfigurationUserStateSummariesInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/cartToClassAssociations": {
      "get": {
        "tags": [
          "deviceManagement##cartToClassAssociations"
        ],
        "summary": "Get cartToClassAssociations from deviceManagement",
        "operationId": "GetCartToClassAssociationsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.cartToClassAssociation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##cartToClassAssociations"
        ],
        "summary": "Add new navigation property to cartToClassAssociations for deviceManagement",
        "operationId": "AddCartToClassAssociationsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/iosUpdateStatuses": {
      "get": {
        "tags": [
          "deviceManagement##iosUpdateStatuses"
        ],
        "summary": "Get iosUpdateStatuses from deviceManagement",
        "operationId": "GetIosUpdateStatusesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.iosUpdateDeviceStatus"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##iosUpdateStatuses"
        ],
        "summary": "Add new navigation property to iosUpdateStatuses for deviceManagement",
        "operationId": "AddIosUpdateStatusesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/ndesConnectors": {
      "get": {
        "tags": [
          "deviceManagement##ndesConnectors"
        ],
        "summary": "Get ndesConnectors from deviceManagement",
        "operationId": "GetNdesConnectorsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.ndesConnector"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##ndesConnectors"
        ],
        "summary": "Add new navigation property to ndesConnectors for deviceManagement",
        "operationId": "AddNdesConnectorsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceCategories": {
      "get": {
        "tags": [
          "deviceManagement##deviceCategories"
        ],
        "summary": "Get deviceCategories from deviceManagement",
        "operationId": "GetDeviceCategoriesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceCategory"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceCategories"
        ],
        "summary": "Add new navigation property to deviceCategories for deviceManagement",
        "operationId": "AddDeviceCategoriesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/exchangeConnectors": {
      "get": {
        "tags": [
          "deviceManagement##exchangeConnectors"
        ],
        "summary": "Get exchangeConnectors from deviceManagement",
        "operationId": "GetExchangeConnectorsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeConnector"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##exchangeConnectors"
        ],
        "summary": "Add new navigation property to exchangeConnectors for deviceManagement",
        "operationId": "AddExchangeConnectorsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceEnrollmentConfigurations": {
      "get": {
        "tags": [
          "deviceManagement##deviceEnrollmentConfigurations"
        ],
        "summary": "Get deviceEnrollmentConfigurations from deviceManagement",
        "operationId": "GetDeviceEnrollmentConfigurationsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceEnrollmentConfigurations"
        ],
        "summary": "Add new navigation property to deviceEnrollmentConfigurations for deviceManagement",
        "operationId": "AddDeviceEnrollmentConfigurationsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/exchangeOnPremisesPolicy": {
      "get": {
        "tags": [
          "deviceManagement##exchangeOnPremisesPolicy"
        ],
        "summary": "Get exchangeOnPremisesPolicy from deviceManagement",
        "operationId": "GetExchangeOnPremisesPolicyFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##exchangeOnPremisesPolicy"
        ],
        "summary": "Update the navigation property exchangeOnPremisesPolicy in deviceManagement",
        "operationId": "UpdateExchangeOnPremisesPolicyInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/exchangeOnPremisesPolicies": {
      "get": {
        "tags": [
          "deviceManagement##exchangeOnPremisesPolicies"
        ],
        "summary": "Get exchangeOnPremisesPolicies from deviceManagement",
        "operationId": "GetExchangeOnPremisesPoliciesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##exchangeOnPremisesPolicies"
        ],
        "summary": "Add new navigation property to exchangeOnPremisesPolicies for deviceManagement",
        "operationId": "AddExchangeOnPremisesPoliciesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/conditionalAccessSettings": {
      "get": {
        "tags": [
          "deviceManagement##conditionalAccessSettings"
        ],
        "summary": "Get conditionalAccessSettings from deviceManagement",
        "operationId": "GetConditionalAccessSettingsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onPremisesConditionalAccessSettings"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##conditionalAccessSettings"
        ],
        "summary": "Update the navigation property conditionalAccessSettings in deviceManagement",
        "operationId": "UpdateConditionalAccessSettingsInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/mobileThreatDefenseConnectors": {
      "get": {
        "tags": [
          "deviceManagement##mobileThreatDefenseConnectors"
        ],
        "summary": "Get mobileThreatDefenseConnectors from deviceManagement",
        "operationId": "GetMobileThreatDefenseConnectorsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mobileThreatDefenseConnector"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##mobileThreatDefenseConnectors"
        ],
        "summary": "Add new navigation property to mobileThreatDefenseConnectors for deviceManagement",
        "operationId": "AddMobileThreatDefenseConnectorsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/deviceManagementPartners": {
      "get": {
        "tags": [
          "deviceManagement##deviceManagementPartners"
        ],
        "summary": "Get deviceManagementPartners from deviceManagement",
        "operationId": "GetDeviceManagementPartnersFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementPartner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##deviceManagementPartners"
        ],
        "summary": "Add new navigation property to deviceManagementPartners for deviceManagement",
        "operationId": "AddDeviceManagementPartnersToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/depOnboardingSettings": {
      "get": {
        "tags": [
          "deviceManagement##depOnboardingSettings"
        ],
        "summary": "Get depOnboardingSettings from deviceManagement",
        "operationId": "GetDepOnboardingSettingsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.depOnboardingSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##depOnboardingSettings"
        ],
        "summary": "Add new navigation property to depOnboardingSettings for deviceManagement",
        "operationId": "AddDepOnboardingSettingsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/notificationMessageTemplates": {
      "get": {
        "tags": [
          "deviceManagement##notificationMessageTemplates"
        ],
        "summary": "Get notificationMessageTemplates from deviceManagement",
        "operationId": "GetNotificationMessageTemplatesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.notificationMessageTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##notificationMessageTemplates"
        ],
        "summary": "Add new navigation property to notificationMessageTemplates for deviceManagement",
        "operationId": "AddNotificationMessageTemplatesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/roleDefinitions": {
      "get": {
        "tags": [
          "deviceManagement##roleDefinitions"
        ],
        "summary": "Get roleDefinitions from deviceManagement",
        "operationId": "GetRoleDefinitionsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.roleDefinition"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##roleDefinitions"
        ],
        "summary": "Add new navigation property to roleDefinitions for deviceManagement",
        "operationId": "AddRoleDefinitionsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/roleAssignments": {
      "get": {
        "tags": [
          "deviceManagement##roleAssignments"
        ],
        "summary": "Get roleAssignments from deviceManagement",
        "operationId": "GetRoleAssignmentsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.roleAssignment"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##roleAssignments"
        ],
        "summary": "Add new navigation property to roleAssignments for deviceManagement",
        "operationId": "AddRoleAssignmentsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/resourceOperations": {
      "get": {
        "tags": [
          "deviceManagement##resourceOperations"
        ],
        "summary": "Get resourceOperations from deviceManagement",
        "operationId": "GetResourceOperationsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.resourceOperation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##resourceOperations"
        ],
        "summary": "Add new navigation property to resourceOperations for deviceManagement",
        "operationId": "AddResourceOperationsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/telecomExpenseManagementPartners": {
      "get": {
        "tags": [
          "deviceManagement##telecomExpenseManagementPartners"
        ],
        "summary": "Get telecomExpenseManagementPartners from deviceManagement",
        "operationId": "GetTelecomExpenseManagementPartnersFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.telecomExpenseManagementPartner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##telecomExpenseManagementPartners"
        ],
        "summary": "Add new navigation property to telecomExpenseManagementPartners for deviceManagement",
        "operationId": "AddTelecomExpenseManagementPartnersToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/windowsAutopilotSettings": {
      "get": {
        "tags": [
          "deviceManagement##windowsAutopilotSettings"
        ],
        "summary": "Get windowsAutopilotSettings from deviceManagement",
        "operationId": "GetWindowsAutopilotSettingsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsAutopilotSettings"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement##windowsAutopilotSettings"
        ],
        "summary": "Update the navigation property windowsAutopilotSettings in deviceManagement",
        "operationId": "UpdateWindowsAutopilotSettingsInDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/windowsAutopilotDeviceIdentities": {
      "get": {
        "tags": [
          "deviceManagement##windowsAutopilotDeviceIdentities"
        ],
        "summary": "Get windowsAutopilotDeviceIdentities from deviceManagement",
        "operationId": "GetWindowsAutopilotDeviceIdentitiesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeviceIdentity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##windowsAutopilotDeviceIdentities"
        ],
        "summary": "Add new navigation property to windowsAutopilotDeviceIdentities for deviceManagement",
        "operationId": "AddWindowsAutopilotDeviceIdentitiesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/windowsAutopilotDeploymentProfiles": {
      "get": {
        "tags": [
          "deviceManagement##windowsAutopilotDeploymentProfiles"
        ],
        "summary": "Get windowsAutopilotDeploymentProfiles from deviceManagement",
        "operationId": "GetWindowsAutopilotDeploymentProfilesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeploymentProfile"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##windowsAutopilotDeploymentProfiles"
        ],
        "summary": "Add new navigation property to windowsAutopilotDeploymentProfiles for deviceManagement",
        "operationId": "AddWindowsAutopilotDeploymentProfilesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/remoteAssistancePartners": {
      "get": {
        "tags": [
          "deviceManagement##remoteAssistancePartners"
        ],
        "summary": "Get remoteAssistancePartners from deviceManagement",
        "operationId": "GetRemoteAssistancePartnersFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.remoteAssistancePartner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##remoteAssistancePartners"
        ],
        "summary": "Add new navigation property to remoteAssistancePartners for deviceManagement",
        "operationId": "AddRemoteAssistancePartnersToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/windowsInformationProtectionAppLearningSummaries": {
      "get": {
        "tags": [
          "deviceManagement##windowsInformationProtectionAppLearningSummaries"
        ],
        "summary": "Get windowsInformationProtectionAppLearningSummaries from deviceManagement",
        "operationId": "GetWindowsInformationProtectionAppLearningSummariesFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLearningSummary"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##windowsInformationProtectionAppLearningSummaries"
        ],
        "summary": "Add new navigation property to windowsInformationProtectionAppLearningSummaries for deviceManagement",
        "operationId": "AddWindowsInformationProtectionAppLearningSummariesToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/auditEvents": {
      "get": {
        "tags": [
          "deviceManagement##auditEvents"
        ],
        "summary": "Get auditEvents from deviceManagement",
        "operationId": "GetAuditEventsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.auditEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##auditEvents"
        ],
        "summary": "Add new navigation property to auditEvents for deviceManagement",
        "operationId": "AddAuditEventsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/troubleshootingEvents": {
      "get": {
        "tags": [
          "deviceManagement##troubleshootingEvents"
        ],
        "summary": "Get troubleshootingEvents from deviceManagement",
        "operationId": "GetTroubleshootingEventsFromDeviceManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "subscriptionState",
                "subscriptionState desc",
                "subscriptions",
                "subscriptions desc",
                "adminConsent",
                "adminConsent desc",
                "deviceProtectionOverview",
                "deviceProtectionOverview desc",
                "settings",
                "settings desc",
                "maximumDepTokens",
                "maximumDepTokens desc",
                "intuneAccountId",
                "intuneAccountId desc",
                "intuneBrand",
                "intuneBrand desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "subscriptionState",
                "subscriptions",
                "adminConsent",
                "deviceProtectionOverview",
                "settings",
                "maximumDepTokens",
                "intuneAccountId",
                "intuneBrand"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "termsAndConditions",
                "androidForWorkSettings",
                "androidForWorkAppConfigurationSchemas",
                "androidForWorkEnrollmentProfiles",
                "enrollmentProfiles",
                "importedDeviceIdentities",
                "importedAppleDeviceIdentities",
                "remoteActionAudits",
                "applePushNotificationCertificate",
                "deviceManagementScripts",
                "managedDeviceOverview",
                "detectedApps",
                "managedDevices",
                "windowsMalwareInformation",
                "deviceConfigurations",
                "deviceCompliancePolicies",
                "deviceSetupConfigurations",
                "softwareUpdateStatusSummary",
                "deviceCompliancePolicyDeviceStateSummary",
                "deviceCompliancePolicySettingStateSummaries",
                "deviceConfigurationDeviceStateSummaries",
                "deviceConfigurationUserStateSummaries",
                "cartToClassAssociations",
                "iosUpdateStatuses",
                "ndesConnectors",
                "deviceCategories",
                "exchangeConnectors",
                "deviceEnrollmentConfigurations",
                "exchangeOnPremisesPolicy",
                "exchangeOnPremisesPolicies",
                "conditionalAccessSettings",
                "mobileThreatDefenseConnectors",
                "deviceManagementPartners",
                "depOnboardingSettings",
                "notificationMessageTemplates",
                "roleDefinitions",
                "roleAssignments",
                "resourceOperations",
                "telecomExpenseManagementPartners",
                "windowsAutopilotSettings",
                "windowsAutopilotDeviceIdentities",
                "windowsAutopilotDeploymentProfiles",
                "remoteAssistancePartners",
                "windowsInformationProtectionAppLearningSummaries",
                "auditEvents",
                "troubleshootingEvents"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceManagement##troubleshootingEvents"
        ],
        "summary": "Add new navigation property to troubleshootingEvents for deviceManagement",
        "operationId": "AddTroubleshootingEventsToDeviceManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/microsoft.graph.verifyWindowsEnrollmentAutoDiscovery(domainName={domainName})": {
      "get": {
        "tags": [
          "deviceManagement"
        ],
        "summary": "Invoke function verifyWindowsEnrollmentAutoDiscovery",
        "operationId": "InvokeVerifyWindowsEnrollmentAutoDiscovery",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/microsoft.graph.getEffectivePermissions()": {
      "get": {
        "tags": [
          "deviceManagement"
        ],
        "summary": "Invoke function getEffectivePermissions",
        "operationId": "InvokeGetEffectivePermissions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceManagement/microsoft.graph.getEffectivePermissions(scope={scope})": {
      "get": {
        "tags": [
          "deviceManagement"
        ],
        "summary": "Invoke function getEffectivePermissions",
        "operationId": "InvokeGetEffectivePermissions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement": {
      "get": {
        "tags": [
          "deviceAppManagement"
        ],
        "summary": "Get deviceAppManagement",
        "operationId": "GetDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceAppManagement"
        ],
        "summary": "Update deviceAppManagement",
        "operationId": "UpdateDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/mobileApps": {
      "get": {
        "tags": [
          "deviceAppManagement##mobileApps"
        ],
        "summary": "Get mobileApps from deviceAppManagement",
        "operationId": "GetMobileAppsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mobileApp"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##mobileApps"
        ],
        "summary": "Add new navigation property to mobileApps for deviceAppManagement",
        "operationId": "AddMobileAppsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/mobileAppCategories": {
      "get": {
        "tags": [
          "deviceAppManagement##mobileAppCategories"
        ],
        "summary": "Get mobileAppCategories from deviceAppManagement",
        "operationId": "GetMobileAppCategoriesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mobileAppCategory"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##mobileAppCategories"
        ],
        "summary": "Add new navigation property to mobileAppCategories for deviceAppManagement",
        "operationId": "AddMobileAppCategoriesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/enterpriseCodeSigningCertificates": {
      "get": {
        "tags": [
          "deviceAppManagement##enterpriseCodeSigningCertificates"
        ],
        "summary": "Get enterpriseCodeSigningCertificates from deviceAppManagement",
        "operationId": "GetEnterpriseCodeSigningCertificatesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.enterpriseCodeSigningCertificate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##enterpriseCodeSigningCertificates"
        ],
        "summary": "Add new navigation property to enterpriseCodeSigningCertificates for deviceAppManagement",
        "operationId": "AddEnterpriseCodeSigningCertificatesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/iosLobAppProvisioningConfigurations": {
      "get": {
        "tags": [
          "deviceAppManagement##iosLobAppProvisioningConfigurations"
        ],
        "summary": "Get iosLobAppProvisioningConfigurations from deviceAppManagement",
        "operationId": "GetIosLobAppProvisioningConfigurationsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.iosLobAppProvisioningConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##iosLobAppProvisioningConfigurations"
        ],
        "summary": "Add new navigation property to iosLobAppProvisioningConfigurations for deviceAppManagement",
        "operationId": "AddIosLobAppProvisioningConfigurationsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/symantecCodeSigningCertificate": {
      "get": {
        "tags": [
          "deviceAppManagement##symantecCodeSigningCertificate"
        ],
        "summary": "Get symantecCodeSigningCertificate from deviceAppManagement",
        "operationId": "GetSymantecCodeSigningCertificateFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.symantecCodeSigningCertificate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceAppManagement##symantecCodeSigningCertificate"
        ],
        "summary": "Update the navigation property symantecCodeSigningCertificate in deviceAppManagement",
        "operationId": "UpdateSymantecCodeSigningCertificateInDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/mobileAppConfigurations": {
      "get": {
        "tags": [
          "deviceAppManagement##mobileAppConfigurations"
        ],
        "summary": "Get mobileAppConfigurations from deviceAppManagement",
        "operationId": "GetMobileAppConfigurationsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##mobileAppConfigurations"
        ],
        "summary": "Add new navigation property to mobileAppConfigurations for deviceAppManagement",
        "operationId": "AddMobileAppConfigurationsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/sideLoadingKeys": {
      "get": {
        "tags": [
          "deviceAppManagement##sideLoadingKeys"
        ],
        "summary": "Get sideLoadingKeys from deviceAppManagement",
        "operationId": "GetSideLoadingKeysFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sideLoadingKey"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##sideLoadingKeys"
        ],
        "summary": "Add new navigation property to sideLoadingKeys for deviceAppManagement",
        "operationId": "AddSideLoadingKeysToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/vppTokens": {
      "get": {
        "tags": [
          "deviceAppManagement##vppTokens"
        ],
        "summary": "Get vppTokens from deviceAppManagement",
        "operationId": "GetVppTokensFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.vppToken"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##vppTokens"
        ],
        "summary": "Add new navigation property to vppTokens for deviceAppManagement",
        "operationId": "AddVppTokensToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/managedAppPolicies": {
      "get": {
        "tags": [
          "deviceAppManagement##managedAppPolicies"
        ],
        "summary": "Get managedAppPolicies from deviceAppManagement",
        "operationId": "GetManagedAppPoliciesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##managedAppPolicies"
        ],
        "summary": "Add new navigation property to managedAppPolicies for deviceAppManagement",
        "operationId": "AddManagedAppPoliciesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/iosManagedAppProtections": {
      "get": {
        "tags": [
          "deviceAppManagement##iosManagedAppProtections"
        ],
        "summary": "Get iosManagedAppProtections from deviceAppManagement",
        "operationId": "GetIosManagedAppProtectionsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.iosManagedAppProtection"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##iosManagedAppProtections"
        ],
        "summary": "Add new navigation property to iosManagedAppProtections for deviceAppManagement",
        "operationId": "AddIosManagedAppProtectionsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/androidManagedAppProtections": {
      "get": {
        "tags": [
          "deviceAppManagement##androidManagedAppProtections"
        ],
        "summary": "Get androidManagedAppProtections from deviceAppManagement",
        "operationId": "GetAndroidManagedAppProtectionsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.androidManagedAppProtection"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##androidManagedAppProtections"
        ],
        "summary": "Add new navigation property to androidManagedAppProtections for deviceAppManagement",
        "operationId": "AddAndroidManagedAppProtectionsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/defaultManagedAppProtections": {
      "get": {
        "tags": [
          "deviceAppManagement##defaultManagedAppProtections"
        ],
        "summary": "Get defaultManagedAppProtections from deviceAppManagement",
        "operationId": "GetDefaultManagedAppProtectionsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.defaultManagedAppProtection"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##defaultManagedAppProtections"
        ],
        "summary": "Add new navigation property to defaultManagedAppProtections for deviceAppManagement",
        "operationId": "AddDefaultManagedAppProtectionsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/targetedManagedAppConfigurations": {
      "get": {
        "tags": [
          "deviceAppManagement##targetedManagedAppConfigurations"
        ],
        "summary": "Get targetedManagedAppConfigurations from deviceAppManagement",
        "operationId": "GetTargetedManagedAppConfigurationsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.targetedManagedAppConfiguration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##targetedManagedAppConfigurations"
        ],
        "summary": "Add new navigation property to targetedManagedAppConfigurations for deviceAppManagement",
        "operationId": "AddTargetedManagedAppConfigurationsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/mdmWindowsInformationProtectionPolicies": {
      "get": {
        "tags": [
          "deviceAppManagement##mdmWindowsInformationProtectionPolicies"
        ],
        "summary": "Get mdmWindowsInformationProtectionPolicies from deviceAppManagement",
        "operationId": "GetMdmWindowsInformationProtectionPoliciesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mdmWindowsInformationProtectionPolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##mdmWindowsInformationProtectionPolicies"
        ],
        "summary": "Add new navigation property to mdmWindowsInformationProtectionPolicies for deviceAppManagement",
        "operationId": "AddMdmWindowsInformationProtectionPoliciesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/windowsInformationProtectionPolicies": {
      "get": {
        "tags": [
          "deviceAppManagement##windowsInformationProtectionPolicies"
        ],
        "summary": "Get windowsInformationProtectionPolicies from deviceAppManagement",
        "operationId": "GetWindowsInformationProtectionPoliciesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionPolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##windowsInformationProtectionPolicies"
        ],
        "summary": "Add new navigation property to windowsInformationProtectionPolicies for deviceAppManagement",
        "operationId": "AddWindowsInformationProtectionPoliciesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/managedAppRegistrations": {
      "get": {
        "tags": [
          "deviceAppManagement##managedAppRegistrations"
        ],
        "summary": "Get managedAppRegistrations from deviceAppManagement",
        "operationId": "GetManagedAppRegistrationsFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##managedAppRegistrations"
        ],
        "summary": "Add new navigation property to managedAppRegistrations for deviceAppManagement",
        "operationId": "AddManagedAppRegistrationsToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/managedAppStatuses": {
      "get": {
        "tags": [
          "deviceAppManagement##managedAppStatuses"
        ],
        "summary": "Get managedAppStatuses from deviceAppManagement",
        "operationId": "GetManagedAppStatusesFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppStatus"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##managedAppStatuses"
        ],
        "summary": "Add new navigation property to managedAppStatuses for deviceAppManagement",
        "operationId": "AddManagedAppStatusesToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/managedEBooks": {
      "get": {
        "tags": [
          "deviceAppManagement##managedEBooks"
        ],
        "summary": "Get managedEBooks from deviceAppManagement",
        "operationId": "GetManagedEBooksFromDeviceAppManagement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime desc",
                "isEnabledForMicrosoftStoreForBusiness",
                "isEnabledForMicrosoftStoreForBusiness desc",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLanguage desc",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                "isEnabledForMicrosoftStoreForBusiness",
                "microsoftStoreForBusinessLanguage",
                "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "windowsManagementApp",
                "mobileApps",
                "mobileAppCategories",
                "enterpriseCodeSigningCertificates",
                "iosLobAppProvisioningConfigurations",
                "symantecCodeSigningCertificate",
                "mobileAppConfigurations",
                "sideLoadingKeys",
                "vppTokens",
                "managedAppPolicies",
                "iosManagedAppProtections",
                "androidManagedAppProtections",
                "defaultManagedAppProtections",
                "targetedManagedAppConfigurations",
                "mdmWindowsInformationProtectionPolicies",
                "windowsInformationProtectionPolicies",
                "managedAppRegistrations",
                "managedAppStatuses",
                "managedEBooks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedEBook"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "deviceAppManagement##managedEBooks"
        ],
        "summary": "Add new navigation property to managedEBooks for deviceAppManagement",
        "operationId": "AddManagedEBooksToDeviceAppManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceAppManagement"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/microsoft.graph.syncMicrosoftStoreForBusinessApps": {
      "post": {
        "tags": [
          "deviceAppManagement"
        ],
        "summary": "Invoke action syncMicrosoftStoreForBusinessApps",
        "operationId": "InvokeSyncMicrosoftStoreForBusinessApps",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get reports",
        "operationId": "GetReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.reportRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "reports"
        ],
        "summary": "Update reports",
        "operationId": "UpdateReports",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.reportRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.deviceConfigurationUserActivity()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function deviceConfigurationUserActivity",
        "operationId": "InvokeDeviceConfigurationUserActivity",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.deviceConfigurationDeviceActivity()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function deviceConfigurationDeviceActivity",
        "operationId": "InvokeDeviceConfigurationDeviceActivity",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserDetail()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationsUserDetail",
        "operationId": "InvokeGetOffice365ActivationsUserDetail",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActivationsUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationCounts()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationCounts",
        "operationId": "InvokeGetOffice365ActivationCounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActivationCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserCounts()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationsUserCounts",
        "operationId": "InvokeGetOffice365ActivationsUserCounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActivationsUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "InvokeGetOffice365ActiveUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActiveUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "InvokeGetOffice365ActiveUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActiveUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ServicesUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ServicesUserCounts",
        "operationId": "InvokeGetOffice365ServicesUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ServicesUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserCounts",
        "operationId": "InvokeGetOffice365ActiveUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365ActiveUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "InvokeGetOffice365GroupsActivityDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "InvokeGetOffice365GroupsActivityDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityCounts",
        "operationId": "InvokeGetOffice365GroupsActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityGroupCounts",
        "operationId": "InvokeGetOffice365GroupsActivityGroupCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityGroupCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityStorage",
        "operationId": "InvokeGetOffice365GroupsActivityStorage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityStorage"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityFileCounts",
        "operationId": "InvokeGetOffice365GroupsActivityFileCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.office365GroupsActivityFileCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "InvokeGetEmailActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "InvokeGetEmailActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityCounts",
        "operationId": "InvokeGetEmailActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserCounts",
        "operationId": "InvokeGetEmailActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "InvokeGetEmailAppUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAppUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "InvokeGetEmailAppUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAppUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageAppsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageAppsUserCounts",
        "operationId": "InvokeGetEmailAppUsageAppsUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAppUsageAppsUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserCounts",
        "operationId": "InvokeGetEmailAppUsageUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAppUsageUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageVersionsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageVersionsUserCounts",
        "operationId": "InvokeGetEmailAppUsageVersionsUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.emailAppUsageVersionsUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageDetail",
        "operationId": "InvokeGetMailboxUsageDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailboxUsageDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageMailboxCounts",
        "operationId": "InvokeGetMailboxUsageMailboxCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailboxUsageMailboxCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageQuotaStatusMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageQuotaStatusMailboxCounts",
        "operationId": "InvokeGetMailboxUsageQuotaStatusMailboxCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailboxUsageQuotaStatusMailboxCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageStorage",
        "operationId": "InvokeGetMailboxUsageStorage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailboxUsageStorage"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "InvokeGetOneDriveActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "InvokeGetOneDriveActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserCounts",
        "operationId": "InvokeGetOneDriveActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.siteActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityFileCounts",
        "operationId": "InvokeGetOneDriveActivityFileCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.siteActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "InvokeGetOneDriveUsageAccountDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveUsageAccountDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "InvokeGetOneDriveUsageAccountDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveUsageAccountDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountCounts",
        "operationId": "InvokeGetOneDriveUsageAccountCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveUsageAccountCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageFileCounts",
        "operationId": "InvokeGetOneDriveUsageFileCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oneDriveUsageFileCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageStorage",
        "operationId": "InvokeGetOneDriveUsageStorage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.siteUsageStorage"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "InvokeGetSharePointActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "InvokeGetSharePointActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityFileCounts",
        "operationId": "InvokeGetSharePointActivityFileCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.siteActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserCounts",
        "operationId": "InvokeGetSharePointActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityPages(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityPages",
        "operationId": "InvokeGetSharePointActivityPages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointActivityPages"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "InvokeGetSharePointSiteUsageDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointSiteUsageDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "InvokeGetSharePointSiteUsageDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointSiteUsageDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageFileCounts",
        "operationId": "InvokeGetSharePointSiteUsageFileCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointSiteUsageFileCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageSiteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageSiteCounts",
        "operationId": "InvokeGetSharePointSiteUsageSiteCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointSiteUsageSiteCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageStorage",
        "operationId": "InvokeGetSharePointSiteUsageStorage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.siteUsageStorage"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsagePages(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsagePages",
        "operationId": "InvokeGetSharePointSiteUsagePages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharePointSiteUsagePages"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "InvokeGetSkypeForBusinessActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "InvokeGetSkypeForBusinessActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessPeerToPeerActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessPeerToPeerActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessPeerToPeerActivityMinuteCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessOrganizerActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessOrganizerActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityMinuteCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessOrganizerActivityMinuteCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessParticipantActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessParticipantActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityMinuteCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessParticipantActivityMinuteCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageDistributionUserCounts",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageDistributionUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessDeviceUsageDistributionUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserCounts",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.skypeForBusinessDeviceUsageUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "InvokeGetYammerActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "InvokeGetYammerActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityCounts",
        "operationId": "InvokeGetYammerActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserCounts",
        "operationId": "InvokeGetYammerActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerActivitySummary"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "InvokeGetYammerDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "InvokeGetYammerDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageDistributionUserCounts",
        "operationId": "InvokeGetYammerDeviceUsageDistributionUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerDeviceUsageDistributionUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserCounts",
        "operationId": "InvokeGetYammerDeviceUsageUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerDeviceUsageUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "InvokeGetYammerGroupsActivityDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerGroupsActivityDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "InvokeGetYammerGroupsActivityDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerGroupsActivityDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityGroupCounts",
        "operationId": "InvokeGetYammerGroupsActivityGroupCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerGroupsActivityGroupCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityCounts",
        "operationId": "InvokeGetYammerGroupsActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.yammerGroupsActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "InvokeGetTeamsUserActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsUserActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "InvokeGetTeamsUserActivityUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsUserActivityUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsUserActivityCounts",
        "operationId": "InvokeGetTeamsUserActivityCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsUserActivityCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsUserActivityUserCounts",
        "operationId": "InvokeGetTeamsUserActivityUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsUserActivityUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "InvokeGetTeamsDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "InvokeGetTeamsDeviceUsageUserDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsDeviceUsageUserDetail"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserCounts",
        "operationId": "InvokeGetTeamsDeviceUsageUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsDeviceUsageUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTeamsDeviceUsageDistributionUserCounts",
        "operationId": "InvokeGetTeamsDeviceUsageDistributionUserCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.teamsDeviceUsageDistributionUserCounts"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTenantSecureScores(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getTenantSecureScores",
        "operationId": "InvokeGetTenantSecureScores",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get education",
        "operationId": "GetEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "education"
        ],
        "summary": "Update education",
        "operationId": "UpdateEducation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education/synchronizationProfiles": {
      "get": {
        "tags": [
          "education##synchronizationProfiles"
        ],
        "summary": "Get synchronizationProfiles from education",
        "operationId": "GetSynchronizationProfilesFromEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationSynchronizationProfile"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "education##synchronizationProfiles"
        ],
        "summary": "Add new navigation property to synchronizationProfiles for education",
        "operationId": "AddSynchronizationProfilesToEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education/classes": {
      "get": {
        "tags": [
          "education##classes"
        ],
        "summary": "Get classes from education",
        "operationId": "GetClassesFromEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationClass"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "education##classes"
        ],
        "summary": "Add new navigation property to classes for education",
        "operationId": "AddClassesToEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education/schools": {
      "get": {
        "tags": [
          "education##schools"
        ],
        "summary": "Get schools from education",
        "operationId": "GetSchoolsFromEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationSchool"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "education##schools"
        ],
        "summary": "Add new navigation property to schools for education",
        "operationId": "AddSchoolsToEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education/users": {
      "get": {
        "tags": [
          "education##users"
        ],
        "summary": "Get users from education",
        "operationId": "GetUsersFromEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "education##users"
        ],
        "summary": "Add new navigation property to users for education",
        "operationId": "AddUsersToEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/education/me": {
      "get": {
        "tags": [
          "education##me"
        ],
        "summary": "Get me from education",
        "operationId": "GetMeFromEducation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "synchronizationProfiles",
                "classes",
                "schools",
                "users",
                "me"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "education##me"
        ],
        "summary": "Update the navigation property me in education",
        "operationId": "UpdateMeInEducation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New navigation property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  },
  "definitions": {
    "microsoft.graph.entity": {
      "title": "entity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.extension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "extension",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.directoryObject": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directoryObject",
          "type": "object",
          "properties": {
            "deletedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.user": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "user",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "description": "true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
              "type": "boolean"
            },
            "assignedLicenses": {
              "description": "The licenses that are assigned to the user. Not nullable.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedLicense"
              }
            },
            "assignedPlans": {
              "description": "The plans that are assigned to the user. Read-only. Not nullable.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedPlan"
              }
            },
            "businessPhones": {
              "description": "The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "description": "The city in which the user is located. Supports $filter.",
              "type": "string"
            },
            "companyName": {
              "description": "The company name which the user is associated. Read-only.",
              "type": "string"
            },
            "country": {
              "description": "The country/region in which the user is located; for example, “US” or “UK”. Supports $filter.",
              "type": "string"
            },
            "department": {
              "description": "The name for the department in which the user works. Supports $filter.",
              "type": "string"
            },
            "deviceKeys": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceKey"
              }
            },
            "displayName": {
              "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
              "type": "string"
            },
            "employeeId": {
              "type": "string"
            },
            "givenName": {
              "description": "The given name (first name) of the user. Supports $filter.",
              "type": "string"
            },
            "imAddresses": {
              "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobTitle": {
              "description": "The user’s job title. Supports $filter.",
              "type": "string"
            },
            "mail": {
              "description": "The SMTP address for the user, for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
              "type": "string"
            },
            "mailNickname": {
              "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
              "type": "string"
            },
            "mobilePhone": {
              "description": "The primary cellular telephone number for the user.",
              "type": "string"
            },
            "onPremisesImmutableId": {
              "description": "This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property. Important: The $ and **_** characters cannot be used when specifying this property. Supports $filter.",
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "description": "Indicates the last time at which the object was synced with the on-premises directory; for example: '2013-02-16T03:04:54Z'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesProvisioningErrors": {
              "type": "array",
              "items": { }
            },
            "onPremisesSecurityIdentifier": {
              "description": "Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only",
              "type": "boolean"
            },
            "onPremisesDomainName": {
              "type": "string"
            },
            "onPremisesSamAccountName": {
              "type": "string"
            },
            "onPremisesUserPrincipalName": {
              "type": "string"
            },
            "passwordPolicies": {
              "description": "Specifies password policies for the user. This value is an enumeration with one possible value being “DisableStrongPassword”, which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two may be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
              "type": "string"
            },
            "passwordProfile": {
              "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required."
            },
            "officeLocation": {
              "description": "The office location in the user's place of business.",
              "type": "string"
            },
            "postalCode": {
              "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.",
              "type": "string"
            },
            "preferredDataLocation": {
              "type": "string"
            },
            "preferredLanguage": {
              "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example 'en-US'.",
              "type": "string"
            },
            "provisionedPlans": {
              "description": "The plans that are provisioned for the user. Read-only. Not nullable.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.provisionedPlan"
              }
            },
            "proxyAddresses": {
              "description": "For example: ['SMTP:bob@contoso.com', 'smtp:bob@sales.contoso.com'] The any operator is required for filter expressions on multi-valued properties. Read-only, Not nullable. Supports $filter.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "refreshTokensValidFromDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "showInAddressList": {
              "type": "boolean"
            },
            "state": {
              "description": "The state or province in the user's address. Supports $filter.",
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address of the user's place of business.",
              "type": "string"
            },
            "surname": {
              "description": "The user's surname (family name or last name). Supports $filter.",
              "type": "string"
            },
            "usageLocation": {
              "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
              "type": "string"
            },
            "userType": {
              "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
              "type": "string"
            },
            "mailboxSettings": {
              "description": "Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale and time zone."
            },
            "aboutMe": {
              "description": "A freeform text entry field for the user to describe themselves.",
              "type": "string"
            },
            "birthday": {
              "format": "date-time",
              "description": "The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hireDate": {
              "format": "date-time",
              "description": "The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "interests": {
              "description": "A list for the user to describe their interests.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mySite": {
              "description": "The URL for the user's personal site.",
              "type": "string"
            },
            "pastProjects": {
              "description": "A list for the user to enumerate their past projects.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "preferredName": {
              "description": "The preferred name for the user.",
              "type": "string"
            },
            "responsibilities": {
              "description": "A list for the user to enumerate their responsibilities.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schools": {
              "description": "A list for the user to enumerate the schools they have attended.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "skills": {
              "description": "A list for the user to enumerate their skills.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "identityUserRisk": { },
            "deviceEnrollmentLimit": {
              "format": "int32",
              "description": "The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "ownedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "registeredDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "manager": { },
            "directReports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "createdObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "ownedObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "scopedRoleMemberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
              }
            },
            "licenseDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.licenseDetails"
              }
            },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.activity"
              }
            },
            "outlook": { },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "joinedGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.group"
              }
            },
            "mailFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "calendar": { },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            },
            "calendarGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendarGroup"
              }
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "people": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.person"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "contactFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "inferenceClassification": { },
            "photo": { },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.profilePhoto"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "insights": { },
            "planner": { },
            "onenote": { },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            },
            "managedAppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
              }
            },
            "devices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.device"
              }
            },
            "joinedTeams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.group"
              }
            },
            "deviceManagementTroubleshootingEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.assignedLicense": {
      "title": "assignedLicense",
      "type": "object",
      "properties": {
        "disabledPlans": {
          "type": "array",
          "items": {
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          }
        },
        "skuId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.assignedPlan": {
      "title": "assignedPlan",
      "type": "object",
      "properties": {
        "assignedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "capabilityStatus": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "servicePlanId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.deviceKey": {
      "title": "deviceKey",
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string"
        },
        "keyMaterial": {
          "format": "base64url",
          "type": "string"
        },
        "deviceId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.onPremisesProvisioningError": {
      "title": "onPremisesProvisioningError",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "propertyCausingError": {
          "type": "string"
        },
        "occurredDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.passwordProfile": {
      "title": "passwordProfile",
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "forceChangePasswordNextSignIn": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.provisionedPlan": {
      "title": "provisionedPlan",
      "type": "object",
      "properties": {
        "capabilityStatus": {
          "type": "string"
        },
        "provisioningStatus": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.scopedRoleMembership": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "scopedRoleMembership",
          "type": "object",
          "properties": {
            "roleId": {
              "type": "string"
            },
            "administrativeUnitId": {
              "type": "string"
            },
            "roleMemberInfo": {
              "$ref": "#/definitions/microsoft.graph.identity"
            }
          }
        }
      ]
    },
    "microsoft.graph.licenseDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "licenseDetails",
          "type": "object",
          "properties": {
            "servicePlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.servicePlanInfo"
              }
            },
            "skuId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.activity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "activity",
          "type": "object",
          "properties": {
            "visualElements": {
              "$ref": "#/definitions/microsoft.graph.visualInfo"
            },
            "activitySourceHost": {
              "type": "string"
            },
            "activationUrl": {
              "type": "string"
            },
            "appActivityId": {
              "type": "string"
            },
            "appDisplayName": {
              "type": "string"
            },
            "contentUrl": {
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "fallbackUrl": {
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userTimezone": {
              "type": "string"
            },
            "contentInfo": { },
            "historyItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.historyItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mailboxSettings": {
      "title": "mailboxSettings",
      "type": "object",
      "properties": {
        "automaticRepliesSetting": { },
        "archiveFolder": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "language": { },
        "workingHours": { }
      }
    },
    "microsoft.graph.automaticRepliesSetting": {
      "title": "automaticRepliesSetting",
      "type": "object",
      "properties": {
        "status": { },
        "externalAudience": { },
        "scheduledStartDateTime": { },
        "scheduledEndDateTime": { },
        "internalReplyMessage": {
          "type": "string"
        },
        "externalReplyMessage": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.dateTimeTimeZone": {
      "title": "dateTimeTimeZone",
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.localeInfo": {
      "title": "localeInfo",
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workingHours": {
      "title": "workingHours",
      "type": "object",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "items": { }
        },
        "startTime": {
          "format": "time",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "endTime": {
          "format": "time",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "timeZone": { }
      }
    },
    "microsoft.graph.timeZoneBase": {
      "title": "timeZoneBase",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.outlookUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookUser",
          "type": "object",
          "properties": {
            "masterCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookCategory"
              }
            },
            "taskGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookTaskGroup"
              }
            },
            "taskFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookTaskFolder"
              }
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookTask"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.outlookItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookItem",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "changeKey": {
              "type": "string"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.message": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "message",
          "type": "object",
          "properties": {
            "receivedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "sentDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "internetMessageId": {
              "type": "string"
            },
            "internetMessageHeaders": {
              "type": "array",
              "items": { }
            },
            "subject": {
              "type": "string"
            },
            "body": { },
            "bodyPreview": {
              "type": "string"
            },
            "importance": { },
            "parentFolderId": {
              "type": "string"
            },
            "sender": { },
            "from": { },
            "toRecipients": {
              "type": "array",
              "items": { }
            },
            "ccRecipients": {
              "type": "array",
              "items": { }
            },
            "bccRecipients": {
              "type": "array",
              "items": { }
            },
            "replyTo": {
              "type": "array",
              "items": { }
            },
            "conversationId": {
              "type": "string"
            },
            "conversationIndex": {
              "format": "base64url",
              "type": "string"
            },
            "uniqueBody": { },
            "isDeliveryReceiptRequested": {
              "type": "boolean"
            },
            "isReadReceiptRequested": {
              "type": "boolean"
            },
            "isRead": {
              "type": "boolean"
            },
            "isDraft": {
              "type": "boolean"
            },
            "webLink": {
              "type": "string"
            },
            "mentionsPreview": { },
            "inferenceClassification": { },
            "unsubscribeData": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "unsubscribeEnabled": {
              "type": "boolean"
            },
            "flag": { },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mention"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.group": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "group",
          "type": "object",
          "properties": {
            "classification": {
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "groupTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mail": {
              "type": "string"
            },
            "mailEnabled": {
              "type": "boolean"
            },
            "mailNickname": {
              "type": "string"
            },
            "membershipRule": {
              "type": "string"
            },
            "membershipRuleProcessingState": {
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesProvisioningErrors": {
              "type": "array",
              "items": { }
            },
            "onPremisesSecurityIdentifier": {
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "preferredLanguage": {
              "type": "string"
            },
            "proxyAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "renewedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "resourceBehaviorOptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "resourceProvisioningOptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityEnabled": {
              "type": "boolean"
            },
            "theme": {
              "type": "string"
            },
            "visibility": {
              "type": "string"
            },
            "accessType": { },
            "allowExternalSenders": {
              "type": "boolean"
            },
            "autoSubscribeNewMembers": {
              "type": "boolean"
            },
            "isFavorite": {
              "type": "boolean"
            },
            "isSubscribedByMail": {
              "type": "boolean"
            },
            "unseenCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unseenConversationsCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unseenMessagesCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "createdOnBehalfOf": { },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "settings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directorySetting"
              }
            },
            "endpoints": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.endpoint"
              }
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            },
            "calendar": { },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversation"
              }
            },
            "photo": { },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.profilePhoto"
              }
            },
            "acceptedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "rejectedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "planner": { },
            "onenote": { },
            "team": { },
            "channels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.channel"
              }
            },
            "groupLifecyclePolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mailFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailFolder",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "parentFolderId": {
              "type": "string"
            },
            "childFolderCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unreadItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "wellKnownName": {
              "type": "string"
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "messageRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.messageRule"
              }
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "userConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.userConfiguration"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.calendar": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendar",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "color": { },
            "hexColor": {
              "type": "string"
            },
            "isDefaultCalendar": {
              "type": "boolean"
            },
            "changeKey": {
              "type": "string"
            },
            "canShare": {
              "type": "boolean"
            },
            "canViewPrivateItems": {
              "type": "boolean"
            },
            "isShared": {
              "type": "boolean"
            },
            "isSharedWithMe": {
              "type": "boolean"
            },
            "canEdit": {
              "type": "boolean"
            },
            "owner": { },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.calendarGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendarGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "classId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "changeKey": {
              "type": "string"
            },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.event": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "event",
          "type": "object",
          "properties": {
            "originalStartTimeZone": {
              "type": "string"
            },
            "originalEndTimeZone": {
              "type": "string"
            },
            "responseStatus": { },
            "iCalUId": {
              "type": "string"
            },
            "reminderMinutesBeforeStart": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isReminderOn": {
              "type": "boolean"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "subject": {
              "type": "string"
            },
            "body": { },
            "bodyPreview": {
              "type": "string"
            },
            "importance": { },
            "sensitivity": { },
            "start": { },
            "originalStart": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "end": { },
            "location": { },
            "locations": {
              "type": "array",
              "items": { }
            },
            "isAllDay": {
              "type": "boolean"
            },
            "isCancelled": {
              "type": "boolean"
            },
            "isOrganizer": {
              "type": "boolean"
            },
            "recurrence": { },
            "responseRequested": {
              "type": "boolean"
            },
            "seriesMasterId": {
              "type": "string"
            },
            "showAs": { },
            "type": { },
            "attendees": {
              "type": "array",
              "items": { }
            },
            "organizer": { },
            "webLink": {
              "type": "string"
            },
            "onlineMeetingUrl": {
              "type": "string"
            },
            "creationOptions": { },
            "calendar": { },
            "instances": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.person": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "person",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "birthday": {
              "type": "string"
            },
            "personNotes": {
              "type": "string"
            },
            "isFavorite": {
              "type": "boolean"
            },
            "emailAddresses": {
              "type": "array",
              "items": { }
            },
            "phones": {
              "type": "array",
              "items": { }
            },
            "postalAddresses": {
              "type": "array",
              "items": { }
            },
            "websites": {
              "type": "array",
              "items": { }
            },
            "title": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "yomiCompany": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "officeLocation": {
              "type": "string"
            },
            "profession": {
              "type": "string"
            },
            "sources": {
              "type": "array",
              "items": { }
            },
            "mailboxType": {
              "type": "string"
            },
            "personType": {
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.contact": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "contact",
          "type": "object",
          "properties": {
            "parentFolderId": {
              "type": "string"
            },
            "birthday": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "fileAs": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "initials": {
              "type": "string"
            },
            "middleName": {
              "type": "string"
            },
            "nickName": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "yomiGivenName": {
              "type": "string"
            },
            "yomiSurname": {
              "type": "string"
            },
            "yomiCompanyName": {
              "type": "string"
            },
            "generation": {
              "type": "string"
            },
            "emailAddresses": {
              "type": "array",
              "items": { }
            },
            "websites": {
              "type": "array",
              "items": { }
            },
            "imAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobTitle": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "officeLocation": {
              "type": "string"
            },
            "profession": {
              "type": "string"
            },
            "assistantName": {
              "type": "string"
            },
            "manager": {
              "type": "string"
            },
            "phones": {
              "type": "array",
              "items": { }
            },
            "postalAddresses": {
              "type": "array",
              "items": { }
            },
            "spouseName": {
              "type": "string"
            },
            "personalNotes": {
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "weddingAnniversary": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "isFavorite": {
              "type": "boolean"
            },
            "flag": { },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "photo": { }
          }
        }
      ]
    },
    "microsoft.graph.contactFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contactFolder",
          "type": "object",
          "properties": {
            "parentFolderId": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "wellKnownName": {
              "type": "string"
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.inferenceClassification": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassification",
          "type": "object",
          "properties": {
            "overrides": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.inferenceClassificationOverride"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.profilePhoto": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "profilePhoto",
          "type": "object",
          "properties": {
            "height": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "width": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.baseItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "baseItem",
          "type": "object",
          "properties": {
            "createdBy": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "eTag": {
              "type": "string"
            },
            "lastModifiedBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "parentReference": { },
            "webUrl": {
              "type": "string"
            },
            "createdByUser": { },
            "lastModifiedByUser": { }
          }
        }
      ]
    },
    "microsoft.graph.drive": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "drive",
          "type": "object",
          "properties": {
            "driveType": {
              "type": "string"
            },
            "owner": { },
            "quota": { },
            "sharePointIds": { },
            "system": { },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.itemActivity"
              }
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { },
            "root": { },
            "special": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.officeGraphInsights": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "officeGraphInsights",
          "type": "object",
          "properties": {
            "trending": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.trending"
              }
            },
            "shared": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sharedInsight"
              }
            },
            "used": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.usedInsight"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerUser",
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenote": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenote",
          "type": "object",
          "properties": {
            "notebooks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.notebook"
              }
            },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteResource"
              }
            },
            "operations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteOperation"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.identityUserRisk": {
      "title": "identityUserRisk",
      "type": "object",
      "properties": {
        "level": { },
        "lastChangedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.managedDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDevice",
          "description": "Devices that are managed or pre-enrolled through Intune",
          "type": "object",
          "properties": {
            "userId": {
              "description": "Unique Identifier for the user associated with the device",
              "type": "string"
            },
            "deviceName": {
              "description": "Name of the device",
              "type": "string"
            },
            "hardwareInformation": {
              "description": "The hardward details for the device.  Includes information such as storage space, manufacturer, serial number, etc."
            },
            "ownerType": {
              "description": "Ownership of the device. Can be 'company' or 'personal'"
            },
            "deviceActionResults": {
              "description": "List of ComplexType deviceActionResult objects.",
              "type": "array",
              "items": { }
            },
            "managementState": {
              "description": "Management state of the device."
            },
            "enrolledDateTime": {
              "format": "date-time",
              "description": "Enrollment time of the device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "The date and time that the device last completed a successful sync with Intune.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "chassisType": {
              "description": "Chassis type of the device."
            },
            "operatingSystem": {
              "description": "Operating system of the device. Windows, iOS, etc.",
              "type": "string"
            },
            "deviceType": {
              "description": "Platform of the device."
            },
            "complianceState": {
              "description": "Compliance state of the device."
            },
            "jailBroken": {
              "description": "whether the device is jail broken or rooted.",
              "type": "string"
            },
            "managementAgent": {
              "description": "Management channel of the device. Intune, EAS, etc."
            },
            "osVersion": {
              "description": "Operating system version of the device.",
              "type": "string"
            },
            "easActivated": {
              "description": "Whether the device is Exchange ActiveSync activated.",
              "type": "boolean"
            },
            "easDeviceId": {
              "description": "Exchange ActiveSync Id of the device.",
              "type": "string"
            },
            "easActivationDateTime": {
              "format": "date-time",
              "description": "Exchange ActivationSync activation time of the device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "aadRegistered": {
              "description": "Whether the device is Azure Active Directory registered.",
              "type": "boolean"
            },
            "azureADRegistered": {
              "description": "Whether the device is Azure Active Directory registered.",
              "type": "boolean"
            },
            "deviceEnrollmentType": {
              "description": "Enrollment type of the device."
            },
            "lostModeState": {
              "description": "Indicates if Lost mode is enabled or disabled"
            },
            "activationLockBypassCode": {
              "description": "Code that allows the Activation Lock on a device to be bypassed.",
              "type": "string"
            },
            "emailAddress": {
              "description": "Email(s) for the user associated with the device",
              "type": "string"
            },
            "azureActiveDirectoryDeviceId": {
              "description": "The unique identifier for the Azure Active Directory device. Read only.",
              "type": "string"
            },
            "deviceRegistrationState": {
              "description": "Device registration state."
            },
            "deviceCategoryDisplayName": {
              "description": "Device category display name",
              "type": "string"
            },
            "isSupervised": {
              "description": "Device supervised status",
              "type": "boolean"
            },
            "exchangeLastSuccessfulSyncDateTime": {
              "format": "date-time",
              "description": "Last time the device contacted Exchange.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "exchangeAccessState": {
              "description": "The Access State of the device in Exchange."
            },
            "exchangeAccessStateReason": {
              "description": "The reason for the device's access state in Exchange."
            },
            "remoteAssistanceSessionUrl": {
              "description": "Url that allows a Remote Assistance session to be established with the device.",
              "type": "string"
            },
            "remoteAssistanceSessionErrorString": {
              "description": "An error string that identifies issues when creating Remote Assistance session objects.",
              "type": "string"
            },
            "isEncrypted": {
              "description": "Device encryption status",
              "type": "boolean"
            },
            "userPrincipalName": {
              "description": "Device user principal name",
              "type": "string"
            },
            "model": {
              "description": "Model of the device",
              "type": "string"
            },
            "manufacturer": {
              "description": "Manufacturer of the device",
              "type": "string"
            },
            "imei": {
              "description": "IMEI",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "serialNumber": {
              "description": "SerialNumber",
              "type": "string"
            },
            "phoneNumber": {
              "description": "Phone number of the device",
              "type": "string"
            },
            "androidSecurityPatchLevel": {
              "description": "Android security patch level",
              "type": "string"
            },
            "userDisplayName": {
              "description": "User display name",
              "type": "string"
            },
            "configurationManagerClientEnabledFeatures": {
              "description": "ConfigrMgr client enabled features"
            },
            "wiFiMacAddress": {
              "description": "Wi-Fi MAC",
              "type": "string"
            },
            "deviceHealthAttestationState": {
              "description": "The device health attestation state."
            },
            "subscriberCarrier": {
              "description": "Subscriber Carrier",
              "type": "string"
            },
            "meid": {
              "description": "MEID",
              "type": "string"
            },
            "totalStorageSpaceInBytes": {
              "format": "int64",
              "description": "Total Storage in Bytes",
              "type": "integer"
            },
            "freeStorageSpaceInBytes": {
              "format": "int64",
              "description": "Free Storage in Bytes",
              "type": "integer"
            },
            "managedDeviceName": {
              "description": "Automatically generated name to identify a device. Can be overwritten to a user friendly name.",
              "type": "string"
            },
            "partnerReportedThreatState": {
              "description": "Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only."
            },
            "deviceConfigurationStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationState"
              }
            },
            "detectedApps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.detectedApp"
              }
            },
            "deviceCategory": { },
            "windowsProtectionState": { },
            "deviceCompliancePolicyStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicyState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppRegistration",
          "description": "The ManagedAppEntity is the base entity type for all other entity types under app management workflow.",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "Date and time of creation",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Date and time of last the app synced with management service.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "applicationVersion": {
              "description": "App version",
              "type": "string"
            },
            "managementSdkVersion": {
              "description": "App management SDK version",
              "type": "string"
            },
            "platformVersion": {
              "description": "Operating System version",
              "type": "string"
            },
            "deviceType": {
              "description": "Host device type",
              "type": "string"
            },
            "deviceTag": {
              "description": "App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.",
              "type": "string"
            },
            "deviceName": {
              "description": "Host device name",
              "type": "string"
            },
            "flaggedReasons": {
              "description": "Zero or more reasons an app registration is flagged. E.g. app running on rooted device",
              "type": "array",
              "items": { }
            },
            "userId": {
              "description": "The user Id to who this app registration belongs.",
              "type": "string"
            },
            "appIdentifier": {
              "description": "The app package Identifier"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            },
            "appliedPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "intendedPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "operations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppOperation"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.device": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "device",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "type": "boolean"
            },
            "alternativeSecurityIds": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.alternativeSecurityId"
              }
            },
            "approximateLastSignInDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deviceId": {
              "type": "string"
            },
            "deviceMetadata": {
              "type": "string"
            },
            "deviceVersion": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "displayName": {
              "type": "string"
            },
            "isCompliant": {
              "type": "boolean"
            },
            "isManaged": {
              "type": "boolean"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "operatingSystem": {
              "type": "string"
            },
            "operatingSystemVersion": {
              "type": "string"
            },
            "physicalIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trustType": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Manufacturer": {
              "type": "string"
            },
            "Model": {
              "type": "string"
            },
            "Kind": {
              "type": "string"
            },
            "Status": {
              "type": "string"
            },
            "Platform": {
              "type": "string"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "registeredOwners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "registeredUsers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "commands": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.command"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementTroubleshootingEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementTroubleshootingEvent",
          "description": "Event representing an general failure.",
          "type": "object",
          "properties": {
            "eventDateTime": {
              "format": "date-time",
              "description": "Time when the event occurred .",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "correlationId": {
              "description": "Id used for tracing the failure in the service.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.directorySetting": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directorySetting",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "templateId": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingValue"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.endpoint": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "endpoint",
          "type": "object",
          "properties": {
            "capability": {
              "type": "string"
            },
            "providerId": {
              "type": "string"
            },
            "providerName": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            },
            "providerResourceId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.conversationThread": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversationThread",
          "type": "object",
          "properties": {
            "toRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "topic": {
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uniqueSenders": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ccRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "preview": {
              "type": "string"
            },
            "isLocked": {
              "type": "boolean"
            },
            "posts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.post"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.conversation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversation",
          "type": "object",
          "properties": {
            "topic": {
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uniqueSenders": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "preview": {
              "type": "string"
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.site": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "site",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "root": { },
            "sharepointIds": { },
            "siteCollection": { },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.baseItem"
              }
            },
            "lists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.list"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "onenote": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerGroup",
          "type": "object",
          "properties": {
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.team": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "team",
          "type": "object",
          "properties": {
            "memberSettings": { },
            "messagingSettings": { },
            "funSettings": { },
            "guestSettings": { },
            "channels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.channel"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.channel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "channel",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "chatThreads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.chatThread"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.groupLifecyclePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "groupLifecyclePolicy",
          "type": "object",
          "properties": {
            "groupLifetimeInDays": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "managedGroupTypes": {
              "type": "string"
            },
            "alternateNotificationEmails": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.alternativeSecurityId": {
      "title": "alternativeSecurityId",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "identityProvider": {
          "type": "string"
        },
        "key": {
          "format": "base64url",
          "type": "string"
        }
      }
    },
    "microsoft.graph.command": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "command",
          "type": "object",
          "properties": {
            "Status": {
              "type": "string"
            },
            "Type": {
              "type": "string"
            },
            "AppServiceName": {
              "type": "string"
            },
            "PackageFamilyName": {
              "type": "string"
            },
            "Error": {
              "type": "string"
            },
            "Payload": { },
            "PermissionTicket": {
              "type": "string"
            },
            "PostBackUri": {
              "type": "string"
            },
            "responsepayload": { }
          }
        }
      ]
    },
    "microsoft.graph.administrativeUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "administrativeUnit",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "visibility": {
              "type": "string"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "scopedRoleMembers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.organization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "organization",
          "type": "object",
          "properties": {
            "assignedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedPlan"
              }
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "countryLetterCode": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isMultipleDataLocationsForServicesEnabled": {
              "type": "boolean"
            },
            "marketingNotificationEmails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "postalCode": {
              "type": "string"
            },
            "preferredLanguage": {
              "type": "string"
            },
            "provisionedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.provisionedPlan"
              }
            },
            "securityComplianceNotificationMails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityComplianceNotificationPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "technicalNotificationMails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "verifiedDomains": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.verifiedDomain"
              }
            },
            "mobileDeviceManagementAuthority": {
              "description": "Mobile device management authority."
            },
            "certificateConnectorSetting": {
              "description": "Certificate connector setting."
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "depOnboardingSettings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.depOnboardingSetting"
              }
            },
            "appleVolumePurchaseProgramTokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.appleVolumePurchaseProgramToken"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.verifiedDomain": {
      "title": "verifiedDomain",
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isInitial": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.certificateConnectorSetting": {
      "title": "certificateConnectorSetting",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "Certificate connector status",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "certExpiryTime": {
          "format": "date-time",
          "description": "Certificate expire time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "enrollmentError": {
          "description": "Certificate connector enrollment error",
          "type": "string"
        },
        "lastConnectorConnectionTime": {
          "format": "date-time",
          "description": "Last time certificate connector connected",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "connectorVersion": {
          "description": "Version of certificate connector",
          "type": "string"
        },
        "lastUploadVersion": {
          "format": "int64",
          "description": "Version of last uploaded certificate connector",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.depOnboardingSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "depOnboardingSetting",
          "description": "The depOnboardingSetting represents an instance of the Apple DEP service being onboarded to Intune. The onboarded service instance manages an Apple Token used to synchronize data between Apple and Intune.",
          "type": "object",
          "properties": {
            "appleIdentifier": {
              "description": "The Apple ID used to obtain the current token.",
              "type": "string"
            },
            "tokenExpirationDateTime": {
              "format": "date-time",
              "description": "When the token will expire.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "When the service was onboarded.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSuccessfulSyncDateTime": {
              "format": "date-time",
              "description": "When the service last syned with Intune",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncTriggeredDateTime": {
              "format": "date-time",
              "description": "When Intune last requested a sync.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "shareTokenWithSchoolDataSyncService": {
              "description": "Whether or not the Dep token sharing is enabled with the School Data Sync service.",
              "type": "boolean"
            },
            "lastSyncErrorCode": {
              "format": "int32",
              "description": "Error code reported by Apple during last dep sync.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.appleVolumePurchaseProgramToken": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "appleVolumePurchaseProgramToken",
          "type": "object",
          "properties": {
            "organizationName": {
              "description": "The organization associated with the Apple Volume Purchase Program Token",
              "type": "string"
            },
            "volumePurchaseProgramTokenAccountType": {
              "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
            },
            "appleId": {
              "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration date time of the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "token": {
              "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`."
            },
            "lastSyncStatus": {
              "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`."
            },
            "automaticallyUpdateApps": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "boolean"
            },
            "countryOrRegion": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.schemaExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "schemaExtension",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "targetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extensionSchemaProperty"
              }
            },
            "status": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.extensionSchemaProperty": {
      "title": "extensionSchemaProperty",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.directory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directory",
          "type": "object",
          "properties": {
            "deletedItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.extensionProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "extensionProperty",
          "type": "object",
          "properties": {
            "appDisplayName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "dataType": {
              "type": "string"
            },
            "isSyncedFromOnPremises": {
              "type": "boolean"
            },
            "targetObjects": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.allowedDataLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "allowedDataLocation",
          "type": "object",
          "properties": {
            "appId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "isDefault": {
              "type": "boolean"
            },
            "domain": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.application": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "application",
          "type": "object",
          "properties": {
            "api": { },
            "allowPublicClient": {
              "type": "boolean"
            },
            "applicationAliases": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "appRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.appRole"
              }
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "installedClients": { },
            "displayName": {
              "type": "string"
            },
            "info": { },
            "keyCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.keyCredential"
              }
            },
            "logo": {
              "format": "base64url",
              "type": "string"
            },
            "orgRestrictions": {
              "type": "array",
              "items": {
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
              }
            },
            "passwordCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.passwordCredential"
              }
            },
            "preAuthorizedApplications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.preAuthorizedApplication"
              }
            },
            "requiredResourceAccess": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.requiredResourceAccess"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "web": { },
            "extensionProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extensionProperty"
              }
            },
            "createdOnBehalfOf": { },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "policies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "synchronization": { }
          }
        }
      ]
    },
    "microsoft.graph.api": {
      "title": "api",
      "type": "object",
      "properties": {
        "acceptedAccessTokenVersion": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "publishedPermissionScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.permissionScope"
          }
        }
      }
    },
    "microsoft.graph.permissionScope": {
      "title": "permissionScope",
      "type": "object",
      "properties": {
        "adminConsentDescription": {
          "type": "string"
        },
        "adminConsentDisplayName": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "origin": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "userConsentDescription": {
          "type": "string"
        },
        "userConsentDisplayName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.appRole": {
      "title": "appRole",
      "type": "object",
      "properties": {
        "allowedMemberTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "origin": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.installedClient": {
      "title": "installedClient",
      "type": "object",
      "properties": {
        "redirectUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.informationalUrl": {
      "title": "informationalUrl",
      "type": "object",
      "properties": {
        "logoUrl": {
          "type": "string"
        },
        "marketingUrl": {
          "type": "string"
        },
        "privacyStatementUrl": {
          "type": "string"
        },
        "supportUrl": {
          "type": "string"
        },
        "termsOfServiceUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.keyCredential": {
      "title": "keyCredential",
      "type": "object",
      "properties": {
        "customKeyIdentifier": {
          "format": "base64url",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "keyId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "key": {
          "format": "base64url",
          "type": "string"
        }
      }
    },
    "microsoft.graph.passwordCredential": {
      "title": "passwordCredential",
      "type": "object",
      "properties": {
        "customKeyIdentifier": {
          "format": "base64url",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "keyId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "secretText": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.preAuthorizedApplication": {
      "title": "preAuthorizedApplication",
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "permissionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.requiredResourceAccess": {
      "title": "requiredResourceAccess",
      "type": "object",
      "properties": {
        "resourceAppId": {
          "type": "string"
        },
        "resourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.resourceAccess"
          }
        }
      }
    },
    "microsoft.graph.resourceAccess": {
      "title": "resourceAccess",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.web": {
      "title": "web",
      "type": "object",
      "properties": {
        "redirectUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logoutUrl": {
          "type": "string"
        },
        "oauth2AllowImplicitFlow": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.synchronization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "synchronization",
          "type": "object",
          "properties": {
            "secrets": {
              "type": "array",
              "items": { }
            },
            "jobs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.synchronizationJob"
              }
            },
            "templates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.synchronizationTemplate"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.appRoleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "appRoleAssignment",
          "type": "object",
          "properties": {
            "creationTimestamp": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "principalDisplayName": {
              "type": "string"
            },
            "principalId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "principalType": {
              "type": "string"
            },
            "resourceDisplayName": {
              "type": "string"
            },
            "resourceId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.orgContact": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "orgContact",
          "type": "object",
          "properties": {
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "mail": {
              "type": "string"
            },
            "mailNickname": {
              "type": "string"
            },
            "mobilePhone": {
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesProvisioningErrors": {
              "type": "array",
              "items": { }
            },
            "officeLocation": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "proxyAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "type": "string"
            },
            "streetAddress": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "manager": { },
            "directReports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.directoryRole": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRole",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "roleTemplateId": {
              "type": "string"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "scopedMembers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.scopedRoleMembership"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.directoryRoleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRoleTemplate",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.settingValue": {
      "title": "settingValue",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.directorySettingTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directorySettingTemplate",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingTemplateValue"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.settingTemplateValue": {
      "title": "settingTemplateValue",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.domain": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domain",
          "type": "object",
          "properties": {
            "authenticationType": {
              "type": "string"
            },
            "availabilityStatus": {
              "type": "string"
            },
            "isAdminManaged": {
              "type": "boolean"
            },
            "isDefault": {
              "type": "boolean"
            },
            "isInitial": {
              "type": "boolean"
            },
            "isRoot": {
              "type": "boolean"
            },
            "isVerified": {
              "type": "boolean"
            },
            "supportedServices": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": { },
            "serviceConfigurationRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            },
            "verificationDnsRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            },
            "domainNameReferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.domainState": {
      "title": "domainState",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.domainDnsRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domainDnsRecord",
          "type": "object",
          "properties": {
            "isOptional": {
              "type": "boolean"
            },
            "label": {
              "type": "string"
            },
            "recordType": {
              "type": "string"
            },
            "supportedService": {
              "type": "string"
            },
            "ttl": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsCnameRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsCnameRecord",
          "type": "object",
          "properties": {
            "canonicalName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsMxRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsMxRecord",
          "type": "object",
          "properties": {
            "mailExchange": {
              "type": "string"
            },
            "preference": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsSrvRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsSrvRecord",
          "type": "object",
          "properties": {
            "nameTarget": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "priority": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "protocol": {
              "type": "string"
            },
            "service": {
              "type": "string"
            },
            "weight": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsTxtRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsTxtRecord",
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsUnavailableRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsUnavailableRecord",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.servicePlanInfo": {
      "title": "servicePlanInfo",
      "type": "object",
      "properties": {
        "servicePlanId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "servicePlanName": {
          "type": "string"
        },
        "provisioningStatus": {
          "type": "string"
        },
        "appliesTo": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.oAuth2PermissionGrant": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "oAuth2PermissionGrant",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string"
            },
            "consentType": {
              "type": "string"
            },
            "expiryTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "startTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.policy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "policy",
          "type": "object",
          "properties": {
            "alternativeIdentifier": {
              "type": "string"
            },
            "definition": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "displayName": {
              "type": "string"
            },
            "isOrganizationDefault": {
              "type": "boolean"
            },
            "keyCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.keyCredential"
              }
            },
            "type": {
              "type": "string"
            },
            "appliesTo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.servicePrincipal": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "servicePrincipal",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "type": "boolean"
            },
            "addIns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.addIn"
              }
            },
            "appDisplayName": {
              "type": "string"
            },
            "appId": {
              "type": "string"
            },
            "appOwnerOrganizationId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "appRoleAssignmentRequired": {
              "type": "boolean"
            },
            "appRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.appRole"
              }
            },
            "displayName": {
              "type": "string"
            },
            "errorUrl": {
              "type": "string"
            },
            "homepage": {
              "type": "string"
            },
            "keyCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.keyCredential"
              }
            },
            "logoutUrl": {
              "type": "string"
            },
            "oauth2Permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oAuth2Permission"
              }
            },
            "passwordCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.passwordCredential"
              }
            },
            "preferredTokenSigningKeyThumbprint": {
              "type": "string"
            },
            "publisherName": {
              "type": "string"
            },
            "replyUrls": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "samlMetadataUrl": {
              "type": "string"
            },
            "servicePrincipalNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "appRoleAssignedTo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
              }
            },
            "appRoleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.appRoleAssignment"
              }
            },
            "oauth2PermissionGrants": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.oAuth2PermissionGrant"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "createdObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "licenseDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.licenseDetails"
              }
            },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "ownedObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "policies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "synchronization": { }
          }
        }
      ]
    },
    "microsoft.graph.addIn": {
      "title": "addIn",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.keyValue"
          }
        }
      }
    },
    "microsoft.graph.keyValue": {
      "title": "keyValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.oAuth2Permission": {
      "title": "oAuth2Permission",
      "type": "object",
      "properties": {
        "adminConsentDescription": {
          "type": "string"
        },
        "adminConsentDisplayName": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "origin": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "userConsentDescription": {
          "type": "string"
        },
        "userConsentDisplayName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.subscribedSku": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscribedSku",
          "type": "object",
          "properties": {
            "capabilityStatus": {
              "type": "string"
            },
            "consumedUnits": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "prepaidUnits": { },
            "servicePlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.servicePlanInfo"
              }
            },
            "skuId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "type": "string"
            },
            "appliesTo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.licenseUnitsDetail": {
      "title": "licenseUnitsDetail",
      "type": "object",
      "properties": {
        "enabled": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "suspended": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "warning": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.identity": {
      "title": "identity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.ComplexExtensionValue": {
      "title": "ComplexExtensionValue",
      "type": "object"
    },
    "microsoft.graph.contract": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "contract",
          "type": "object",
          "properties": {
            "contractType": {
              "type": "string"
            },
            "customerId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "defaultDomainName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.allowedDataLocationInfo": {
      "title": "allowedDataLocationInfo",
      "type": "object"
    },
    "microsoft.graph.historyItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "historyItem",
          "type": "object",
          "properties": {
            "status": { },
            "activeDurationSeconds": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastActiveDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "startedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userTimezone": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.Json": {
      "title": "Json",
      "type": "object"
    },
    "microsoft.graph.imageInfo": {
      "title": "imageInfo",
      "type": "object",
      "properties": {
        "iconUrl": {
          "type": "string"
        },
        "alternativeText": {
          "type": "string"
        },
        "addImageQuery": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.visualInfo": {
      "title": "visualInfo",
      "type": "object",
      "properties": {
        "attribution": { },
        "backgroundColor": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayText": {
          "type": "string"
        },
        "content": { }
      }
    },
    "microsoft.graph.root": {
      "title": "root",
      "type": "object"
    },
    "microsoft.graph.sharepointIds": {
      "title": "sharepointIds",
      "type": "object",
      "properties": {
        "listId": {
          "type": "string"
        },
        "listItemId": {
          "type": "string"
        },
        "listItemUniqueId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "siteUrl": {
          "type": "string"
        },
        "webId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.siteCollection": {
      "title": "siteCollection",
      "type": "object",
      "properties": {
        "dataLocationCode": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "root": { }
      }
    },
    "microsoft.graph.columnDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnDefinition",
          "type": "object",
          "properties": {
            "boolean": { },
            "calculated": { },
            "choice": { },
            "columnGroup": {
              "type": "string"
            },
            "currency": { },
            "dateTime": { },
            "defaultValue": { },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "enforceUniqueValues": {
              "type": "boolean"
            },
            "hidden": {
              "type": "boolean"
            },
            "indexed": {
              "type": "boolean"
            },
            "lookup": { },
            "name": {
              "type": "string"
            },
            "number": { },
            "personOrGroup": { },
            "readOnly": {
              "type": "boolean"
            },
            "required": {
              "type": "boolean"
            },
            "text": { }
          }
        }
      ]
    },
    "microsoft.graph.contentType": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contentType",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "hidden": {
              "type": "boolean"
            },
            "inheritedFrom": { },
            "name": {
              "type": "string"
            },
            "order": { },
            "parentId": {
              "type": "string"
            },
            "readOnly": {
              "type": "boolean"
            },
            "sealed": {
              "type": "boolean"
            },
            "columnLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnLink"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.list": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "list",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "list": { },
            "sharepointIds": { },
            "system": { },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.itemActivity"
              }
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.listItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.listInfo": {
      "title": "listInfo",
      "type": "object",
      "properties": {
        "contentTypesEnabled": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.systemFacet": {
      "title": "systemFacet",
      "type": "object"
    },
    "microsoft.graph.itemActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "itemActivity",
          "type": "object",
          "properties": {
            "action": { },
            "actor": { },
            "times": { },
            "driveItem": { },
            "listItem": { }
          }
        }
      ]
    },
    "microsoft.graph.listItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "listItem",
          "type": "object",
          "properties": {
            "contentType": { },
            "sharepointIds": { },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.itemActivity"
              }
            },
            "driveItem": { },
            "fields": { },
            "versions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.listItemVersion"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.identitySet": {
      "title": "identitySet",
      "type": "object",
      "properties": {
        "application": { },
        "device": { },
        "user": { }
      }
    },
    "microsoft.graph.quota": {
      "title": "quota",
      "type": "object",
      "properties": {
        "deleted": {
          "format": "int64",
          "type": "integer"
        },
        "remaining": {
          "format": "int64",
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "total": {
          "format": "int64",
          "type": "integer"
        },
        "used": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.driveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "driveItem",
          "type": "object",
          "properties": {
            "audio": { },
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "cTag": {
              "type": "string"
            },
            "deleted": { },
            "file": { },
            "fileSystemInfo": { },
            "folder": { },
            "image": { },
            "location": { },
            "package": { },
            "photo": { },
            "publication": { },
            "remoteItem": { },
            "root": { },
            "searchResult": { },
            "shared": { },
            "sharepointIds": { },
            "size": {
              "format": "int64",
              "type": "integer"
            },
            "specialFolder": { },
            "video": { },
            "webDavUrl": {
              "type": "string"
            },
            "workbook": { },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.itemActivity"
              }
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "listItem": { },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.permission"
              }
            },
            "thumbnails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.thumbnailSet"
              }
            },
            "versions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItemVersion"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbook",
          "type": "object",
          "properties": {
            "application": { },
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            },
            "worksheets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookWorksheet"
              }
            },
            "functions": { }
          }
        }
      ]
    },
    "microsoft.graph.audio": {
      "title": "audio",
      "type": "object",
      "properties": {
        "album": {
          "type": "string"
        },
        "albumArtist": {
          "type": "string"
        },
        "artist": {
          "type": "string"
        },
        "bitrate": {
          "format": "int64",
          "type": "integer"
        },
        "composers": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "disc": {
          "format": "int16",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "discCount": {
          "format": "int16",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "duration": {
          "format": "int64",
          "type": "integer"
        },
        "genre": {
          "type": "string"
        },
        "hasDrm": {
          "type": "boolean"
        },
        "isVariableBitrate": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "track": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "trackCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.deleted": {
      "title": "deleted",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.file": {
      "title": "file",
      "type": "object",
      "properties": {
        "hashes": { },
        "mimeType": {
          "type": "string"
        },
        "processingMetadata": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.hashes": {
      "title": "hashes",
      "type": "object",
      "properties": {
        "crc32Hash": {
          "type": "string"
        },
        "quickXorHash": {
          "type": "string"
        },
        "sha1Hash": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.fileSystemInfo": {
      "title": "fileSystemInfo",
      "type": "object",
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastAccessedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.folder": {
      "title": "folder",
      "type": "object",
      "properties": {
        "childCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "view": { }
      }
    },
    "microsoft.graph.folderView": {
      "title": "folderView",
      "type": "object",
      "properties": {
        "sortBy": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "viewType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.image": {
      "title": "image",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.geoCoordinates": {
      "title": "geoCoordinates",
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double"
        },
        "latitude": {
          "format": "double"
        },
        "longitude": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.package": {
      "title": "package",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.photo": {
      "title": "photo",
      "type": "object",
      "properties": {
        "cameraMake": {
          "type": "string"
        },
        "cameraModel": {
          "type": "string"
        },
        "exposureDenominator": {
          "format": "double"
        },
        "exposureNumerator": {
          "format": "double"
        },
        "fNumber": {
          "format": "double"
        },
        "focalLength": {
          "format": "double"
        },
        "iso": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "takenDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.publicationFacet": {
      "title": "publicationFacet",
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "versionId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.remoteItem": {
      "title": "remoteItem",
      "type": "object",
      "properties": {
        "createdBy": { },
        "createdDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "file": { },
        "fileSystemInfo": { },
        "folder": { },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "package": { },
        "parentReference": { },
        "shared": { },
        "sharepointIds": { },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "specialFolder": { },
        "webDavUrl": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.itemReference": {
      "title": "itemReference",
      "type": "object",
      "properties": {
        "driveId": {
          "type": "string"
        },
        "driveType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "shareId": {
          "type": "string"
        },
        "sharepointIds": { }
      }
    },
    "microsoft.graph.shared": {
      "title": "shared",
      "type": "object",
      "properties": {
        "owner": { },
        "scope": {
          "type": "string"
        },
        "sharedBy": { },
        "sharedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.specialFolder": {
      "title": "specialFolder",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.searchResult": {
      "title": "searchResult",
      "type": "object",
      "properties": {
        "onClickTelemetryUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.video": {
      "title": "video",
      "type": "object",
      "properties": {
        "audioBitsPerSample": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioChannels": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioFormat": {
          "type": "string"
        },
        "audioSamplesPerSecond": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "bitrate": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "duration": {
          "format": "int64",
          "type": "integer"
        },
        "fourCC": {
          "type": "string"
        },
        "frameRate": {
          "format": "double"
        },
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.permission": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "permission",
          "type": "object",
          "properties": {
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "grantedTo": { },
            "grantedToIdentities": {
              "type": "array",
              "items": { }
            },
            "inheritedFrom": { },
            "invitation": { },
            "link": { },
            "roles": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "shareId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.thumbnailSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "thumbnailSet",
          "type": "object",
          "properties": {
            "large": { },
            "medium": { },
            "small": { },
            "source": { }
          }
        }
      ]
    },
    "microsoft.graph.baseItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "baseItemVersion",
          "type": "object",
          "properties": {
            "lastModifiedBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "publication": { }
          }
        }
      ]
    },
    "microsoft.graph.driveItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItemVersion"
        },
        {
          "title": "driveItemVersion",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookApplication": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookApplication",
          "type": "object",
          "properties": {
            "calculationMode": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookNamedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookNamedItem",
          "type": "object",
          "properties": {
            "comment": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "value": { },
            "visible": {
              "type": "boolean"
            },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTable",
          "type": "object",
          "properties": {
            "highlightFirstColumn": {
              "type": "boolean"
            },
            "highlightLastColumn": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "showBandedColumns": {
              "type": "boolean"
            },
            "showBandedRows": {
              "type": "boolean"
            },
            "showFilterButton": {
              "type": "boolean"
            },
            "showHeaders": {
              "type": "boolean"
            },
            "showTotals": {
              "type": "boolean"
            },
            "style": {
              "type": "string"
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableColumn"
              }
            },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableRow"
              }
            },
            "sort": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookWorksheet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheet",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "position": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "visibility": {
              "type": "string"
            },
            "charts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChart"
              }
            },
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "pivotTables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookPivotTable"
              }
            },
            "protection": { },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookFunctions": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFunctions",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookSessionInfo": {
      "title": "workbookSessionInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "persistChanges": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.workbookChart": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChart",
          "type": "object",
          "properties": {
            "height": {
              "format": "double"
            },
            "left": {
              "format": "double"
            },
            "name": {
              "type": "string"
            },
            "top": {
              "format": "double"
            },
            "width": {
              "format": "double"
            },
            "axes": { },
            "dataLabels": { },
            "format": { },
            "legend": { },
            "series": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartSeries"
              }
            },
            "title": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxes": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxes",
          "type": "object",
          "properties": {
            "categoryAxis": { },
            "seriesAxis": { },
            "valueAxis": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartDataLabels": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabels",
          "type": "object",
          "properties": {
            "position": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "showBubbleSize": {
              "type": "boolean"
            },
            "showCategoryName": {
              "type": "boolean"
            },
            "showLegendKey": {
              "type": "boolean"
            },
            "showPercentage": {
              "type": "boolean"
            },
            "showSeriesName": {
              "type": "boolean"
            },
            "showValue": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAreaFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAreaFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLegend": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegend",
          "type": "object",
          "properties": {
            "overlay": {
              "type": "boolean"
            },
            "position": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeries",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "format": { },
            "points": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartPoint"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitle",
          "type": "object",
          "properties": {
            "overlay": {
              "type": "boolean"
            },
            "text": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFill",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookChartFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFont",
          "type": "object",
          "properties": {
            "bold": {
              "type": "boolean"
            },
            "color": {
              "type": "string"
            },
            "italic": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "size": {
              "format": "double"
            },
            "underline": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxis": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxis",
          "type": "object",
          "properties": {
            "majorUnit": { },
            "maximum": { },
            "minimum": { },
            "minorUnit": { },
            "format": { },
            "majorGridlines": { },
            "minorGridlines": { },
            "title": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisFormat",
          "type": "object",
          "properties": {
            "font": { },
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartGridlines": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlines",
          "type": "object",
          "properties": {
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitle",
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLineFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLineFormat",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitleFormat",
          "type": "object",
          "properties": {
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartDataLabelFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabelFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartGridlinesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlinesFormat",
          "type": "object",
          "properties": {
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLegendFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegendFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPoint",
          "type": "object",
          "properties": {
            "value": { },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartPointFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPointFormat",
          "type": "object",
          "properties": {
            "fill": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartSeriesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeriesFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitleFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFilter",
          "type": "object",
          "properties": {
            "criteria": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookFilterCriteria": {
      "title": "workbookFilterCriteria",
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "criterion1": {
          "type": "string"
        },
        "criterion2": {
          "type": "string"
        },
        "dynamicCriteria": {
          "type": "string"
        },
        "filterOn": {
          "type": "string"
        },
        "icon": { },
        "operator": {
          "type": "string"
        },
        "values": { }
      }
    },
    "microsoft.graph.workbookIcon": {
      "title": "workbookIcon",
      "type": "object",
      "properties": {
        "index": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "set": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookFormatProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFormatProtection",
          "type": "object",
          "properties": {
            "formulaHidden": {
              "type": "boolean"
            },
            "locked": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookFunctionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFunctionResult",
          "type": "object",
          "properties": {
            "error": {
              "type": "string"
            },
            "value": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookPivotTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookPivotTable",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRange": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRange",
          "type": "object",
          "properties": {
            "address": {
              "type": "string"
            },
            "addressLocal": {
              "type": "string"
            },
            "cellCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnHidden": {
              "type": "boolean"
            },
            "columnIndex": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": { },
            "formulasLocal": { },
            "formulasR1C1": { },
            "hidden": {
              "type": "boolean"
            },
            "numberFormat": { },
            "rowCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "rowHidden": {
              "type": "boolean"
            },
            "rowIndex": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": { },
            "valueTypes": { },
            "values": { },
            "format": { },
            "sort": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFormat",
          "type": "object",
          "properties": {
            "columnWidth": {
              "format": "double"
            },
            "horizontalAlignment": {
              "type": "string"
            },
            "rowHeight": {
              "format": "double"
            },
            "verticalAlignment": {
              "type": "string"
            },
            "wrapText": {
              "type": "boolean"
            },
            "borders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeBorder"
              }
            },
            "fill": { },
            "font": { },
            "protection": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeSort",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookRangeBorder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeBorder",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            },
            "sideIndex": {
              "type": "string"
            },
            "style": {
              "type": "string"
            },
            "weight": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFill",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFont",
          "type": "object",
          "properties": {
            "bold": {
              "type": "boolean"
            },
            "color": {
              "type": "string"
            },
            "italic": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "size": {
              "format": "double"
            },
            "underline": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeView": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeView",
          "type": "object",
          "properties": {
            "cellAddresses": { },
            "columnCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": { },
            "formulasLocal": { },
            "formulasR1C1": { },
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "numberFormat": { },
            "rowCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": { },
            "valueTypes": { },
            "values": { },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeView"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableColumn": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableColumn",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "values": { },
            "filter": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableRow": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableRow",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "values": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableSort",
          "type": "object",
          "properties": {
            "fields": {
              "type": "array",
              "items": { }
            },
            "matchCase": {
              "type": "boolean"
            },
            "method": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookSortField": {
      "title": "workbookSortField",
      "type": "object",
      "properties": {
        "ascending": {
          "type": "boolean"
        },
        "color": {
          "type": "string"
        },
        "dataOption": {
          "type": "string"
        },
        "icon": { },
        "key": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sortOn": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookWorksheetProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheetProtection",
          "type": "object",
          "properties": {
            "options": { },
            "protected": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookWorksheetProtectionOptions": {
      "title": "workbookWorksheetProtectionOptions",
      "type": "object",
      "properties": {
        "allowAutoFilter": {
          "type": "boolean"
        },
        "allowDeleteColumns": {
          "type": "boolean"
        },
        "allowDeleteRows": {
          "type": "boolean"
        },
        "allowFormatCells": {
          "type": "boolean"
        },
        "allowFormatColumns": {
          "type": "boolean"
        },
        "allowFormatRows": {
          "type": "boolean"
        },
        "allowInsertColumns": {
          "type": "boolean"
        },
        "allowInsertHyperlinks": {
          "type": "boolean"
        },
        "allowInsertRows": {
          "type": "boolean"
        },
        "allowPivotTables": {
          "type": "boolean"
        },
        "allowSort": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.workbookFilterDatetime": {
      "title": "workbookFilterDatetime",
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "specificity": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookRangeReference": {
      "title": "workbookRangeReference",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "attachment",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "contentType": {
              "type": "string"
            },
            "size": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isInline": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.customTimeZone": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.timeZoneBase"
        },
        {
          "title": "customTimeZone",
          "type": "object",
          "properties": {
            "bias": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "standardOffset": { },
            "daylightOffset": { }
          }
        }
      ]
    },
    "microsoft.graph.standardTimeZoneOffset": {
      "title": "standardTimeZoneOffset",
      "type": "object",
      "properties": {
        "time": {
          "format": "time",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "dayOccurrence": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "dayOfWeek": { },
        "month": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.daylightTimeZoneOffset": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.standardTimeZoneOffset"
        },
        {
          "title": "daylightTimeZoneOffset",
          "type": "object",
          "properties": {
            "daylightBias": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.outlookCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookCategory",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "color": { }
          }
        }
      ]
    },
    "microsoft.graph.outlookTaskGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookTaskGroup",
          "type": "object",
          "properties": {
            "changeKey": {
              "type": "string"
            },
            "isDefaultGroup": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "groupKey": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "taskFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookTaskFolder"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.outlookTaskFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookTaskFolder",
          "type": "object",
          "properties": {
            "changeKey": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "isDefaultFolder": {
              "type": "boolean"
            },
            "parentGroupKey": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookTask"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.outlookTask": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "outlookTask",
          "type": "object",
          "properties": {
            "assignedTo": {
              "type": "string"
            },
            "body": { },
            "completedDateTime": { },
            "dueDateTime": { },
            "hasAttachments": {
              "type": "boolean"
            },
            "importance": { },
            "isReminderOn": {
              "type": "boolean"
            },
            "owner": {
              "type": "string"
            },
            "parentFolderId": {
              "type": "string"
            },
            "recurrence": { },
            "reminderDateTime": { },
            "sensitivity": { },
            "startDateTime": { },
            "status": { },
            "subject": {
              "type": "string"
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.recipient": {
      "title": "recipient",
      "type": "object",
      "properties": {
        "emailAddress": { }
      }
    },
    "microsoft.graph.emailAddress": {
      "title": "emailAddress",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attendeeBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.recipient"
        },
        {
          "title": "attendeeBase",
          "type": "object",
          "properties": {
            "type": { }
          }
        }
      ]
    },
    "microsoft.graph.meetingTimeSuggestionsResult": {
      "title": "meetingTimeSuggestionsResult",
      "type": "object",
      "properties": {
        "meetingTimeSuggestions": {
          "type": "array",
          "items": { }
        },
        "emptySuggestionsReason": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.meetingTimeSuggestion": {
      "title": "meetingTimeSuggestion",
      "type": "object",
      "properties": {
        "meetingTimeSlot": { },
        "confidence": {
          "format": "double"
        },
        "organizerAvailability": { },
        "attendeeAvailability": {
          "type": "array",
          "items": { }
        },
        "locations": {
          "type": "array",
          "items": { }
        },
        "suggestionReason": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.timeSlot": {
      "title": "timeSlot",
      "type": "object",
      "properties": {
        "start": { },
        "end": { }
      }
    },
    "microsoft.graph.attendeeAvailability": {
      "title": "attendeeAvailability",
      "type": "object",
      "properties": {
        "attendee": { },
        "availability": { }
      }
    },
    "microsoft.graph.location": {
      "title": "location",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "locationEmailAddress": {
          "type": "string"
        },
        "address": { },
        "coordinates": { },
        "locationUri": {
          "type": "string"
        },
        "locationType": { },
        "uniqueId": {
          "type": "string"
        },
        "uniqueIdType": { }
      }
    },
    "microsoft.graph.physicalAddress": {
      "title": "physicalAddress",
      "type": "object",
      "properties": {
        "type": { },
        "postOfficeBox": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "countryOrRegion": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.outlookGeoCoordinates": {
      "title": "outlookGeoCoordinates",
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double"
        },
        "latitude": {
          "format": "double"
        },
        "longitude": {
          "format": "double"
        },
        "accuracy": {
          "format": "double"
        },
        "altitudeAccuracy": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.locationConstraint": {
      "title": "locationConstraint",
      "type": "object",
      "properties": {
        "isRequired": {
          "type": "boolean"
        },
        "suggestLocation": {
          "type": "boolean"
        },
        "locations": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.locationConstraintItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.location"
        },
        {
          "title": "locationConstraintItem",
          "type": "object",
          "properties": {
            "resolveAvailability": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.timeConstraint": {
      "title": "timeConstraint",
      "type": "object",
      "properties": {
        "activityDomain": { },
        "timeslots": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.meetingTimeCandidatesResult": {
      "title": "meetingTimeCandidatesResult",
      "type": "object",
      "properties": {
        "meetingTimeSlots": {
          "type": "array",
          "items": { }
        },
        "emptySuggestionsHint": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.meetingTimeCandidate": {
      "title": "meetingTimeCandidate",
      "type": "object",
      "properties": {
        "meetingTimeSlot": { },
        "confidence": {
          "format": "double"
        },
        "organizerAvailability": { },
        "attendeeAvailability": {
          "type": "array",
          "items": { }
        },
        "locations": {
          "type": "array",
          "items": { }
        },
        "suggestionHint": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.timeSlotOLD": {
      "title": "timeSlotOLD",
      "type": "object",
      "properties": {
        "start": { },
        "end": { }
      }
    },
    "microsoft.graph.timeStamp": {
      "title": "timeStamp",
      "type": "object",
      "properties": {
        "date": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "time": {
          "format": "time",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.mailTips": {
      "title": "mailTips",
      "type": "object",
      "properties": {
        "emailAddress": { },
        "automaticReplies": { },
        "mailboxFull": {
          "type": "boolean"
        },
        "customMailTip": {
          "type": "string"
        },
        "externalMemberCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "totalMemberCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "deliveryRestricted": {
          "type": "boolean"
        },
        "isModerated": {
          "type": "boolean"
        },
        "recipientScope": { },
        "recipientSuggestions": {
          "type": "array",
          "items": { }
        },
        "maxMessageSize": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "error": { }
      }
    },
    "microsoft.graph.automaticRepliesMailTips": {
      "title": "automaticRepliesMailTips",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageLanguage": { },
        "scheduledStartTime": { },
        "scheduledEndTime": { }
      }
    },
    "microsoft.graph.mailTipsError": {
      "title": "mailTipsError",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.reminder": {
      "title": "reminder",
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        },
        "eventStartTime": { },
        "eventEndTime": { },
        "changeKey": {
          "type": "string"
        },
        "eventSubject": {
          "type": "string"
        },
        "eventLocation": { },
        "eventWebLink": {
          "type": "string"
        },
        "reminderFireTime": { }
      }
    },
    "microsoft.graph.timeZoneInformation": {
      "title": "timeZoneInformation",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.messageRule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "messageRule",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "sequence": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conditions": { },
            "actions": { },
            "exceptions": { },
            "isEnabled": {
              "type": "boolean"
            },
            "hasError": {
              "type": "boolean"
            },
            "isReadOnly": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.userConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "userConfiguration",
          "type": "object",
          "properties": {
            "binaryData": {
              "format": "base64url",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.singleValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "singleValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.multiValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "multiValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.internetMessageHeader": {
      "title": "internetMessageHeader",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.itemBody": {
      "title": "itemBody",
      "type": "object",
      "properties": {
        "contentType": { },
        "content": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.mentionsPreview": {
      "title": "mentionsPreview",
      "type": "object",
      "properties": {
        "isMentioned": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.followupFlag": {
      "title": "followupFlag",
      "type": "object",
      "properties": {
        "completedDateTime": { },
        "dueDateTime": { },
        "startDateTime": { },
        "flagStatus": { }
      }
    },
    "microsoft.graph.mention": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mention",
          "type": "object",
          "properties": {
            "mentioned": {
              "$ref": "#/definitions/microsoft.graph.emailAddress"
            },
            "mentionText": {
              "type": "string"
            },
            "clientReference": {
              "type": "string"
            },
            "createdBy": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "serverCreatedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deepLink": {
              "type": "string"
            },
            "application": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.fileAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "fileAttachment",
          "type": "object",
          "properties": {
            "contentId": {
              "type": "string"
            },
            "contentLocation": {
              "type": "string"
            },
            "contentBytes": {
              "format": "base64url",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.itemAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "itemAttachment",
          "type": "object",
          "properties": {
            "item": { }
          }
        }
      ]
    },
    "microsoft.graph.responseStatus": {
      "title": "responseStatus",
      "type": "object",
      "properties": {
        "response": { },
        "time": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.patternedRecurrence": {
      "title": "patternedRecurrence",
      "type": "object",
      "properties": {
        "pattern": { },
        "range": { }
      }
    },
    "microsoft.graph.recurrencePattern": {
      "title": "recurrencePattern",
      "type": "object",
      "properties": {
        "type": { },
        "interval": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "dayOfMonth": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "daysOfWeek": {
          "type": "array",
          "items": { }
        },
        "firstDayOfWeek": { },
        "index": { }
      }
    },
    "microsoft.graph.recurrenceRange": {
      "title": "recurrenceRange",
      "type": "object",
      "properties": {
        "type": { },
        "startDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "recurrenceTimeZone": {
          "type": "string"
        },
        "numberOfOccurrences": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.attendee": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attendeeBase"
        },
        {
          "title": "attendee",
          "type": "object",
          "properties": {
            "status": { }
          }
        }
      ]
    },
    "microsoft.graph.eventCreationOptions": {
      "title": "eventCreationOptions",
      "type": "object",
      "properties": {
        "saveToGroupCalendarOnly": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.phone": {
      "title": "phone",
      "type": "object",
      "properties": {
        "type": { },
        "number": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.website": {
      "title": "website",
      "type": "object",
      "properties": {
        "type": { },
        "address": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.eventMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.message"
        },
        {
          "title": "eventMessage",
          "type": "object",
          "properties": {
            "meetingMessageType": { },
            "startDateTime": { },
            "endDateTime": { },
            "location": { },
            "type": { },
            "recurrence": { },
            "isOutOfDate": {
              "type": "boolean"
            },
            "isAllDay": {
              "type": "boolean"
            },
            "isDelegated": {
              "type": "boolean"
            },
            "event": { }
          }
        }
      ]
    },
    "microsoft.graph.messageRulePredicates": {
      "title": "messageRulePredicates",
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjectContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bodyContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bodyOrSubjectContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "headerContains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "messageActionFlag": { },
        "importance": { },
        "sensitivity": { },
        "fromAddresses": {
          "type": "array",
          "items": { }
        },
        "sentToAddresses": {
          "type": "array",
          "items": { }
        },
        "sentToMe": {
          "type": "boolean"
        },
        "sentOnlyToMe": {
          "type": "boolean"
        },
        "sentCcMe": {
          "type": "boolean"
        },
        "sentToOrCcMe": {
          "type": "boolean"
        },
        "notSentToMe": {
          "type": "boolean"
        },
        "hasAttachments": {
          "type": "boolean"
        },
        "isApprovalRequest": {
          "type": "boolean"
        },
        "isAutomaticForward": {
          "type": "boolean"
        },
        "isAutomaticReply": {
          "type": "boolean"
        },
        "isEncrypted": {
          "type": "boolean"
        },
        "isMeetingRequest": {
          "type": "boolean"
        },
        "isMeetingResponse": {
          "type": "boolean"
        },
        "isNonDeliveryReport": {
          "type": "boolean"
        },
        "isPermissionControlled": {
          "type": "boolean"
        },
        "isReadReceipt": {
          "type": "boolean"
        },
        "isSigned": {
          "type": "boolean"
        },
        "isVoicemail": {
          "type": "boolean"
        },
        "withinSizeRange": { }
      }
    },
    "microsoft.graph.sizeRange": {
      "title": "sizeRange",
      "type": "object",
      "properties": {
        "minimumSize": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "maximumSize": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.messageRuleActions": {
      "title": "messageRuleActions",
      "type": "object",
      "properties": {
        "moveToFolder": {
          "type": "string"
        },
        "copyToFolder": {
          "type": "string"
        },
        "delete": {
          "type": "boolean"
        },
        "permanentDelete": {
          "type": "boolean"
        },
        "markAsRead": {
          "type": "boolean"
        },
        "markImportance": { },
        "forwardTo": {
          "type": "array",
          "items": { }
        },
        "forwardAsAttachmentTo": {
          "type": "array",
          "items": { }
        },
        "redirectTo": {
          "type": "array",
          "items": { }
        },
        "assignCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stopProcessingRules": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.eventMessageRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.eventMessage"
        },
        {
          "title": "eventMessageRequest",
          "type": "object",
          "properties": {
            "previousLocation": { },
            "previousStartDateTime": { },
            "previousEndDateTime": { },
            "responseRequested": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.referenceAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "referenceAttachment",
          "type": "object",
          "properties": {
            "sourceUrl": {
              "type": "string"
            },
            "providerType": { },
            "thumbnailUrl": {
              "type": "string"
            },
            "previewUrl": {
              "type": "string"
            },
            "permission": { },
            "isFolder": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.openTypeExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.extension"
        },
        {
          "title": "openTypeExtension",
          "type": "object",
          "properties": {
            "extensionName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.post": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "post",
          "type": "object",
          "properties": {
            "body": { },
            "receivedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "from": {
              "$ref": "#/definitions/microsoft.graph.recipient"
            },
            "sender": { },
            "conversationThreadId": {
              "type": "string"
            },
            "newParticipants": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "conversationId": {
              "type": "string"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "inReplyTo": { },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mention"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.rankedEmailAddress": {
      "title": "rankedEmailAddress",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "rank": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.personDataSource": {
      "title": "personDataSource",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.inferenceClassificationOverride": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassificationOverride",
          "type": "object",
          "properties": {
            "classifyAs": { },
            "senderEmailAddress": { }
          }
        }
      ]
    },
    "microsoft.graph.booleanColumn": {
      "title": "booleanColumn",
      "type": "object"
    },
    "microsoft.graph.calculatedColumn": {
      "title": "calculatedColumn",
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "formula": {
          "type": "string"
        },
        "outputType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.choiceColumn": {
      "title": "choiceColumn",
      "type": "object",
      "properties": {
        "allowTextEntry": {
          "type": "boolean"
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayAs": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.currencyColumn": {
      "title": "currencyColumn",
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.dateTimeColumn": {
      "title": "dateTimeColumn",
      "type": "object",
      "properties": {
        "displayAs": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.defaultColumnValue": {
      "title": "defaultColumnValue",
      "type": "object",
      "properties": {
        "formula": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.lookupColumn": {
      "title": "lookupColumn",
      "type": "object",
      "properties": {
        "allowMultipleValues": {
          "type": "boolean"
        },
        "allowUnlimitedLength": {
          "type": "boolean"
        },
        "columnName": {
          "type": "string"
        },
        "listId": {
          "type": "string"
        },
        "primaryLookupColumnId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.numberColumn": {
      "title": "numberColumn",
      "type": "object",
      "properties": {
        "decimalPlaces": {
          "type": "string"
        },
        "displayAs": {
          "type": "string"
        },
        "maximum": {
          "format": "double"
        },
        "minimum": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.personOrGroupColumn": {
      "title": "personOrGroupColumn",
      "type": "object",
      "properties": {
        "allowMultipleSelection": {
          "type": "boolean"
        },
        "displayAs": {
          "type": "string"
        },
        "chooseFromType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.textColumn": {
      "title": "textColumn",
      "type": "object",
      "properties": {
        "allowMultipleLines": {
          "type": "boolean"
        },
        "appendChangesToExistingText": {
          "type": "boolean"
        },
        "linesForEditing": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "textType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.columnLink": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnLink",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.contentTypeOrder": {
      "title": "contentTypeOrder",
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "position": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.fieldValueSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "fieldValueSet",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.itemActionSet": {
      "title": "itemActionSet",
      "type": "object",
      "properties": {
        "comment": { },
        "create": { },
        "delete": { },
        "edit": { },
        "mention": { },
        "move": { },
        "rename": { },
        "restore": { },
        "share": { },
        "version": { }
      }
    },
    "microsoft.graph.commentAction": {
      "title": "commentAction",
      "type": "object",
      "properties": {
        "isReply": {
          "type": "boolean"
        },
        "parentAuthor": { },
        "participants": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.createAction": {
      "title": "createAction",
      "type": "object"
    },
    "microsoft.graph.deleteAction": {
      "title": "deleteAction",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.editAction": {
      "title": "editAction",
      "type": "object"
    },
    "microsoft.graph.mentionAction": {
      "title": "mentionAction",
      "type": "object",
      "properties": {
        "mentionees": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.moveAction": {
      "title": "moveAction",
      "type": "object",
      "properties": {
        "From": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.renameAction": {
      "title": "renameAction",
      "type": "object",
      "properties": {
        "oldName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.restoreAction": {
      "title": "restoreAction",
      "type": "object"
    },
    "microsoft.graph.shareAction": {
      "title": "shareAction",
      "type": "object",
      "properties": {
        "recipients": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.versionAction": {
      "title": "versionAction",
      "type": "object",
      "properties": {
        "newVersion": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.itemActivityTimeSet": {
      "title": "itemActivityTimeSet",
      "type": "object",
      "properties": {
        "observedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "recordedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.contentTypeInfo": {
      "title": "contentTypeInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.listItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItemVersion"
        },
        {
          "title": "listItemVersion",
          "type": "object",
          "properties": {
            "fields": { }
          }
        }
      ]
    },
    "microsoft.graph.sharingInvitation": {
      "title": "sharingInvitation",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "invitedBy": { },
        "redeemedBy": {
          "type": "string"
        },
        "signInRequired": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.sharingLink": {
      "title": "sharingLink",
      "type": "object",
      "properties": {
        "application": { },
        "configuratorUrl": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "webHtml": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sharedDriveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "sharedDriveItem",
          "type": "object",
          "properties": {
            "owner": { },
            "driveItem": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { },
            "listItem": { },
            "root": { },
            "site": { }
          }
        }
      ]
    },
    "microsoft.graph.thumbnail": {
      "title": "thumbnail",
      "type": "object",
      "properties": {
        "content": {
          "format": "base64url",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sourceItemId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.driveItemUploadableProperties": {
      "title": "driveItemUploadableProperties",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fileSystemInfo": { },
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.driveRecipient": {
      "title": "driveRecipient",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.flexSchemaContainer": {
      "title": "flexSchemaContainer",
      "type": "object"
    },
    "microsoft.graph.uploadSession": {
      "title": "uploadSession",
      "type": "object",
      "properties": {
        "expirationDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "nextExpectedRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uploadUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.trending": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "trending",
          "type": "object",
          "properties": {
            "weight": {
              "format": "double"
            },
            "resourceVisualization": { },
            "resourceReference": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "resource": { }
          }
        }
      ]
    },
    "microsoft.graph.sharedInsight": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharedInsight",
          "type": "object",
          "properties": {
            "lastShared": { },
            "sharingHistory": {
              "type": "array",
              "items": { }
            },
            "resourceVisualization": { },
            "resourceReference": { },
            "lastSharedMethod": { },
            "resource": { }
          }
        }
      ]
    },
    "microsoft.graph.usedInsight": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "usedInsight",
          "type": "object",
          "properties": {
            "lastUsed": { },
            "resourceVisualization": { },
            "resourceReference": { },
            "resource": { }
          }
        }
      ]
    },
    "microsoft.graph.resourceVisualization": {
      "title": "resourceVisualization",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "previewImageUrl": {
          "type": "string"
        },
        "previewText": {
          "type": "string"
        },
        "containerWebUrl": {
          "type": "string"
        },
        "containerDisplayName": {
          "type": "string"
        },
        "containerType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.resourceReference": {
      "title": "resourceReference",
      "type": "object",
      "properties": {
        "webUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sharingDetail": {
      "title": "sharingDetail",
      "type": "object",
      "properties": {
        "sharedBy": { },
        "sharedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "sharingSubject": {
          "type": "string"
        },
        "sharingType": {
          "type": "string"
        },
        "sharingReference": { }
      }
    },
    "microsoft.graph.insightIdentity": {
      "title": "insightIdentity",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.usageDetails": {
      "title": "usageDetails",
      "type": "object",
      "properties": {
        "lastAccessedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerTask": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTask",
          "type": "object",
          "properties": {
            "createdBy": { },
            "planId": {
              "type": "string"
            },
            "bucketId": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "orderHint": {
              "type": "string"
            },
            "assigneePriority": {
              "type": "string"
            },
            "percentComplete": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "startDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "dueDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasDescription": {
              "type": "boolean"
            },
            "previewType": { },
            "completedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "completedBy": { },
            "referenceCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "checklistItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "activeChecklistItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "appliedCategories": { },
            "assignments": { },
            "conversationThreadId": {
              "type": "string"
            },
            "details": { },
            "assignedToTaskBoardFormat": { },
            "progressTaskBoardFormat": { },
            "bucketTaskBoardFormat": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerPlan": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlan",
          "type": "object",
          "properties": {
            "createdBy": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            },
            "details": { }
          }
        }
      ]
    },
    "microsoft.graph.planner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "planner",
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            },
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerBucket": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucket",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "planId": {
              "type": "string"
            },
            "orderHint": {
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerAppliedCategories": {
      "title": "plannerAppliedCategories",
      "type": "object"
    },
    "microsoft.graph.plannerAssignments": {
      "title": "plannerAssignments",
      "type": "object"
    },
    "microsoft.graph.plannerTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTaskDetails",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "previewType": { },
            "references": { },
            "checklist": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerAssignedToTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "unassignedOrderHint": {
              "type": "string"
            },
            "orderHintsByAssignee": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerProgressTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucketTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerPlanDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlanDetails",
          "type": "object",
          "properties": {
            "sharedWith": { },
            "categoryDescriptions": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerExternalReference": {
      "title": "plannerExternalReference",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "previewPriority": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerChecklistItem": {
      "title": "plannerChecklistItem",
      "type": "object",
      "properties": {
        "isChecked": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "orderHint": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerAssignment": {
      "title": "plannerAssignment",
      "type": "object",
      "properties": {
        "assignedBy": { },
        "assignedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "orderHint": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerExternalReferences": {
      "title": "plannerExternalReferences",
      "type": "object"
    },
    "microsoft.graph.plannerChecklistItems": {
      "title": "plannerChecklistItems",
      "type": "object"
    },
    "microsoft.graph.plannerOrderHintsByAssignee": {
      "title": "plannerOrderHintsByAssignee",
      "type": "object"
    },
    "microsoft.graph.plannerUserIds": {
      "title": "plannerUserIds",
      "type": "object"
    },
    "microsoft.graph.plannerCategoryDescriptions": {
      "title": "plannerCategoryDescriptions",
      "type": "object",
      "properties": {
        "category1": {
          "type": "string"
        },
        "category2": {
          "type": "string"
        },
        "category3": {
          "type": "string"
        },
        "category4": {
          "type": "string"
        },
        "category5": {
          "type": "string"
        },
        "category6": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.onenoteEntityBaseModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenoteEntityBaseModel",
          "type": "object",
          "properties": {
            "self": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteEntitySchemaObjectModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteEntitySchemaObjectModel",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteEntityHierarchyModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenoteEntityHierarchyModel",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "createdBy": { },
            "lastModifiedBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.notebook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "notebook",
          "type": "object",
          "properties": {
            "isDefault": {
              "type": "boolean"
            },
            "userRole": { },
            "isShared": {
              "type": "boolean"
            },
            "sectionsUrl": {
              "type": "string"
            },
            "sectionGroupsUrl": {
              "type": "string"
            },
            "links": { },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteSection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "onenoteSection",
          "type": "object",
          "properties": {
            "isDefault": {
              "type": "boolean"
            },
            "links": { },
            "pagesUrl": {
              "type": "string"
            },
            "parentNotebook": { },
            "parentSectionGroup": { },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.sectionGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "sectionGroup",
          "type": "object",
          "properties": {
            "sectionsUrl": {
              "type": "string"
            },
            "sectionGroupsUrl": {
              "type": "string"
            },
            "parentNotebook": { },
            "parentSectionGroup": { },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenotePage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenotePage",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "createdByAppId": {
              "type": "string"
            },
            "links": { },
            "contentUrl": {
              "type": "string"
            },
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "level": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "order": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "userTags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "parentSection": { },
            "parentNotebook": { }
          }
        }
      ]
    },
    "microsoft.graph.onenoteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteResource",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "contentUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.operation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "operation",
          "type": "object",
          "properties": {
            "status": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastActionDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.operation"
        },
        {
          "title": "onenoteOperation",
          "type": "object",
          "properties": {
            "resourceLocation": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "error": { },
            "percentComplete": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.notebookLinks": {
      "title": "notebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.externalLink": {
      "title": "externalLink",
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sectionLinks": {
      "title": "sectionLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.pageLinks": {
      "title": "pageLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.onenoteOperationError": {
      "title": "onenoteOperationError",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.diagnostic": {
      "title": "diagnostic",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.onenotePatchContentCommand": {
      "title": "onenotePatchContentCommand",
      "type": "object",
      "properties": {
        "action": { },
        "target": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "position": { }
      }
    },
    "microsoft.graph.onenotePagePreview": {
      "title": "onenotePagePreview",
      "type": "object",
      "properties": {
        "previewText": {
          "type": "string"
        },
        "links": { }
      }
    },
    "microsoft.graph.onenotePagePreviewLinks": {
      "title": "onenotePagePreviewLinks",
      "type": "object",
      "properties": {
        "previewImageUrl": { }
      }
    },
    "microsoft.graph.recentNotebook": {
      "title": "recentNotebook",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "lastAccessedTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "links": { },
        "sourceService": { }
      }
    },
    "microsoft.graph.recentNotebookLinks": {
      "title": "recentNotebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.subscription": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscription",
          "type": "object",
          "properties": {
            "resource": {
              "type": "string"
            },
            "changeType": {
              "type": "string"
            },
            "clientState": {
              "type": "string"
            },
            "notificationUrl": {
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.identityRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "identityRiskEvent",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "riskEventDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "riskEventType": {
              "type": "string"
            },
            "riskLevel": { },
            "riskEventStatus": { },
            "closedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "impactedUser": { }
          }
        }
      ]
    },
    "microsoft.graph.signInLocation": {
      "title": "signInLocation",
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "countryOrRegion": {
          "type": "string"
        },
        "geoCoordinates": { }
      }
    },
    "microsoft.graph.locatedRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
        },
        {
          "title": "locatedRiskEvent",
          "type": "object",
          "properties": {
            "location": { },
            "ipAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.impossibleTravelRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.locatedRiskEvent"
        },
        {
          "title": "impossibleTravelRiskEvent",
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string"
            },
            "deviceInformation": {
              "type": "string"
            },
            "isAtypicalLocation": {
              "type": "boolean"
            },
            "previousSigninDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "previousLocation": { },
            "previousIpAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.leakedCredentialsRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.identityRiskEvent"
        },
        {
          "title": "leakedCredentialsRiskEvent",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.anonymousIpRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.locatedRiskEvent"
        },
        {
          "title": "anonymousIpRiskEvent",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.suspiciousIpRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.locatedRiskEvent"
        },
        {
          "title": "suspiciousIpRiskEvent",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.unfamiliarLocationRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.locatedRiskEvent"
        },
        {
          "title": "unfamiliarLocationRiskEvent",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.malwareRiskEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.locatedRiskEvent"
        },
        {
          "title": "malwareRiskEvent",
          "type": "object",
          "properties": {
            "deviceInformation": {
              "type": "string"
            },
            "malwareName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.privilegedRole": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedRole",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "settings": { },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.privilegedRoleAssignment"
              }
            },
            "summary": { }
          }
        }
      ]
    },
    "microsoft.graph.privilegedRoleSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedRoleSettings",
          "type": "object",
          "properties": {
            "approverIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "minElevationDuration": {
              "format": "duration",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "maxElavationDuration": {
              "format": "duration",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "elevationDuration": {
              "format": "duration",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "notificationToUserOnElevation": {
              "type": "boolean"
            },
            "ticketingInfoOnElevation": {
              "type": "boolean"
            },
            "mfaOnElevation": {
              "type": "boolean"
            },
            "lastGlobalAdmin": {
              "type": "boolean"
            },
            "isMfaOnElevationConfigurable": {
              "type": "boolean"
            },
            "approvalOnElevation": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.privilegedRoleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedRoleAssignment",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            },
            "isElevated": {
              "type": "boolean"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "resultMessage": {
              "type": "string"
            },
            "roleInfo": { }
          }
        }
      ]
    },
    "microsoft.graph.privilegedRoleSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedRoleSummary",
          "type": "object",
          "properties": {
            "status": { },
            "usersCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "managedCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "elevatedCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "mfaEnabled": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.privilegedOperationEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedOperationEvent",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "userName": {
              "type": "string"
            },
            "userMail": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            },
            "roleName": {
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "creationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "requestorId": {
              "type": "string"
            },
            "requestorName": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "requestType": {
              "type": "string"
            },
            "additionalInformation": {
              "type": "string"
            },
            "referenceKey": {
              "type": "string"
            },
            "referenceSystem": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.privilegedSignupStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedSignupStatus",
          "type": "object",
          "properties": {
            "isRegistered": {
              "type": "boolean"
            },
            "status": { }
          }
        }
      ]
    },
    "microsoft.graph.privilegedApproval": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "privilegedApproval",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            },
            "approvalType": {
              "type": "string"
            },
            "approvalState": { },
            "approvalDuration": {
              "format": "duration",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "requestorReason": {
              "type": "string"
            },
            "approverReason": {
              "type": "string"
            },
            "startDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "endDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "roleInfo": { }
          }
        }
      ]
    },
    "microsoft.graph.tenantSetupInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "tenantSetupInfo",
          "type": "object",
          "properties": {
            "userRolesActions": {
              "type": "string"
            },
            "firstTimeSetup": {
              "type": "boolean"
            },
            "relevantRolesSettings": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "skipSetup": {
              "type": "boolean"
            },
            "setupStatus": { },
            "defaultRolesSettings": { }
          }
        }
      ]
    },
    "microsoft.graph.roleSuccessStatistics": {
      "title": "roleSuccessStatistics",
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "temporarySuccess": {
          "format": "int64",
          "type": "integer"
        },
        "temporaryFail": {
          "format": "int64",
          "type": "integer"
        },
        "permanentSuccess": {
          "format": "int64",
          "type": "integer"
        },
        "permanentFail": {
          "format": "int64",
          "type": "integer"
        },
        "removeSuccess": {
          "format": "int64",
          "type": "integer"
        },
        "removeFail": {
          "format": "int64",
          "type": "integer"
        },
        "unknownFail": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.invitation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "invitation",
          "type": "object",
          "properties": {
            "invitedUserDisplayName": {
              "type": "string"
            },
            "invitedUserType": {
              "type": "string"
            },
            "invitedUserEmailAddress": {
              "type": "string"
            },
            "invitedUserMessageInfo": { },
            "sendInvitationMessage": {
              "type": "boolean"
            },
            "inviteRedirectUrl": {
              "type": "string"
            },
            "inviteRedeemUrl": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "invitedUser": { }
          }
        }
      ]
    },
    "microsoft.graph.invitedUserMessageInfo": {
      "title": "invitedUserMessageInfo",
      "type": "object",
      "properties": {
        "ccRecipients": {
          "type": "array",
          "items": { }
        },
        "messageLanguage": {
          "type": "string"
        },
        "customizedMessageBody": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.deviceManagement": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagement",
          "description": "Singleton entity that acts as a container for Android for Work settings functionality under device management.",
          "type": "object",
          "properties": {
            "subscriptionState": {
              "description": "Tenant mobile device management subscription state."
            },
            "subscriptions": {
              "description": "Tenant's Subscription."
            },
            "adminConsent": {
              "description": "Admin consent information."
            },
            "deviceProtectionOverview": {
              "description": "Device protection overview."
            },
            "settings": {
              "description": "Account level settings."
            },
            "maximumDepTokens": {
              "format": "int32",
              "description": "Maximum number of dep tokens allowed per-tenant.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "intuneAccountId": {
              "format": "uuid",
              "description": "Intune Account Id for given tenant",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "intuneBrand": {
              "description": "intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal."
            },
            "termsAndConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditions"
              }
            },
            "androidForWorkSettings": { },
            "androidForWorkAppConfigurationSchemas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.androidForWorkAppConfigurationSchema"
              }
            },
            "androidForWorkEnrollmentProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.androidForWorkEnrollmentProfile"
              }
            },
            "enrollmentProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.enrollmentProfile"
              }
            },
            "importedDeviceIdentities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.importedDeviceIdentity"
              }
            },
            "importedAppleDeviceIdentities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.importedAppleDeviceIdentity"
              }
            },
            "remoteActionAudits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.remoteActionAudit"
              }
            },
            "applePushNotificationCertificate": { },
            "deviceManagementScripts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementScript"
              }
            },
            "managedDeviceOverview": { },
            "detectedApps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.detectedApp"
              }
            },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            },
            "windowsMalwareInformation": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsMalwareInformation"
              }
            },
            "deviceConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
              }
            },
            "deviceCompliancePolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
              }
            },
            "deviceSetupConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceSetupConfiguration"
              }
            },
            "softwareUpdateStatusSummary": { },
            "deviceCompliancePolicyDeviceStateSummary": { },
            "deviceCompliancePolicySettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicySettingStateSummary"
              }
            },
            "deviceConfigurationDeviceStateSummaries": { },
            "deviceConfigurationUserStateSummaries": { },
            "cartToClassAssociations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.cartToClassAssociation"
              }
            },
            "iosUpdateStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosUpdateDeviceStatus"
              }
            },
            "ndesConnectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.ndesConnector"
              }
            },
            "deviceCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCategory"
              }
            },
            "exchangeConnectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeConnector"
              }
            },
            "deviceEnrollmentConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
              }
            },
            "exchangeOnPremisesPolicy": { },
            "exchangeOnPremisesPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
              }
            },
            "conditionalAccessSettings": { },
            "mobileThreatDefenseConnectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileThreatDefenseConnector"
              }
            },
            "deviceManagementPartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementPartner"
              }
            },
            "depOnboardingSettings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.depOnboardingSetting"
              }
            },
            "notificationMessageTemplates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.notificationMessageTemplate"
              }
            },
            "roleDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.roleDefinition"
              }
            },
            "roleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.roleAssignment"
              }
            },
            "resourceOperations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.resourceOperation"
              }
            },
            "telecomExpenseManagementPartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.telecomExpenseManagementPartner"
              }
            },
            "windowsAutopilotSettings": { },
            "windowsAutopilotDeviceIdentities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeviceIdentity"
              }
            },
            "windowsAutopilotDeploymentProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeploymentProfile"
              }
            },
            "remoteAssistancePartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.remoteAssistancePartner"
              }
            },
            "windowsInformationProtectionAppLearningSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLearningSummary"
              }
            },
            "auditEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.auditEvent"
              }
            },
            "troubleshootingEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.termsAndConditions": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditions",
          "description": "A termsAndConditions entity represents the metadata and contents of a given Terms and Conditions (T&C) policy. T&C policies’ contents are presented to users upon their first attempt to enroll into Intune and subsequently upon edits where an administrator has required re-acceptance. They enable administrators to communicate the provisions to which a user must agree in order to have devices enrolled into Intune.",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "modifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Administrator-supplied name for the T&C policy. ",
              "type": "string"
            },
            "description": {
              "description": "Administrator-supplied description of the T&C policy.",
              "type": "string"
            },
            "title": {
              "description": "Administrator-supplied title of the terms and conditions. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "bodyText": {
              "description": "Administrator-supplied body text of the terms and conditions, typically the terms themselves. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "acceptanceStatement": {
              "description": "Administrator-supplied explanation of the terms and conditions, typically describing what it means to accept the terms and conditions set out in the T&C policy. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Integer indicating the current version of the terms. Incremented when an administrator makes a change to the terms and wishes to require users to re-accept the modified T&C policy.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditionsGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditionsAssignment"
              }
            },
            "acceptanceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditionsAcceptanceStatus"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "androidForWorkSettings",
          "description": "Settings for Android For Work.",
          "type": "object",
          "properties": {
            "bindStatus": {
              "description": "Bind status of the tenant with the Google EMM API"
            },
            "lastAppSyncDateTime": {
              "format": "date-time",
              "description": "Last completion time for app sync",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastAppSyncStatus": {
              "description": "Last application sync result"
            },
            "ownerUserPrincipalName": {
              "description": "Owner UPN that created the enterprise",
              "type": "string"
            },
            "ownerOrganizationName": {
              "description": "Organization name used when onboarding Android for Work",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modification time for Android for Work settings",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "enrollmentTarget": {
              "description": "Indicates which users can enroll devices in Android for Work device management"
            },
            "targetGroupIds": {
              "description": "Specifies which AAD groups can enroll devices in Android for Work device management if enrollmentTarget is set to 'Targeted'",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkAppConfigurationSchema": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "androidForWorkAppConfigurationSchema",
          "description": "Schema describing an Android for Work application's custom configurations.",
          "type": "object",
          "properties": {
            "exampleJson": {
              "description": "Example JSON confirming to this schema that demonstrates how to set the configuration for this app"
            },
            "schemaItems": {
              "description": "Collection of items each representing a named configuration option in the schema",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkEnrollmentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "androidForWorkEnrollmentProfile",
          "description": "Enrollment Profile used to enroll COSU devices using Google's Cloud Management.",
          "type": "object",
          "properties": {
            "accountId": {
              "description": "Tenant GUID the enrollment profile belongs to.",
              "type": "string"
            },
            "name": {
              "description": "Friendly name for the enrollment profile.",
              "type": "string"
            },
            "description": {
              "description": "Description for the enrollment profile.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Date time the enrollment profile was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "modifiedDateTime": {
              "format": "date-time",
              "description": "Date time the enrollment profile was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "tokenValue": {
              "description": "Value of the most recently created token for this enrollment profile.",
              "type": "string"
            },
            "tokenExpirationDateTime": {
              "format": "date-time",
              "description": "Date time the most recently created token will expire.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "totalEnrollmentCount": {
              "format": "int32",
              "description": "Total number of Android devices that have enrolled using this enrollment profile.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isTokenActive": {
              "description": "True if the token is still active; false it if has expired or been revoked.",
              "type": "boolean"
            },
            "qrCode": {
              "description": "String used to generate a QR code for the token.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.enrollmentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "enrollmentProfile",
          "description": "The enrollmentProfile resource represents a collection of configurations which must be provided pre-enrollment to enable enrolling certain devices whose identities have been pre-staged. Pre-staged device identities are assigned to this type of profile to apply the profile's configurations at enrollment of the corresponding device.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the profile",
              "type": "string"
            },
            "description": {
              "description": "Description of the profile",
              "type": "string"
            },
            "requiresUserAuthentication": {
              "description": "Indicates if the profile requires user authentication",
              "type": "boolean"
            },
            "configurationEndpointUrl": {
              "description": "Configuration endpoint url to use for Enrollment",
              "type": "string"
            },
            "enableAuthenticationViaCompanyPortal": {
              "description": "Indicates to authenticate with Apple Setup Assistant instead of Company Portal.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.importedDeviceIdentity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "importedDeviceIdentity",
          "description": "The importedDeviceIdentity resource represents a unique hardware identity of a device that has been pre-staged for pre-enrollment configuration.",
          "type": "object",
          "properties": {
            "importedDeviceIdentifier": {
              "description": "Imported Device Identifier",
              "type": "string"
            },
            "importedDeviceIdentityType": {
              "description": "Type of Imported Device Identity"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last Modified DateTime of the description",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Created Date Time of the device",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastContactedDateTime": {
              "format": "date-time",
              "description": "Last Contacted Date Time of the device",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "The description of the device",
              "type": "string"
            },
            "enrollmentState": {
              "description": "The state of the device in Intune"
            },
            "platform": {
              "description": "The platform of the Device."
            }
          }
        }
      ]
    },
    "microsoft.graph.importedAppleDeviceIdentity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "importedAppleDeviceIdentity",
          "description": "The importedAppleDeviceIdentity resource represents the imported device identity of an Apple device .",
          "type": "object",
          "properties": {
            "serialNumber": {
              "description": "Device serial number",
              "type": "string"
            },
            "requestedEnrollmentProfileId": {
              "description": "Enrollment profile Id admin intends to apply to the device during next enrollment",
              "type": "string"
            },
            "requestedEnrollmentProfileAssignmentDateTime": {
              "format": "date-time",
              "description": "The time enrollment profile was assigned to the device",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "isSupervised": {
              "description": "Indicates if the Apple device is supervised. More information is at: https://support.apple.com/en-us/HT202837",
              "type": "boolean"
            },
            "discoverySource": {
              "description": "Apple device discovery source."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Created Date Time of the device",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastContactedDateTime": {
              "format": "date-time",
              "description": "Last Contacted Date Time of the device",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "The description of the device",
              "type": "string"
            },
            "enrollmentState": {
              "description": "The state of the device in Intune"
            },
            "platform": {
              "description": "The platform of the Device."
            }
          }
        }
      ]
    },
    "microsoft.graph.adminConsent": {
      "title": "adminConsent",
      "type": "object",
      "properties": {
        "collectFullIOSAppInventory": {
          "description": "The admin consent state of collecting full iOS app inventory."
        }
      }
    },
    "microsoft.graph.deviceProtectionOverview": {
      "title": "deviceProtectionOverview",
      "type": "object",
      "properties": {
        "totalReportedDeviceCount": {
          "format": "int32",
          "description": "Total device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "inactiveThreatAgentDeviceCount": {
          "format": "int32",
          "description": "Device with inactive threat agent count",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unknownStateThreatAgentDeviceCount": {
          "format": "int32",
          "description": "Device with threat agent state as unknown count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pendingSignatureUpdateDeviceCount": {
          "format": "int32",
          "description": "Device with old signature count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "cleanDeviceCount": {
          "format": "int32",
          "description": "Clean device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pendingFullScanDeviceCount": {
          "format": "int32",
          "description": "Pending full scan device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pendingRestartDeviceCount": {
          "format": "int32",
          "description": "Pending restart device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pendingManualStepsDeviceCount": {
          "format": "int32",
          "description": "Pending manual steps device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pendingOfflineScanDeviceCount": {
          "format": "int32",
          "description": "Pending offline scan device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "criticalFailuresDeviceCount": {
          "format": "int32",
          "description": "Critical failures device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.remoteActionAudit": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "remoteActionAudit",
          "description": "Report of remote actions initiated on the devices belonging to a certain tenant.",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Intune device name.",
              "type": "string"
            },
            "userName": {
              "description": "[deprecated] Please use InitiatedByUserPrincipalName instead.",
              "type": "string"
            },
            "initiatedByUserPrincipalName": {
              "description": "User who initiated the device action, format is UPN.",
              "type": "string"
            },
            "action": {
              "description": "The action name."
            },
            "requestDateTime": {
              "format": "date-time",
              "description": "Time when the action was issued, given in UTC.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deviceOwnerUserPrincipalName": {
              "description": "Upn of the device owner.",
              "type": "string"
            },
            "deviceIMEI": {
              "description": "IMEI of the device.",
              "type": "string"
            },
            "actionState": {
              "description": "Action state."
            }
          }
        }
      ]
    },
    "microsoft.graph.applePushNotificationCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "applePushNotificationCertificate",
          "description": "Apple push notification certificate.",
          "type": "object",
          "properties": {
            "appleIdentifier": {
              "description": "Apple Id of the account used to create the MDM push certificate.",
              "type": "string"
            },
            "topicIdentifier": {
              "description": "Topic Id.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modified date and time for Apple push notification certificate.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration date and time for Apple push notification certificate.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "certificateUploadStatus": {
              "description": "The certificate upload status.",
              "type": "string"
            },
            "certificateUploadFailureReason": {
              "description": "The reason the certificate upload failed.",
              "type": "string"
            },
            "certificate": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementScript": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementScript",
          "description": "Intune will provide customer the ability to run their Powershell scripts on the enrolled windows 10 Azure Active Directory joined devices. The script can be run once or periodically.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the device management script.",
              "type": "string"
            },
            "description": {
              "description": "Optional description for the device management script.",
              "type": "string"
            },
            "runSchedule": {
              "description": "The the interval for script to run. If not defined the script will run once"
            },
            "scriptContent": {
              "description": "The base64 encoded script text.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time the device management script was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time the device management script was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "runAsAccount": {
              "description": "Indicates the type of execution context the device management script runs in."
            },
            "enforceSignatureCheck": {
              "description": "Indicate whether the script signature needs be checked.",
              "type": "boolean"
            },
            "fileName": {
              "description": "Script file name.",
              "type": "string"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementScriptGroupAssignment"
              }
            },
            "runSummary": { },
            "deviceRunStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementScriptDeviceState"
              }
            },
            "userRunStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementScriptUserState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceOverview",
          "description": "Summary data for managed devices",
          "type": "object",
          "properties": {
            "enrolledDeviceCount": {
              "format": "int32",
              "description": "Total enrolled device count. Does not include PC devices managed via Intune PC Agent",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "mdmEnrolledCount": {
              "format": "int32",
              "description": "The number of devices enrolled in MDM",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "dualEnrolledDeviceCount": {
              "format": "int32",
              "description": "The number of devices enrolled in both MDM and EAS",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceOperatingSystemSummary": {
              "description": "Device operating system summary."
            },
            "deviceExchangeAccessStateSummary": {
              "description": "Distribution of Exchange Access State in Intune"
            }
          }
        }
      ]
    },
    "microsoft.graph.detectedApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "detectedApp",
          "description": "A managed or unmanaged app that is installed on a managed device. Unmanaged apps will only appear for devices marked as corporate owned.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the discovered application. Read-only",
              "type": "string"
            },
            "version": {
              "description": "Version of the discovered application. Read-only",
              "type": "string"
            },
            "sizeInByte": {
              "format": "int64",
              "description": "Discovered application size in bytes. Read-only",
              "type": "integer"
            },
            "deviceCount": {
              "format": "int32",
              "description": "The number of devices that have installed this application",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsMalwareInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsMalwareInformation",
          "description": "Malware information entity.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Malware name",
              "type": "string"
            },
            "additionalInformationUrl": {
              "description": "Information URL to learn more about the malware",
              "type": "string"
            },
            "severity": {
              "description": "Severity of the malware"
            },
            "category": {
              "description": "Category of the malware"
            },
            "lastDetectionDateTime": {
              "format": "date-time",
              "description": "The last time the malware is detected",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "windowsDevicesProtectionState": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsProtectionState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementSettings": {
      "title": "deviceManagementSettings",
      "type": "object",
      "properties": {
        "windowsCommercialId": {
          "type": "string"
        },
        "windowsCommercialIdLastModifiedTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "deviceComplianceCheckinThresholdDays": {
          "format": "int32",
          "description": "The number of days a device is allowed to go without checking in to remain compliant. Valid values 0 to 120",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "isScheduledActionEnabled": {
          "description": "Is feature enabled or not for scheduled action for rule.",
          "type": "boolean"
        },
        "secureByDefault": {
          "description": "Device should be noncompliant when there is no compliance policy targeted when this is true",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.deviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfiguration",
          "description": "Device Configuration.",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationAssignment"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationUserStatus"
              }
            },
            "deviceStatusOverview": { },
            "userStatusOverview": { },
            "deviceSettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingStateDeviceSummary"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicy",
          "description": "This is the base class for Compliance policy. Compliance policies are platform specific and individual per-platform compliance policies inherit from here. ",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicyGroupAssignment"
              }
            },
            "scheduledActionsForRule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceScheduledActionForRule"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceUserStatus"
              }
            },
            "deviceStatusOverview": { },
            "userStatusOverview": { },
            "deviceSettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingStateDeviceSummary"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceSetupConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceSetupConfiguration",
          "description": "This is the base class for Setup Configuration. Setup configurations are platform specific and individual per-platform setup configurations inherit from here.",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.softwareUpdateStatusSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "softwareUpdateStatusSummary",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The name of the policy.",
              "type": "string"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of non compliant devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of devices had error.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantUserCount": {
              "format": "int32",
              "description": "Number of compliant users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantUserCount": {
              "format": "int32",
              "description": "Number of non compliant users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedUserCount": {
              "format": "int32",
              "description": "Number of remediated users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorUserCount": {
              "format": "int32",
              "description": "Number of users had error.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownUserCount": {
              "format": "int32",
              "description": "Number of unknown users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictUserCount": {
              "format": "int32",
              "description": "Number of conflict users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableUserCount": {
              "format": "int32",
              "description": "Number of not applicable users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicyDeviceStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyDeviceStateSummary",
          "type": "object",
          "properties": {
            "inGracePeriodCount": {
              "format": "int32",
              "description": "Number of devices that are in grace period",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "configManagerCount": {
              "format": "int32",
              "description": "Number of devices that have compliance managed by System Center Configuration Manager",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicySettingStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicySettingStateSummary",
          "description": "Device Compilance Policy Setting State summary across the account.",
          "type": "object",
          "properties": {
            "setting": {
              "description": "The setting class name and property name.",
              "type": "string"
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string"
            },
            "platformType": {
              "description": "Setting platform"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceComplianceSettingStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceSettingState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationDeviceStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceStateSummary",
          "type": "object",
          "properties": {
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationUserStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationUserStateSummary",
          "type": "object",
          "properties": {
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.cartToClassAssociation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "cartToClassAssociation",
          "description": "CartToClassAssociation for associating device carts with classrooms.",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the CartToClassAssociation.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the CartToClassAssociation.",
              "type": "string"
            },
            "deviceCartIds": {
              "description": "Identifiers of device carts to be associated with classes.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "classroomIds": {
              "description": "Identifiers of classrooms to be associated with device carts.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosUpdateDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "iosUpdateDeviceStatus",
          "type": "object",
          "properties": {
            "installStatus": {
              "description": "The installation status of the policy report."
            },
            "osVersion": {
              "description": "The device version that is being reported.",
              "type": "string"
            },
            "deviceId": {
              "description": "The device id that is being reported.",
              "type": "string"
            },
            "userId": {
              "description": "The User id that is being reported.",
              "type": "string"
            },
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "platform": {
              "format": "int32",
              "description": "Platform of the device that is being reported",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.ndesConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "ndesConnector",
          "description": "Entity which represents an OnPrem Ndes connector.",
          "type": "object",
          "properties": {
            "lastConnectionDateTime": {
              "format": "date-time",
              "description": "Last connection time for the Ndes Connector",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "Ndes Connector Status"
            },
            "displayName": {
              "description": "The friendly name of the Ndes Connector.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.intuneBrand": {
      "title": "intuneBrand",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Company/organization name that is displayed to end users.",
          "type": "string"
        },
        "contactITName": {
          "description": "Name of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITPhoneNumber": {
          "description": "Phone number of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITEmailAddress": {
          "description": "Email address of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITNotes": {
          "description": "Text comments regarding the person/organization responsible for IT support.",
          "type": "string"
        },
        "privacyUrl": {
          "description": "URL to the company/organization’s privacy policy.",
          "type": "string"
        },
        "onlineSupportSiteUrl": {
          "description": "URL to the company/organization’s IT helpdesk site.",
          "type": "string"
        },
        "onlineSupportSiteName": {
          "description": "Display name of the company/organization’s IT helpdesk site.",
          "type": "string"
        },
        "themeColor": {
          "description": "Primary theme color used in the Company Portal applications and web portal."
        },
        "showLogo": {
          "description": "Boolean that represents whether the administrator-supplied logo images are shown or not shown.",
          "type": "boolean"
        },
        "lightBackgroundLogo": {
          "description": "Logo image displayed in Company Portal apps which have a light background behind the logo."
        },
        "darkBackgroundLogo": {
          "description": "Logo image displayed in Company Portal apps which have a dark background behind the logo."
        },
        "showNameNextToLogo": {
          "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.rgbColor": {
      "title": "rgbColor",
      "type": "object",
      "properties": {
        "r": {
          "format": "uint8",
          "description": "Red value",
          "type": "integer"
        },
        "g": {
          "format": "uint8",
          "description": "Green value",
          "type": "integer"
        },
        "b": {
          "format": "uint8",
          "description": "Blue value",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.mimeContent": {
      "title": "mimeContent",
      "type": "object",
      "properties": {
        "type": {
          "description": "Indicates the content mime type.",
          "type": "string"
        },
        "value": {
          "format": "base64url",
          "description": "The byte array that contains the actual content.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.deviceCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCategory",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name for the device category.",
              "type": "string"
            },
            "description": {
              "description": "Optional description for the device category.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementExchangeConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementExchangeConnector",
          "description": "Entity which represents a connection to an Exchange environment.",
          "type": "object",
          "properties": {
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last sync time for the Exchange Connector",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Exchange Connector Status"
            },
            "primarySmtpAddress": {
              "description": "Email address used to configure the Service To Service Exchange Connector.",
              "type": "string"
            },
            "serverName": {
              "description": "The name of the server hosting the Exchange Connector.",
              "type": "string"
            },
            "exchangeConnectorType": {
              "description": "The type of Exchange Connector Configured."
            },
            "version": {
              "description": "The version of the ExchangeConnectorAgent",
              "type": "string"
            },
            "exchangeAlias": {
              "description": "An alias assigned to the Exchange server",
              "type": "string"
            },
            "exchangeOrganization": {
              "description": "Exchange Organization to the Exchange server",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceEnrollmentConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceEnrollmentConfiguration",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "priority": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementExchangeOnPremisesPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementExchangeOnPremisesPolicy",
          "description": "Singleton entity which represents the Exchange OnPremises policy configured for a tenant.",
          "type": "object",
          "properties": {
            "notificationContent": {
              "format": "base64url",
              "description": "Notification text that will be sent to users quarantined by this policy. This is UTF8 encoded byte array HTML.",
              "type": "string"
            },
            "defaultAccessLevel": {
              "description": "Default access state in Exchange. This rule applies globally to the entire Exchange organization"
            },
            "accessRules": {
              "description": "The list of device access rules in Exchange. The access rules apply globally to the entire Exchange organization",
              "type": "array",
              "items": { }
            },
            "knownDeviceClasses": {
              "description": "The list of device classes known to Exchange",
              "type": "array",
              "items": { }
            },
            "conditionalAccessSettings": { }
          }
        }
      ]
    },
    "microsoft.graph.onPremisesConditionalAccessSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onPremisesConditionalAccessSettings",
          "description": "Singleton entity which represents the Exchange OnPremises Conditional Access Settings for a tenant.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Indicates if on premises conditional access is enabled for this organization",
              "type": "boolean"
            },
            "includedGroups": {
              "description": "User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access.",
              "type": "array",
              "items": {
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
              }
            },
            "excludedGroups": {
              "description": "User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy.",
              "type": "array",
              "items": {
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
              }
            },
            "overrideDefaultRule": {
              "description": "Override the default access rule when allowing a device to ensure access is granted.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileThreatDefenseConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileThreatDefenseConnector",
          "description": "Entity which represents a connection to Mobile threat defense partner.",
          "type": "object",
          "properties": {
            "lastHeartbeatDateTime": {
              "format": "date-time",
              "description": "Timestamp of last heartbeat after admin enabled option Connect to MTP",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "partnerState": {
              "description": "Partner state of this tenant"
            },
            "androidEnabled": {
              "description": "Android Toggle On or Off",
              "type": "boolean"
            },
            "androidDeviceBlockedOnMissingPartnerData": {
              "description": "For Android, Allows admin to config must receive data from the data sync partner prior to being considered compliant",
              "type": "boolean"
            },
            "iosDeviceBlockedOnMissingPartnerData": {
              "description": "For IOS, Allows admin to config must receive data from the data sync partner prior to being considered compliant",
              "type": "boolean"
            },
            "partnerUnsupportedOsVersionBlocked": {
              "description": "Allows admin to block devices on the enabled platforms that do not meet minimum version requirements",
              "type": "boolean"
            },
            "iosEnabled": {
              "description": "IOS Toggle On or Off",
              "type": "boolean"
            },
            "partnerUnresponsivenessThresholdInDays": {
              "format": "int32",
              "description": "Get or Set days the per tenant tolerance to unresponsiveness for this partner integration",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementPartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementPartner",
          "description": "Entity which represents a connection to device management partner.",
          "type": "object",
          "properties": {
            "lastHeartbeatDateTime": {
              "format": "date-time",
              "description": "Timestamp of last heartbeat after admin enabled option Connect to Device management Partner",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "partnerState": {
              "description": "Partner state of this tenant"
            },
            "partnerAppType": {
              "description": "Partner App type"
            },
            "singleTenantAppId": {
              "description": "Partner Single tenant App id",
              "type": "string"
            },
            "displayName": {
              "description": "Partner display name",
              "type": "string"
            },
            "isConfigured": {
              "description": "Whether device management partner is configured or not",
              "type": "boolean"
            },
            "whenPartnerDevicesWillBeRemoved": {
              "format": "date-time",
              "description": "DateTime in UTC when PartnerDevices will be removed",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "whenPartnerDevicesWillBeMarkedAsNonCompliant": {
              "format": "date-time",
              "description": "DateTime in UTC when PartnerDevices will be marked as NonCompliant",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.notificationMessageTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "notificationMessageTemplate",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Display name for the Notification Message Template.",
              "type": "string"
            },
            "defaultLocale": {
              "description": "The default locale to fallback onto when the requested locale is not available.",
              "type": "string"
            },
            "brandingOptions": {
              "description": "The Message Template Branding Options. Branding is defined in the Intune Admin Console."
            },
            "localizedNotificationMessages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.localizedNotificationMessage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.roleDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "roleDefinition",
          "description": "The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display Name of the Role definition.",
              "type": "string"
            },
            "description": {
              "description": "Description of the Role definition.",
              "type": "string"
            },
            "permissions": {
              "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission.",
              "type": "array",
              "items": { }
            },
            "rolePermissions": {
              "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission.",
              "type": "array",
              "items": { }
            },
            "isBuiltInRoleDefinition": {
              "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition.",
              "type": "boolean"
            },
            "isBuiltIn": {
              "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition.",
              "type": "boolean"
            },
            "roleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.roleAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.roleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "roleAssignment",
          "description": "The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The display or friendly name of the role Assignment.",
              "type": "string"
            },
            "description": {
              "description": "Description of the Role Assignment.",
              "type": "string"
            },
            "members": {
              "description": "The list of ids of role member security groups. These are IDs from Azure Active Directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "scopeMembers": {
              "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "resourceScopes": {
              "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roleDefinition": { }
          }
        }
      ]
    },
    "microsoft.graph.resourceOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "resourceOperation",
          "description": "This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Read, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the Assign operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles.This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Get, List, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the \"Assign\" operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles.",
          "type": "object",
          "properties": {
            "resourceName": {
              "description": "Name of the Resource this operation is performed on.",
              "type": "string"
            },
            "actionName": {
              "description": "Type of action this operation is going to perform. The actionName should be concise and limited to as few words as possible.",
              "type": "string"
            },
            "description": {
              "description": "Description of the resource operation. The description is used in mouse-over text for the operation when shown in the Azure Portal.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.telecomExpenseManagementPartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "telecomExpenseManagementPartner",
          "description": "telecomExpenseManagementPartner resources represent the metadata and status of a given TEM service. Once your organization has onboarded with a partner, the partner can be enabled or disabled to switch TEM functionality on or off.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of the TEM partner.",
              "type": "string"
            },
            "url": {
              "description": "URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.",
              "type": "string"
            },
            "appAuthorized": {
              "description": "Whether the partner's AAD app has been authorized to access Intune.",
              "type": "boolean"
            },
            "enabled": {
              "description": "Whether Intune's connection to the TEM service is currently enabled or disabled.",
              "type": "boolean"
            },
            "lastConnectionDateTime": {
              "format": "date-time",
              "description": "Timestamp of the last request sent to Intune by the TEM partner.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsAutopilotSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsAutopilotSettings",
          "description": "The windowsAutopilotSettings resource represents a Windows Autopilot Account to sync data with Windows device data sync service.",
          "type": "object",
          "properties": {
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last data sync date time with DDS service.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastManualSyncTriggerDateTime": {
              "format": "date-time",
              "description": "Last data sync date time with DDS service.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "syncStatus": {
              "description": "Indicates the status of sync with Device data sync (DDS) service."
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsAutopilotDeviceIdentity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsAutopilotDeviceIdentity",
          "description": "The windowsAutopilotDeviceIdentity resource represents a Windows Autopilot Device.",
          "type": "object",
          "properties": {
            "deploymentProfileAssignmentStatus": {
              "description": "Profile assignment status of the Windows autopilot device."
            },
            "deploymentProfileAssignedDateTime": {
              "format": "date-time",
              "description": "Profile set time of the Windows autopilot device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "orderIdentifier": {
              "description": "Order Identifier of the Windows autopilot device.",
              "type": "string"
            },
            "serialNumber": {
              "description": "Serial number of the Windows autopilot device.",
              "type": "string"
            },
            "productKey": {
              "description": "Product Key of the Windows autopilot device.",
              "type": "string"
            },
            "manufacturer": {
              "description": "Oem manufacturer of the Windows autopilot device.",
              "type": "string"
            },
            "model": {
              "description": "Model name of the Windows autopilot device.",
              "type": "string"
            },
            "enrollmentState": {
              "description": "Intune enrollment state of the Windows autopilot device."
            },
            "lastContactedDateTime": {
              "format": "date-time",
              "description": "Intune Last Contacted Date Time of the Windows autopilot device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deploymentProfile": { }
          }
        }
      ]
    },
    "microsoft.graph.windowsAutopilotDeploymentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsAutopilotDeploymentProfile",
          "description": "Windows Auto Pilot Deployment Profile",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the profile",
              "type": "string"
            },
            "description": {
              "description": "Description of the profile",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Profile creation time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Profile last modified time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "outOfBoxExperienceSettings": {
              "description": "Out of box experience setting"
            },
            "assignedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeviceIdentity"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.remoteAssistancePartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "remoteAssistancePartner",
          "description": "remoteAssistPartner resources represent the metadata and status of a given Remote Assistance partner service.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of the partner.",
              "type": "string"
            },
            "onboardingUrl": {
              "description": "URL of the partner's onboarding portal, where an administrator can configure their Remote Assistance service.",
              "type": "string"
            },
            "onboardingStatus": {
              "description": "TBD"
            },
            "lastConnectionDateTime": {
              "format": "date-time",
              "description": "Timestamp of the last request sent to Intune by the TEM partner.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsInformationProtectionAppLearningSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsInformationProtectionAppLearningSummary",
          "description": "Windows Information Protection AppLearning Summary entity.",
          "type": "object",
          "properties": {
            "applicationName": {
              "description": "Application Name",
              "type": "string"
            },
            "applicationType": {
              "description": "Application Type"
            },
            "deviceCount": {
              "format": "int32",
              "description": "Device Count",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.auditEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "auditEvent",
          "description": "A class containing the properties for Audit Event.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Event display name.",
              "type": "string"
            },
            "componentName": {
              "description": "Component name.",
              "type": "string"
            },
            "actor": {
              "description": "AAD user and application that are associated with the audit event."
            },
            "activity": {
              "description": "Friendly name of the activity.",
              "type": "string"
            },
            "activityDateTime": {
              "format": "date-time",
              "description": "The date time in UTC when the activity was performed.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "activityType": {
              "description": "The type of activity that was being performed.",
              "type": "string"
            },
            "activityOperationType": {
              "description": "The HTTP operation type of the activity.",
              "type": "string"
            },
            "activityResult": {
              "description": "The result of the activity.",
              "type": "string"
            },
            "correlationId": {
              "format": "uuid",
              "description": "The client request Id that is used to correlate activity within the system.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "resources": {
              "description": "Resources being modified.",
              "type": "array",
              "items": { }
            },
            "category": {
              "description": "Audit category.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkAppConfigurationExample": {
      "title": "androidForWorkAppConfigurationExample",
      "type": "object"
    },
    "microsoft.graph.androidForWorkAppConfigurationSchemaItem": {
      "title": "androidForWorkAppConfigurationSchemaItem",
      "type": "object",
      "properties": {
        "schemaItemKey": {
          "description": "Unique key the application uses to identify the item",
          "type": "string"
        },
        "displayName": {
          "description": "Human readable name",
          "type": "string"
        },
        "description": {
          "description": "Description of what the item controls within the application",
          "type": "string"
        },
        "defaultBoolValue": {
          "description": "Default value for boolean type items, if specified by the app developer",
          "type": "boolean"
        },
        "defaultIntValue": {
          "format": "int32",
          "description": "Default value for integer type items, if specified by the app developer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "defaultStringValue": {
          "description": "Default value for string type items, if specified by the app developer",
          "type": "string"
        },
        "defaultStringArrayValue": {
          "description": "Default value for string array type items, if specified by the app developer",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataType": {
          "description": "The type of value this item describes"
        },
        "selections": {
          "description": "List of human readable name/value pairs for the valid values that can be set for this item (Choice and Multiselect items only)",
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.keyValuePair": {
      "title": "keyValuePair",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name for this key-value pair",
          "type": "string"
        },
        "value": {
          "description": "Value for this key-value pair",
          "type": "string"
        }
      }
    },
    "microsoft.graph.androidForWorkAppConfigurationExampleJson": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkAppConfigurationExample"
        },
        {
          "title": "androidForWorkAppConfigurationExampleJson",
          "type": "object",
          "properties": {
            "example": {
              "description": "Example as JSON.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceAppManagement": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceAppManagement",
          "description": "Singleton entity that acts as a container for all device app management functionality.",
          "type": "object",
          "properties": {
            "microsoftStoreForBusinessLastSuccessfulSyncDateTime": {
              "format": "date-time",
              "description": "The last time the apps from the Microsoft Store for Business were synced successfully for the account.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "isEnabledForMicrosoftStoreForBusiness": {
              "description": "Whether the account is enabled for syncing applications from the Microsoft Store for Business.",
              "type": "boolean"
            },
            "microsoftStoreForBusinessLanguage": {
              "description": "The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is <languagecode2>-<country/regioncode2>, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.",
              "type": "string"
            },
            "microsoftStoreForBusinessLastCompletedApplicationSyncTime": {
              "format": "date-time",
              "description": "The last time an application sync from the Microsoft Store for Business was completed.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "windowsManagementApp": { },
            "mobileApps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileApp"
              }
            },
            "mobileAppCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppCategory"
              }
            },
            "enterpriseCodeSigningCertificates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.enterpriseCodeSigningCertificate"
              }
            },
            "iosLobAppProvisioningConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosLobAppProvisioningConfiguration"
              }
            },
            "symantecCodeSigningCertificate": { },
            "mobileAppConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
              }
            },
            "sideLoadingKeys": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sideLoadingKey"
              }
            },
            "vppTokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.vppToken"
              }
            },
            "managedAppPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "iosManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosManagedAppProtection"
              }
            },
            "androidManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.androidManagedAppProtection"
              }
            },
            "defaultManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.defaultManagedAppProtection"
              }
            },
            "targetedManagedAppConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppConfiguration"
              }
            },
            "mdmWindowsInformationProtectionPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mdmWindowsInformationProtectionPolicy"
              }
            },
            "windowsInformationProtectionPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionPolicy"
              }
            },
            "managedAppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
              }
            },
            "managedAppStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppStatus"
              }
            },
            "managedEBooks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedEBook"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsManagementApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsManagementApp",
          "description": "Windows management app entity.",
          "type": "object",
          "properties": {
            "availableVersion": {
              "description": "Windows management app available version.",
              "type": "string"
            },
            "healthSummary": { },
            "healthStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsManagementAppHealthState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileApp",
          "description": "An abstract class containing the base properties for Intune mobile apps.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The admin provided or imported title of the app.",
              "type": "string"
            },
            "description": {
              "description": "The description of the app.",
              "type": "string"
            },
            "publisher": {
              "description": "The publisher of the app.",
              "type": "string"
            },
            "largeIcon": {
              "description": "The large icon, to be displayed in the app details and used for upload of the icon."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time the app was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time the app was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "isFeatured": {
              "description": "The value indicating whether the app is marked as featured by the admin.",
              "type": "boolean"
            },
            "privacyInformationUrl": {
              "description": "The privacy statement Url.",
              "type": "string"
            },
            "informationUrl": {
              "description": "The more information Url.",
              "type": "string"
            },
            "owner": {
              "description": "The owner of the app.",
              "type": "string"
            },
            "developer": {
              "description": "The developer of the app.",
              "type": "string"
            },
            "notes": {
              "description": "Notes for the app.",
              "type": "string"
            },
            "uploadState": {
              "format": "int32",
              "description": "The upload state.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppCategory"
              }
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppAssignment"
              }
            },
            "installSummary": { },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppInstallStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.userAppInstallStatus"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppCategory",
          "description": "Contains properties for a single Intune app category.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The name of the app category.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time the mobileAppCategory was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.enterpriseCodeSigningCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "enterpriseCodeSigningCertificate",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "description": "The Windows Enterprise Code-Signing Certificate in the raw data format.",
              "type": "string"
            },
            "status": {
              "description": "The Certificate Status Provisioned or not Provisioned."
            },
            "subjectName": {
              "description": "The Subject Name for the cert.",
              "type": "string"
            },
            "subject": {
              "description": "The Subject Value for the cert.",
              "type": "string"
            },
            "issuerName": {
              "description": "The Issuer Name for the cert.",
              "type": "string"
            },
            "issuer": {
              "description": "The Issuer value for the cert.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The Cert Expiration Date.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uploadDateTime": {
              "format": "date-time",
              "description": "The date time of CodeSigning Cert when it is uploaded.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosLobAppProvisioningConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "iosLobAppProvisioningConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the IOS Lob App Provisioning Configuration resource.",
          "type": "object",
          "properties": {
            "expirationDateTime": {
              "format": "date-time",
              "description": "Optional profile expiration date and time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "payloadFileName": {
              "description": "Payload file name (*.mobileprovision | *.xml).",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array)",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppProvisioningConfigGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosLobAppProvisioningConfigurationAssignment"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.symantecCodeSigningCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "symantecCodeSigningCertificate",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "description": "The Windows Symantec Code-Signing Certificate in the raw data format.",
              "type": "string"
            },
            "status": {
              "description": "The Cert Status Provisioned or not Provisioned."
            },
            "password": {
              "description": "The Password required for .pfx file.",
              "type": "string"
            },
            "subjectName": {
              "description": "The Subject Name for the cert.",
              "type": "string"
            },
            "subject": {
              "description": "The Subject value for the cert.",
              "type": "string"
            },
            "issuerName": {
              "description": "The Issuer Name for the cert.",
              "type": "string"
            },
            "issuer": {
              "description": "The Issuer value for the cert.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The Cert Expiration Date.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uploadDateTime": {
              "format": "date-time",
              "description": "The Type of the CodeSigning Cert as Symantec Cert.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfiguration",
          "description": "An abstract class for Mobile app configuration for enrolled devices.",
          "type": "object",
          "properties": {
            "targetedMobileApps": {
              "description": "the associated app.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "legacyAppConfiguration": {
              "description": "App configuration creation source check.",
              "type": "boolean"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mdmAppConfigGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
              }
            },
            "deviceStatusSummary": { },
            "userStatusSummary": { }
          }
        }
      ]
    },
    "microsoft.graph.sideLoadingKey": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sideLoadingKey",
          "description": "SideLoadingKey entity is required for Windows 8 and 8.1 devices to intall Line Of Business Apps for a tenant.",
          "type": "object",
          "properties": {
            "value": {
              "description": "Side Loading Key Value, it is 5x5 value, seperated by hiphens.",
              "type": "string"
            },
            "displayName": {
              "description": "Side Loading Key Name displayed to the ITPro Admins.",
              "type": "string"
            },
            "description": {
              "description": "Side Loading Key description displayed to the ITPro Admins..",
              "type": "string"
            },
            "totalActivation": {
              "format": "int32",
              "description": "Side Loading Key Total Activation displayed to the ITPro Admins.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdatedDateTime": {
              "description": "Side Loading Key Last Updated Date displayed to the ITPro Admins.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.vppToken": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "vppToken",
          "description": "You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.",
          "type": "object",
          "properties": {
            "organizationName": {
              "description": "The organization associated with the Apple Volume Purchase Program Token",
              "type": "string"
            },
            "vppTokenAccountType": {
              "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
            },
            "appleId": {
              "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration date time of the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "token": {
              "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`."
            },
            "tokenActionResults": {
              "description": "The collection of statuses of the actions performed on the Apple Volume Purchase Program Token.",
              "type": "array",
              "items": { }
            },
            "lastSyncStatus": {
              "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`."
            },
            "automaticallyUpdateApps": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "boolean"
            },
            "countryOrRegion": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppPolicy",
          "description": "The ManagedAppPolicy resource represents a base type for platform specific policies.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Policy display name.",
              "type": "string"
            },
            "description": {
              "description": "The policy's description.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time the policy was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last time the policy was modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "managedAppProtection",
          "description": "Policy used to configure detailed management settings for a specified set of apps",
          "type": "object",
          "properties": {
            "periodOfflineBeforeAccessCheck": {
              "format": "duration",
              "description": "The period after which access is checked when the device is not connected to the internet.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "periodOnlineBeforeAccessCheck": {
              "format": "duration",
              "description": "The period after which access is checked when the device is connected to the internet.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "allowedInboundDataTransferSources": {
              "description": "Sources from which data is allowed to be transferred."
            },
            "allowedOutboundDataTransferDestinations": {
              "description": "Destinations to which data is allowed to be transferred."
            },
            "organizationalCredentialsRequired": {
              "description": "Indicates whether organizational credentials are required for app use.",
              "type": "boolean"
            },
            "allowedOutboundClipboardSharingLevel": {
              "description": "The level to which the clipboard may be shared between apps on the managed device."
            },
            "dataBackupBlocked": {
              "description": "Indicates whether the backup of a managed app's data is blocked.",
              "type": "boolean"
            },
            "deviceComplianceRequired": {
              "description": "Indicates whether device compliance is required.",
              "type": "boolean"
            },
            "managedBrowserToOpenLinksRequired": {
              "description": "Indicates whether internet links should be opened in the managed browser app.",
              "type": "boolean"
            },
            "saveAsBlocked": {
              "description": "Indicates whether users may use the \"Save As\" menu item to save a copy of protected files.",
              "type": "boolean"
            },
            "periodOfflineBeforeWipeIsEnforced": {
              "format": "duration",
              "description": "The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "pinRequired": {
              "description": "Indicates whether an app-level pin is required.",
              "type": "boolean"
            },
            "maximumPinRetries": {
              "format": "int32",
              "description": "Maximum number of incorrect pin retry attempts before the managed app is wiped.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "simplePinBlocked": {
              "description": "Indicates whether simplePin is blocked.",
              "type": "boolean"
            },
            "minimumPinLength": {
              "format": "int32",
              "description": "Minimum pin length required for an app-level pin if PinRequired is set to True",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinCharacterSet": {
              "description": "Character set which may be used for an app-level pin if PinRequired is set to True."
            },
            "periodBeforePinReset": {
              "format": "duration",
              "description": "TimePeriod before the all-level pin must be reset if PinRequired is set to True.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "allowedDataStorageLocations": {
              "description": "Data storage locations where a user may store managed data.",
              "type": "array",
              "items": { }
            },
            "contactSyncBlocked": {
              "description": "Indicates whether contacts can be synced to the user's device.",
              "type": "boolean"
            },
            "printBlocked": {
              "description": "Indicates whether printing is allowed from managed apps.",
              "type": "boolean"
            },
            "fingerprintBlocked": {
              "description": "Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.",
              "type": "boolean"
            },
            "disableAppPinIfDevicePinIsSet": {
              "description": "Indicates whether use of the app pin is required if the device pin is set.",
              "type": "boolean"
            },
            "minimumRequiredOsVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "minimumWarningOsVersion": {
              "description": "Versions less than the specified version will result in warning message on the managed app from accessing company data.",
              "type": "string"
            },
            "minimumRequiredAppVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "minimumWarningAppVersion": {
              "description": "Versions less than the specified version will result in warning message on the managed app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.targetedManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppProtection"
        },
        {
          "title": "targetedManagedAppProtection",
          "description": "Policy used to configure detailed management settings targeted to specific security groups",
          "type": "object",
          "properties": {
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.targetedManagedAppProtection"
        },
        {
          "title": "iosManagedAppProtection",
          "description": "Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device",
          "type": "object",
          "properties": {
            "appDataEncryptionType": {
              "description": "Type of encryption which should be used for data in a managed app."
            },
            "minimumRequiredSdkVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ]
    },
    "microsoft.graph.androidManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.targetedManagedAppProtection"
        },
        {
          "title": "androidManagedAppProtection",
          "description": "Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device",
          "type": "object",
          "properties": {
            "screenCaptureBlocked": {
              "description": "Indicates whether a managed user can take screen captures of managed apps",
              "type": "boolean"
            },
            "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
              "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled",
              "type": "boolean"
            },
            "encryptAppData": {
              "description": "Indicates whether application data for managed apps should be encrypted",
              "type": "boolean"
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minimumRequiredPatchVersion": {
              "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
              "type": "string"
            },
            "minimumWarningPatchVersion": {
              "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
              "type": "string"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ]
    },
    "microsoft.graph.defaultManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppProtection"
        },
        {
          "title": "defaultManagedAppProtection",
          "description": "Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy",
          "type": "object",
          "properties": {
            "appDataEncryptionType": {
              "description": "Type of encryption which should be used for data in a managed app. (iOS Only)"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether screen capture is blocked.",
              "type": "boolean"
            },
            "encryptAppData": {
              "description": "Indicates whether managed-app data should be encrypted. (Android only)",
              "type": "boolean"
            },
            "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
              "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled",
              "type": "boolean"
            },
            "minimumRequiredSdkVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "customSettings": {
              "description": "A set of string key and string value pairs to be sent to the affected users, unalterned by this service",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.keyValuePair"
              }
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minimumRequiredPatchVersion": {
              "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
              "type": "string"
            },
            "minimumWarningPatchVersion": {
              "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
              "type": "string"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ]
    },
    "microsoft.graph.managedAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "managedAppConfiguration",
          "description": "Configuration used to deliver a set of custom settings as-is to apps for users to whom the configuration is scoped",
          "type": "object",
          "properties": {
            "customSettings": {
              "description": "A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.keyValuePair"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.targetedManagedAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppConfiguration"
        },
        {
          "title": "targetedManagedAppConfiguration",
          "description": "Configuration used to deliver a set of custom settings as-is to all users in the targeted security group",
          "type": "object",
          "properties": {
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsInformationProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "windowsInformationProtection",
          "description": "Policy for Windows information protection to configure detailed management settings",
          "type": "object",
          "properties": {
            "enforcementLevel": {
              "description": "WIP enforcement level.See the Enum definition for supported values"
            },
            "enterpriseDomain": {
              "description": "Primary enterprise domain",
              "type": "string"
            },
            "enterpriseProtectedDomainNames": {
              "description": "List of enterprise domains to be protected",
              "type": "array",
              "items": { }
            },
            "protectionUnderLockConfigRequired": {
              "description": "Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured",
              "type": "boolean"
            },
            "dataRecoveryCertificate": {
              "description": "Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)"
            },
            "revokeOnUnenrollDisabled": {
              "description": "This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.",
              "type": "boolean"
            },
            "rightsManagementServicesTemplateId": {
              "format": "uuid",
              "description": "TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "azureRightsManagementServicesAllowed": {
              "description": "Specifies whether to allow Azure RMS encryption for WIP",
              "type": "boolean"
            },
            "iconsVisible": {
              "description": "Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app",
              "type": "boolean"
            },
            "protectedApps": {
              "description": "Protected applications can access enterprise data and the data handled by those applications are protected with encryption",
              "type": "array",
              "items": { }
            },
            "exemptApps": {
              "description": "Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.",
              "type": "array",
              "items": { }
            },
            "enterpriseNetworkDomainNames": {
              "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to",
              "type": "array",
              "items": { }
            },
            "enterpriseProxiedDomains": {
              "description": "Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy",
              "type": "array",
              "items": { }
            },
            "enterpriseIPRanges": {
              "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to",
              "type": "array",
              "items": { }
            },
            "enterpriseIPRangesAreAuthoritative": {
              "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false",
              "type": "boolean"
            },
            "enterpriseProxyServers": {
              "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise",
              "type": "array",
              "items": { }
            },
            "enterpriseInternalProxyServers": {
              "description": "This is the comma-separated list of internal proxy servers. For example, \"157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59\". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies",
              "type": "array",
              "items": { }
            },
            "enterpriseProxyServersAreAuthoritative": {
              "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false",
              "type": "boolean"
            },
            "neutralDomainResources": {
              "description": "List of domain names that can used for work or personal resource",
              "type": "array",
              "items": { }
            },
            "indexingEncryptedStoresOrItemsBlocked": {
              "description": "This switch is for the Windows Search Indexer, to allow or disallow indexing of items",
              "type": "boolean"
            },
            "smbAutoEncryptedFileExtensions": {
              "description": "Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary",
              "type": "array",
              "items": { }
            },
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "protectedAppLockerFiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLockerFile"
              }
            },
            "exemptAppLockerFiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLockerFile"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mdmWindowsInformationProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtection"
        },
        {
          "title": "mdmWindowsInformationProtectionPolicy",
          "description": "Policy for Windows information protection with MDM",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.windowsInformationProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtection"
        },
        {
          "title": "windowsInformationProtectionPolicy",
          "description": "Policy for Windows information protection without MDM",
          "type": "object",
          "properties": {
            "revokeOnMdmHandoffDisabled": {
              "description": "New property in RS2, pending documentation",
              "type": "boolean"
            },
            "mdmEnrollmentUrl": {
              "description": "Enrollment url for the MDM",
              "type": "string"
            },
            "windowsHelloForBusinessBlocked": {
              "description": "Boolean value that sets Windows Hello for Business as a method for signing into Windows.",
              "type": "boolean"
            },
            "pinMinimumLength": {
              "format": "int32",
              "description": "Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinUppercaseLetters": {
              "description": "Integer value that configures the use of uppercase letters in the Windows Hello for Business PIN. Default is NotAllow."
            },
            "pinLowercaseLetters": {
              "description": "Integer value that configures the use of lowercase letters in the Windows Hello for Business PIN. Default is NotAllow."
            },
            "pinSpecialCharacters": {
              "description": "Integer value that configures the use of special characters in the Windows Hello for Business PIN. Valid special characters for Windows Hello for Business PIN gestures include: ! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~. Default is NotAllow."
            },
            "pinExpirationDays": {
              "format": "int32",
              "description": "Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "numberOfPastPinsRemembered": {
              "format": "int32",
              "description": "Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMaximumAttemptCount": {
              "format": "int32",
              "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minutesOfInactivityBeforeDeviceLock": {
              "format": "int32",
              "description": "Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppStatus",
          "description": "Represents app protection and configuration status for the organization.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Friendly name of the status report.",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedEBook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedEBook",
          "description": "An abstract class containing the base properties for Managed eBook.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the eBook.",
              "type": "string"
            },
            "description": {
              "description": "Description.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher.",
              "type": "string"
            },
            "publishedDateTime": {
              "format": "date-time",
              "description": "The date and time when the eBook was published.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "largeCover": {
              "description": "Book cover."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time when the eBook file was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time when teh eBook was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "informationUrl": {
              "description": "The more information Url.",
              "type": "string"
            },
            "privacyInformationUrl": {
              "description": "The privacy statement Url.",
              "type": "string"
            },
            "groupAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.eBookGroupAssignment"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedEBookAssignment"
              }
            },
            "installSummary": { },
            "deviceStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceInstallState"
              }
            },
            "userStateSummary": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.userInstallStateSummary"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppGroupAssignment",
          "description": "Contains properties used to assign a mobile app to a group.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The Id of the AAD group we are targeting the mobile app to.",
              "type": "string"
            },
            "vpnConfigurationId": {
              "description": "The Id of the Vpn Profile to apply for this app.",
              "type": "string"
            },
            "installIntent": {
              "description": "The install intent defined by the admin."
            },
            "app": { }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppAssignment",
          "description": "A class containing the properties used for Group Assignment of a Mobile App.",
          "type": "object",
          "properties": {
            "intent": {
              "description": "The install intent defined by the admin."
            },
            "target": {
              "description": "The target group assignment defined by the admin."
            },
            "settings": {
              "description": "The settings for target assignment defined by the admin."
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppInstallSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppInstallSummary",
          "description": "Contains properties for the installation summary of a mobile app.",
          "type": "object",
          "properties": {
            "installedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have successfully installed this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have failed to install this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that are not applicable for this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that does not have this app installed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pendingInstallDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have been notified to install this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "installedUserCount": {
              "format": "int32",
              "description": "Number of Users whose devices have all succeeded to install this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedUserCount": {
              "format": "int32",
              "description": "Number of Users that have 1 or more device that failed to install this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableUserCount": {
              "format": "int32",
              "description": "Number of Users whose devices were all not applicable for this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledUserCount": {
              "format": "int32",
              "description": "Number of Users that have 1 or more devices that did not install this app.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pendingInstallUserCount": {
              "format": "int32",
              "description": "Number of Users that have 1 or more device that have been notified to install this app and have 0 devices with failures.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppInstallStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppInstallStatus",
          "description": "Contains properties for the installation state of a mobile app for a device.",
          "type": "object",
          "properties": {
            "deviceName": {
              "description": "Device name",
              "type": "string"
            },
            "deviceId": {
              "description": "Device ID",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last sync date time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "mobileAppInstallStatusValue": {
              "description": "The install state of the app."
            },
            "errorCode": {
              "format": "int32",
              "description": "The error code for install failures.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "osVersion": {
              "description": "OS Version",
              "type": "string"
            },
            "osDescription": {
              "description": "OS Description",
              "type": "string"
            },
            "userName": {
              "description": "Device User Name",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "User Principal Name",
              "type": "string"
            },
            "displayVersion": {
              "description": "Human readable version of the application",
              "type": "string"
            },
            "app": { }
          }
        }
      ]
    },
    "microsoft.graph.userAppInstallStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "userAppInstallStatus",
          "description": "Contains properties for the installation status for a user.",
          "type": "object",
          "properties": {
            "userName": {
              "description": "User name.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "User Principal Name.",
              "type": "string"
            },
            "installedDeviceCount": {
              "format": "int32",
              "description": "Installed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Failed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Not installed device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "app": { },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppInstallStatus"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceAndAppManagementAssignmentTarget": {
      "title": "deviceAndAppManagementAssignmentTarget",
      "type": "object"
    },
    "microsoft.graph.mobileAppAssignmentSettings": {
      "title": "mobileAppAssignmentSettings",
      "type": "object"
    },
    "microsoft.graph.mobileAppContentFile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppContentFile",
          "description": "Contains properties for a single installer file that is associated with a given mobileAppContent version.",
          "type": "object",
          "properties": {
            "azureStorageUri": {
              "description": "The Azure Storage URI.",
              "type": "string"
            },
            "isCommitted": {
              "description": "A value indicating whether the file is committed.",
              "type": "boolean"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The time the file was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "description": "the file name.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The size of the file prior to encryption.",
              "type": "integer"
            },
            "sizeEncrypted": {
              "format": "int64",
              "description": "The size of the file after encryption.",
              "type": "integer"
            },
            "azureStorageUriExpirationDateTime": {
              "format": "date-time",
              "description": "The time the Azure storage Uri expires.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "manifest": {
              "format": "base64url",
              "description": "The manifest information.",
              "type": "string"
            },
            "uploadState": {
              "description": "The state of the current upload request."
            }
          }
        }
      ]
    },
    "microsoft.graph.fileEncryptionInfo": {
      "title": "fileEncryptionInfo",
      "type": "object",
      "properties": {
        "encryptionKey": {
          "format": "base64url",
          "description": "The key used to encrypt the file content.",
          "type": "string"
        },
        "initializationVector": {
          "format": "base64url",
          "description": "The initialization vector used for the encryption algorithm.",
          "type": "string"
        },
        "mac": {
          "format": "base64url",
          "description": "The hash of the encrypted file content + IV (content hash).",
          "type": "string"
        },
        "macKey": {
          "format": "base64url",
          "description": "The key used to get mac.",
          "type": "string"
        },
        "profileIdentifier": {
          "description": "The the profile identifier.",
          "type": "string"
        },
        "fileDigest": {
          "format": "base64url",
          "description": "The file digest prior to encryption.",
          "type": "string"
        },
        "fileDigestAlgorithm": {
          "description": "The file digest algorithm.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.mobileAppProvisioningConfigGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppProvisioningConfigGroupAssignment",
          "description": "Contains the properties used to assign an App provisioning configuration to a group.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The ID of the AAD group in which the app provisioning configuration is being targeted.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosLobAppProvisioningConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "iosLobAppProvisioningConfigurationAssignment",
          "description": "A class containing the properties used for Group Assignment of an iOS LOB App Provisioning and Configuration.",
          "type": "object",
          "properties": {
            "target": {
              "description": "The target group assignment defined by the admin."
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationDeviceStatus",
          "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "platform": {
              "format": "int32",
              "description": "Platform of the device that is being reported",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationUserStatus",
          "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mdmAppConfigGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mdmAppConfigGroupAssignment",
          "description": "Contains the properties used to assign an MDM app configuration to a group.",
          "type": "object",
          "properties": {
            "appConfiguration": {
              "description": "The navigation link to the mdm app Configuration being targeted.",
              "type": "string"
            },
            "targetGroupId": {
              "description": "The Id of the AAD group we are targeting the mdm app configuration to.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationAssignment",
          "description": "Contains the properties used to assign an MDM app configuration to a group.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Assignment target that the T&C policy is assigned to."
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationDeviceSummary",
          "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationUserSummary",
          "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppVppGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppGroupAssignment"
        },
        {
          "title": "mobileAppVppGroupAssignment",
          "description": "Contains properties used to assign a Vpp mobile app to a group.",
          "type": "object",
          "properties": {
            "useDeviceLicensing": {
              "description": "Whether or not to use device licensing.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.allLicensedUsersAssignmentTarget": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        {
          "title": "allLicensedUsersAssignmentTarget",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.groupAssignmentTarget": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        {
          "title": "groupAssignmentTarget",
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The group Id that is the target of the assignment.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.exclusionGroupAssignmentTarget": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.groupAssignmentTarget"
        },
        {
          "title": "exclusionGroupAssignmentTarget",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.allDevicesAssignmentTarget": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        {
          "title": "allDevicesAssignmentTarget",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.iosLobAppAssignmentSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppAssignmentSettings"
        },
        {
          "title": "iosLobAppAssignmentSettings",
          "type": "object",
          "properties": {
            "vpnConfigurationId": {
              "description": "The VPN Configuration Id to apply for this app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosStoreAppAssignmentSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppAssignmentSettings"
        },
        {
          "title": "iosStoreAppAssignmentSettings",
          "type": "object",
          "properties": {
            "vpnConfigurationId": {
              "description": "The VPN Configuration Id to apply for this app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosVppAppAssignmentSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppAssignmentSettings"
        },
        {
          "title": "iosVppAppAssignmentSettings",
          "type": "object",
          "properties": {
            "useDeviceLicensing": {
              "description": "Whether or not to use device licensing.",
              "type": "boolean"
            },
            "vpnConfigurationId": {
              "description": "The VPN Configuration Id to apply for this app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.microsoftStoreForBusinessAppAssignmentSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppAssignmentSettings"
        },
        {
          "title": "microsoftStoreForBusinessAppAssignmentSettings",
          "type": "object",
          "properties": {
            "useDeviceContext": {
              "description": "Whether or not to use device execution context for Microsoft Store for Business mobile app.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSOfficeSuiteApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "macOSOfficeSuiteApp",
          "description": "Contains properties and inherited properties for the MacOS Office Suite App.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.officeSuiteApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "officeSuiteApp",
          "description": "Contains properties and inherited properties for the Office365 Suite App.",
          "type": "object",
          "properties": {
            "autoAcceptEula": {
              "description": "The value to accept the EULA automatically on the enduser's device.",
              "type": "boolean"
            },
            "productIds": {
              "description": "The Product Ids that represent the Office365 Suite SKU.",
              "type": "array",
              "items": { }
            },
            "excludedApps": {
              "description": "The property to represent the Apps which are excluded from the selected Office365 Product Id."
            },
            "useSharedComputerActivation": {
              "description": "The property to represent that whether the shared computer activation is used not for Office365 App Suite.",
              "type": "boolean"
            },
            "updateChannel": {
              "description": "The property to represent the Office365 Update Channel."
            },
            "officePlatformArchitecture": {
              "description": "The property to represent the Office365 App Suite version."
            },
            "localesToInstall": {
              "description": "The property to represent the locales which are installed when the Apps from Office365 is installed. It uses standard RFC 6033. Ref: https://technet.microsoft.com/en-us/library/cc179219(v=office.16).aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installProgressDisplayLevel": {
              "description": "to specify the level of display for the Installation Progress Setup UI on the Device."
            }
          }
        }
      ]
    },
    "microsoft.graph.excludedApps": {
      "title": "excludedApps",
      "type": "object",
      "properties": {
        "access": {
          "description": "The value for if MS Office Access should be excluded or not.",
          "type": "boolean"
        },
        "excel": {
          "description": "The value for if MS Office Excel should be excluded or not.",
          "type": "boolean"
        },
        "groove": {
          "description": "The value for if MS Office OneDrive for Business - Groove should be excluded or not.",
          "type": "boolean"
        },
        "infoPath": {
          "description": "The value for if MS Office InfoPath should be excluded or not.",
          "type": "boolean"
        },
        "lync": {
          "description": "The value for if MS Office Skype for Business - Lync should be excluded or not.",
          "type": "boolean"
        },
        "oneDrive": {
          "description": "The value for if MS Office OneDrive should be excluded or not.",
          "type": "boolean"
        },
        "oneNote": {
          "description": "The value for if MS Office OneNote should be excluded or not.",
          "type": "boolean"
        },
        "outlook": {
          "description": "The value for if MS Office Outlook should be excluded or not.",
          "type": "boolean"
        },
        "powerPoint": {
          "description": "The value for if MS Office PowerPoint should be excluded or not.",
          "type": "boolean"
        },
        "publisher": {
          "description": "The value for if MS Office Publisher should be excluded or not.",
          "type": "boolean"
        },
        "sharePointDesigner": {
          "description": "The value for if MS Office SharePointDesigner should be excluded or not.",
          "type": "boolean"
        },
        "visio": {
          "description": "The value for if MS Office Visio should be excluded or not.",
          "type": "boolean"
        },
        "word": {
          "description": "The value for if MS Office Word should be excluded or not.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.managedApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "managedApp",
          "description": "Abstract class that contains properties and inherited properties for apps that you can manage with an Intune app protection policy.",
          "type": "object",
          "properties": {
            "appAvailability": {
              "description": "The Application's availability."
            },
            "version": {
              "description": "The Application's version.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAndroidStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedAndroidStoreApp",
          "description": "Contains properties and inherited properties for Android store apps that you can manage with an Intune app protection policy.",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The app's package ID.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Android AppStoreUrl.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.androidMinimumOperatingSystem"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidMinimumOperatingSystem": {
      "title": "androidMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v4_0": {
          "description": "Version 4.0 or later.",
          "type": "boolean"
        },
        "v4_0_3": {
          "description": "Version 4.0.3 or later.",
          "type": "boolean"
        },
        "v4_1": {
          "description": "Version 4.1 or later.",
          "type": "boolean"
        },
        "v4_2": {
          "description": "Version 4.2 or later.",
          "type": "boolean"
        },
        "v4_3": {
          "description": "Version 4.3 or later.",
          "type": "boolean"
        },
        "v4_4": {
          "description": "Version 4.4 or later.",
          "type": "boolean"
        },
        "v5_0": {
          "description": "Version 5.0 or later.",
          "type": "boolean"
        },
        "v5_1": {
          "description": "Version 5.1 or later.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.managedIOSStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedIOSStoreApp",
          "description": "Contains properties and inherited properties for an iOS store app that you can manage with an Intune app protection policy.",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The app's Bundle ID.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Apple AppStoreUrl.",
              "type": "string"
            },
            "applicableDeviceType": {
              "$ref": "#/definitions/microsoft.graph.iosDeviceType"
            },
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.iosMinimumOperatingSystem"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosDeviceType": {
      "title": "iosDeviceType",
      "type": "object",
      "properties": {
        "iPad": {
          "description": "Whether the app should run on iPads.",
          "type": "boolean"
        },
        "iPhoneAndIPod": {
          "description": "Whether the app should run on iPhones and iPods.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.iosMinimumOperatingSystem": {
      "title": "iosMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v8_0": {
          "description": "Version 8.0 or later.",
          "type": "boolean"
        },
        "v9_0": {
          "description": "Version 9.0 or later.",
          "type": "boolean"
        },
        "v10_0": {
          "description": "Version 10.0 or later.",
          "type": "boolean"
        },
        "v11_0": {
          "description": "Version 11.0 or later.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.managedMobileLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedMobileLobApp",
          "description": "An abstract base class containing properties for all managed mobile line of business apps.",
          "type": "object",
          "properties": {
            "committedContentVersion": {
              "description": "The internal committed content version.",
              "type": "string"
            },
            "fileName": {
              "description": "The name of the main Lob application file.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The total size, including all uploaded files.",
              "type": "integer"
            },
            "identityVersion": {
              "description": "The identity version.",
              "type": "string"
            },
            "contentVersions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContent"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppContent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppContent",
          "description": "Contains content properties for a specific app version. Each mobileAppContent can have multiple mobileAppContentFile.",
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContentFile"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAndroidLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedMobileLobApp"
        },
        {
          "title": "managedAndroidLobApp",
          "description": "Contains properties and inherited properties for Managed Android Line Of Business apps.",
          "type": "object",
          "properties": {
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "versionName": {
              "description": "The version name of managed Android Line of Business (LoB) app.",
              "type": "string"
            },
            "versionCode": {
              "description": "The version code of managed Android Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedIOSLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedMobileLobApp"
        },
        {
          "title": "managedIOSLobApp",
          "description": "Contains properties and inherited properties for Managed iOS Line Of Business apps.",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "applicableDeviceType": {
              "$ref": "#/definitions/microsoft.graph.iosDeviceType"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "versionNumber": {
              "description": "The version number of managed iOS Line of Business (LoB) app.",
              "type": "string"
            },
            "buildNumber": {
              "description": "The build number of managed iOS Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "mobileLobApp",
          "description": "An abstract base class containing properties for all mobile line of business apps.",
          "type": "object",
          "properties": {
            "committedContentVersion": {
              "description": "The internal committed content version.",
              "type": "string"
            },
            "fileName": {
              "description": "The name of the main Lob application file.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The total size, including all uploaded files.",
              "type": "integer"
            },
            "identityVersion": {
              "description": "The identity version.",
              "type": "string"
            },
            "contentVersions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContent"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsMobileMSI": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsMobileMSI",
          "description": "Contains properties and inherited properties for Windows Mobile MSI Line Of Business apps.",
          "type": "object",
          "properties": {
            "commandLine": {
              "description": "The command line.",
              "type": "string"
            },
            "productCode": {
              "description": "The product code.",
              "type": "string"
            },
            "productVersion": {
              "description": "The product version of Windows Mobile MSI Line of Business (LoB) app.",
              "type": "string"
            },
            "ignoreVersionDetection": {
              "description": "A boolean to control whether the app's version will be used to detect the app after it is installed on a device. Set this to true for Windows Mobile MSI Line of Business (LoB) apps that use a self update feature.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81AppX": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsPhone81AppX",
          "description": "Contains properties and inherited properties for Windows Phone 8.1 AppX Line Of Business apps.",
          "type": "object",
          "properties": {
            "applicableArchitectures": {
              "description": "The Windows architecture(s) for which this app can run on."
            },
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "identityPublisherHash": {
              "description": "The Identity Publisher Hash.",
              "type": "string"
            },
            "identityResourceIdentifier": {
              "description": "The Identity Resource Identifier.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.windowsMinimumOperatingSystem"
            },
            "phoneProductIdentifier": {
              "description": "The Phone Product Identifier.",
              "type": "string"
            },
            "phonePublisherId": {
              "description": "The Phone Publisher Id.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsMinimumOperatingSystem": {
      "title": "windowsMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v8_0": {
          "description": "Windows version 8.0 or later.",
          "type": "boolean"
        },
        "v8_1": {
          "description": "Windows version 8.1 or later.",
          "type": "boolean"
        },
        "v10_0": {
          "description": "Windows version 10.0 or later.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.windowsPhone81AppXBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsPhone81AppX"
        },
        {
          "title": "windowsPhone81AppXBundle",
          "description": "Contains properties and inherited properties for Windows Phone 8.1 AppX Bundle Line Of Business apps.",
          "type": "object",
          "properties": {
            "appXPackageInformationList": {
              "description": "The list of AppX Package Information.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPackageInformation": {
      "title": "windowsPackageInformation",
      "type": "object",
      "properties": {
        "applicableArchitecture": {
          "description": "The Windows architecture for which this app can run on."
        },
        "displayName": {
          "description": "The Display Name.",
          "type": "string"
        },
        "identityName": {
          "description": "The Identity Name.",
          "type": "string"
        },
        "identityPublisher": {
          "description": "The Identity Publisher.",
          "type": "string"
        },
        "identityResourceIdentifier": {
          "description": "The Identity Resource Identifier.",
          "type": "string"
        },
        "identityVersion": {
          "description": "The Identity Version.",
          "type": "string"
        },
        "minimumSupportedOperatingSystem": {
          "description": "The value for the minimum applicable operating system."
        }
      }
    },
    "microsoft.graph.windowsUniversalAppX": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsUniversalAppX",
          "description": "Contains properties and inherited properties for Windows Universal AppX Line Of Business apps.",
          "type": "object",
          "properties": {
            "applicableArchitectures": {
              "description": "The Windows architecture(s) for which this app can run on."
            },
            "applicableDeviceTypes": {
              "description": "The Windows device type(s) for which this app can run on."
            },
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "identityPublisherHash": {
              "description": "The Identity Publisher Hash.",
              "type": "string"
            },
            "identityResourceIdentifier": {
              "description": "The Identity Resource Identifier.",
              "type": "string"
            },
            "isBundle": {
              "description": "Whether or not the app is a bundle.",
              "type": "boolean"
            },
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.windowsMinimumOperatingSystem"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsAppX": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsAppX",
          "description": "Contains properties and inherited properties for Windows AppX Line Of Business apps.",
          "type": "object",
          "properties": {
            "applicableArchitectures": {
              "description": "The Windows architecture(s) for which this app can run on."
            },
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "identityPublisherHash": {
              "description": "The Identity Publisher Hash.",
              "type": "string"
            },
            "identityResourceIdentifier": {
              "description": "The Identity Resource Identifier.",
              "type": "string"
            },
            "isBundle": {
              "description": "Whether or not the app is a bundle.",
              "type": "boolean"
            },
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.windowsMinimumOperatingSystem"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhoneXAP": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsPhoneXAP",
          "description": "Contains properties and inherited properties for Windows Phone XAP Line Of Business apps.",
          "type": "object",
          "properties": {
            "minimumSupportedOperatingSystem": {
              "$ref": "#/definitions/microsoft.graph.windowsMinimumOperatingSystem"
            },
            "productIdentifier": {
              "description": "The Product Identifier.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "androidLobApp",
          "description": "Contains properties and inherited properties for Android Line Of Business apps.",
          "type": "object",
          "properties": {
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "versionName": {
              "description": "The version name of Android Line of Business (LoB) app.",
              "type": "string"
            },
            "versionCode": {
              "description": "The version code of Android Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "iosLobApp",
          "description": "Contains properties and inherited properties for iOS Line Of Business apps.",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "applicableDeviceType": {
              "$ref": "#/definitions/microsoft.graph.iosDeviceType"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "versionNumber": {
              "description": "The version number of iOS Line of Business (LoB) app.",
              "type": "string"
            },
            "buildNumber": {
              "description": "The build number of iOS Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "androidForWorkApp",
          "description": "Contains properties and inherited properties for Android for Work (AFW) Apps.",
          "type": "object",
          "properties": {
            "appIdentifier": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "usedLicenseCount": {
              "format": "int32",
              "description": "The number of VPP licenses in use.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "The total number of VPP licenses.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "appStoreUrl": {
              "description": "The Play for Work Store app URL.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.microsoftStoreForBusinessApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "microsoftStoreForBusinessApp",
          "description": "Microsoft Store for Business Apps. This class does not support Create, Delete, or Update.",
          "type": "object",
          "properties": {
            "usedLicenseCount": {
              "format": "int32",
              "description": "The number of Microsoft Store for Business licenses in use.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "The total number of Microsoft Store for Business licenses.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "productKey": {
              "description": "The app product key",
              "type": "string"
            },
            "licenseType": {
              "description": "The app license type"
            },
            "packageIdentityName": {
              "description": "The app package identifier",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.webApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "webApp",
          "description": "Contains properties and inherited properties for web apps.",
          "type": "object",
          "properties": {
            "appUrl": {
              "description": "The web app URL.",
              "type": "string"
            },
            "useManagedBrowser": {
              "description": "Whether or not to use managed browser. This property is only applicable for Android and IOS.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81StoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "windowsPhone81StoreApp",
          "description": "Contains properties and inherited properties for Windows Phone 8.1 Store apps.",
          "type": "object",
          "properties": {
            "appStoreUrl": {
              "description": "The Windows Phone 8.1 app store URL.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "windowsStoreApp",
          "description": "Contains properties and inherited properties for Windows Store apps.",
          "type": "object",
          "properties": {
            "appStoreUrl": {
              "description": "The Windows app store URL.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "androidStoreApp",
          "description": "Contains properties and inherited properties for Android store apps.",
          "type": "object",
          "properties": {
            "appIdentifier": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Android app store URL.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            }
          }
        }
      ]
    },
    "microsoft.graph.iosVppApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "iosVppApp",
          "description": "Contains properties and inherited properties for iOS Volume-Purchased Program (VPP) Apps.",
          "type": "object",
          "properties": {
            "usedLicenseCount": {
              "format": "int32",
              "description": "The number of VPP licenses in use.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "The total number of VPP licenses.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "releaseDateTime": {
              "format": "date-time",
              "description": "The VPP application release date and time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The store URL.",
              "type": "string"
            },
            "licensingType": {
              "description": "The supported License Type."
            },
            "applicableDeviceType": {
              "description": "The applicable iOS Device Type."
            },
            "vppTokenOrganizationName": {
              "description": "The organization associated with the Apple Volume Purchase Program Token",
              "type": "string"
            },
            "vppTokenAccountType": {
              "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
            },
            "vppTokenAppleId": {
              "description": "The Apple Id associated with the given Apple Volume Purchase Program Token.",
              "type": "string"
            },
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "vppToken": { }
          }
        }
      ]
    },
    "microsoft.graph.vppLicensingType": {
      "title": "vppLicensingType",
      "type": "object",
      "properties": {
        "supportUserLicensing": {
          "description": "Whether the program supports the user licensing type.",
          "type": "boolean"
        },
        "supportDeviceLicensing": {
          "description": "Whether the program supports the device licensing type.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.iosStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "iosStoreApp",
          "description": "Contains properties and inherited properties for iOS store apps.",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Apple App Store URL",
              "type": "string"
            },
            "applicableDeviceType": {
              "$ref": "#/definitions/microsoft.graph.iosDeviceType"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            }
          }
        }
      ]
    },
    "microsoft.graph.appReportingOverviewStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "appReportingOverviewStatus",
          "description": "Class for reporting status of all mobile apps.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.appInstallationFailure": {
      "title": "appInstallationFailure",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "Key of the entity.",
          "type": "string"
        },
        "appName": {
          "description": "The name of the App",
          "type": "string"
        },
        "platformId": {
          "format": "int64",
          "description": "The platform ID for the App",
          "type": "integer"
        },
        "userFailures": {
          "format": "int64",
          "description": "The number of users in failure for this App.",
          "type": "integer"
        },
        "deviceFailures": {
          "format": "int64",
          "description": "The number of devices in failure for this App.",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.androidForWorkMobileAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
        },
        {
          "title": "androidForWorkMobileAppConfiguration",
          "description": "Contains properties, inherited properties and actions for AFW mobile app configurations.",
          "type": "object",
          "properties": {
            "packageName": {
              "description": "Android For Work app configuration package name.",
              "type": "string"
            },
            "payloadJson": {
              "description": "Android For Work app configuration JSON payload.",
              "type": "string"
            },
            "permissionActions": {
              "description": "List of Android app permissions and corresponding permission actions.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidPermissionAction": {
      "title": "androidPermissionAction",
      "type": "object",
      "properties": {
        "permission": {
          "description": "Android permission string, defined in the official Android documentation.  Example 'android.permission.READ_CONTACTS'.",
          "type": "string"
        },
        "action": {
          "description": "Type of Android permission action."
        }
      }
    },
    "microsoft.graph.iosMobileAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
        },
        {
          "title": "iosMobileAppConfiguration",
          "description": "Contains properties, inherited properties and actions for iOS mobile app configurations.",
          "type": "object",
          "properties": {
            "settingXml": {
              "description": "mdm app configuration.",
              "type": "string"
            },
            "settings": {
              "description": "app configuration setting items.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.appConfigurationSettingItem": {
      "title": "appConfigurationSettingItem",
      "type": "object",
      "properties": {
        "appConfigKey": {
          "description": "app configuration key.",
          "type": "string"
        },
        "appConfigKeyType": {
          "description": "app configuration key type."
        },
        "appConfigKeyValue": {
          "description": "app configuration key value.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.termsAndConditionsGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditionsGroupAssignment",
          "description": "A termsAndConditionsGroupAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "Unique identifier of a group that the T&C policy is assigned to.",
              "type": "string"
            },
            "termsAndConditions": { }
          }
        }
      ]
    },
    "microsoft.graph.termsAndConditionsAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditionsAssignment",
          "description": "A termsAndConditionsAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Assignment target that the T&C policy is assigned to."
            }
          }
        }
      ]
    },
    "microsoft.graph.termsAndConditionsAcceptanceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditionsAcceptanceStatus",
          "description": "A termsAndConditionsAcceptanceStatus entity represents the acceptance status of a given Terms and Conditions (T&C) policy by a given user. Users must accept the most up-to-date version of the terms in order to retain access to the Company Portal.",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "Display name of the user whose acceptance the entity represents.",
              "type": "string"
            },
            "acceptedVersion": {
              "format": "int32",
              "description": "Most recent version number of the T&C accepted by the user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "acceptedDateTime": {
              "format": "date-time",
              "description": "DateTime when the terms were last accepted by the user.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "termsAndConditions": { }
          }
        }
      ]
    },
    "microsoft.graph.importedDeviceIdentityResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.importedDeviceIdentity"
        },
        {
          "title": "importedDeviceIdentityResult",
          "description": "The importedDeviceIdentityResult resource represents the result of attempting to import a device identity.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of imported device identity",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.importedAppleDeviceIdentityResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.importedAppleDeviceIdentity"
        },
        {
          "title": "importedAppleDeviceIdentityResult",
          "description": "The importedAppleDeviceIdentityResult resource represents the result of attempting to import Apple devices identities.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of imported device identity",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.depEnrollmentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.enrollmentProfile"
        },
        {
          "title": "depEnrollmentProfile",
          "description": "The depEnrollmentProfile resource represents an Apple Device Enrollment Program (DEP) enrollment profile. This type of profile must be assigned to Apple DEP serial numbers before the corresponding devices can enroll via DEP.",
          "type": "object",
          "properties": {
            "supervisedModeEnabled": {
              "description": "Supervised mode, True to enable, false otherwise. See https://docs.microsoft.com/en-us/intune/deploy-use/enroll-devices-in-microsoft-intune for additional information.",
              "type": "boolean"
            },
            "supportDepartment": {
              "description": "Support department information",
              "type": "string"
            },
            "passCodeDisabled": {
              "description": "Indicates if Passcode setup pane is disabled",
              "type": "boolean"
            },
            "isMandatory": {
              "description": "Indicates if the profile is mandatory",
              "type": "boolean"
            },
            "locationDisabled": {
              "description": "Indicates if Location service setup pane is disabled",
              "type": "boolean"
            },
            "supportPhoneNumber": {
              "description": "Support phone number",
              "type": "string"
            },
            "iTunesPairingMode": {
              "description": "Indicates the iTunes pairing mode"
            },
            "profileRemovalDisabled": {
              "description": "Indicates if the profile removal option is disabled",
              "type": "boolean"
            },
            "managementCertificates": {
              "description": "Management certificates for Apple Configurator",
              "type": "array",
              "items": { }
            },
            "restoreBlocked": {
              "description": "Indicates if Restore setup pane is blocked",
              "type": "boolean"
            },
            "restoreFromAndroidDisabled": {
              "description": "Indicates if Restore from Android is disabled",
              "type": "boolean"
            },
            "appleIdDisabled": {
              "description": "Indicates if Apple id setup pane is disabled",
              "type": "boolean"
            },
            "termsAndConditionsDisabled": {
              "description": "Indicates if 'Terms and Conditions' setup pane is disabled",
              "type": "boolean"
            },
            "touchIdDisabled": {
              "description": "Indicates if touch id setup pane is disabled",
              "type": "boolean"
            },
            "applePayDisabled": {
              "description": "Indicates if Apple pay setup pane is disabled",
              "type": "boolean"
            },
            "zoomDisabled": {
              "description": "Indicates if zoom setup pane is disabled",
              "type": "boolean"
            },
            "siriDisabled": {
              "description": "Indicates if siri setup pane is disabled",
              "type": "boolean"
            },
            "diagnosticsDisabled": {
              "description": "Indicates if diagnostics setup pane is disabled",
              "type": "boolean"
            },
            "macOSRegistrationDisabled": {
              "description": "Indicates if Mac OS registration is disabled",
              "type": "boolean"
            },
            "macOSFileVaultDisabled": {
              "description": "Indicates if Mac OS file vault is disabled",
              "type": "boolean"
            },
            "awaitDeviceConfiguredConfirmation": {
              "description": "Indicates if the device will need to wait for configured confirmation",
              "type": "boolean"
            },
            "sharedIPadMaximumUserCount": {
              "format": "int32",
              "description": "This specifies the maximum number of users that can use a shared iPad. Only applicable in shared iPad mode.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enableSharedIPad": {
              "description": "This indicates whether the device is to be enrolled in a mode which enables multi user scenarios. Only applicable in shared iPads.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.managementCertificateWithThumbprint": {
      "title": "managementCertificateWithThumbprint",
      "type": "object",
      "properties": {
        "thumbprint": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.deviceManagementScriptGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementScriptGroupAssignment",
          "description": "Contains properties used to assign a device management script to a group.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The Id of the Azure Active Directory group we are targeting the script to.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.runSchedule": {
      "title": "runSchedule",
      "type": "object"
    },
    "microsoft.graph.deviceManagementScriptRunSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementScriptRunSummary",
          "description": "Contains properties for the run summary of a device management script.",
          "type": "object",
          "properties": {
            "successDeviceCount": {
              "format": "int32",
              "description": "Success device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Error device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successUserCount": {
              "format": "int32",
              "description": "Success user count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorUserCount": {
              "format": "int32",
              "description": "Error user count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementScriptDeviceState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementScriptDeviceState",
          "description": "Contains properties for device run state of the device management script.",
          "type": "object",
          "properties": {
            "runState": {
              "description": "State of latest run of the device management script."
            },
            "resultMessage": {
              "description": "Details of execution output.",
              "type": "string"
            },
            "lastStateUpdateDateTime": {
              "format": "date-time",
              "description": "Latest time the device management script executes.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "errorCode": {
              "format": "int32",
              "description": "Error code corresponding to erroneous execution of the device management script.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDescription": {
              "description": "Error description corresponding to erroneous execution of the device management script.",
              "type": "string"
            },
            "managedDevice": { }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementScriptUserState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementScriptUserState",
          "description": "Contains properties for user run state of the device management script.",
          "type": "object",
          "properties": {
            "successDeviceCount": {
              "format": "int32",
              "description": "Success device count for specific user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Error device count for specific user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "userPrincipalName": {
              "description": "User principle name of specific user.",
              "type": "string"
            },
            "deviceRunStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementScriptDeviceState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationState",
          "description": "Device Configuration State for a given device.",
          "type": "object",
          "properties": {
            "settingStates": {
              "type": "array",
              "items": { }
            },
            "displayName": {
              "description": "The name of the policy for this policyBase",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "The version of the policy",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "platformType": {
              "description": "Platform type that the policy applies to"
            },
            "state": {
              "description": "The compliance state of the policy"
            },
            "settingCount": {
              "format": "int32",
              "description": "Count of how many setting a policy holds",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.hardwareInformation": {
      "title": "hardwareInformation",
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "Serial number.",
          "type": "string"
        },
        "totalStorageSpace": {
          "format": "int64",
          "description": "Total storage space of the device.",
          "type": "integer"
        },
        "freeStorageSpace": {
          "format": "int64",
          "description": "Free storage space of the device.",
          "type": "integer"
        },
        "imei": {
          "description": "IMEI",
          "type": "string"
        },
        "meid": {
          "description": "MEID",
          "type": "string"
        },
        "manufacturer": {
          "description": "Manufacturer of the device",
          "type": "string"
        },
        "model": {
          "description": "Model of the device",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the device",
          "type": "string"
        },
        "subscriberCarrier": {
          "description": "Subscriber carrier of the device",
          "type": "string"
        },
        "cellularTechnology": {
          "description": "Cellular technology of the device",
          "type": "string"
        },
        "wifiMac": {
          "description": "WiFi MAC address of the device",
          "type": "string"
        },
        "operatingSystemLanguage": {
          "description": "Operating system language of the device",
          "type": "string"
        },
        "isSupervised": {
          "description": "Supervised mode of the device",
          "type": "boolean"
        },
        "isEncrypted": {
          "description": "Encryption status of the device",
          "type": "boolean"
        },
        "isSharedDevice": {
          "description": "Shared iPad",
          "type": "boolean"
        },
        "sharedDeviceCachedUsers": {
          "description": "All users on the shared Apple device",
          "type": "array",
          "items": { }
        },
        "tpmSpecificationVersion": {
          "description": "String that specifies the specification version.",
          "type": "string"
        },
        "operatingSystemEdition": {
          "description": "String that specifies the OS edition.",
          "type": "string"
        },
        "deviceFullQualifiedDomainName": {
          "description": "Returns the fully qualified domain name of the device (if any). If the device is not domain-joined, it returns an empty string. ",
          "type": "string"
        },
        "deviceGuardVirtualizationBasedSecurityHardwareRequirementState": {
          "description": "Virtualization-based security hardware requirement status."
        },
        "deviceGuardVirtualizationBasedSecurityState": {
          "description": "Virtualization-based security status. "
        },
        "deviceGuardLocalSystemAuthorityCredentialGuardState": {
          "description": "Local System Authority (LSA) credential guard status. "
        }
      }
    },
    "microsoft.graph.sharedAppleDeviceUser": {
      "title": "sharedAppleDeviceUser",
      "type": "object",
      "properties": {
        "userPrincipalName": {
          "description": "User name",
          "type": "string"
        },
        "dataToSync": {
          "description": "Data to sync",
          "type": "boolean"
        },
        "dataQuota": {
          "format": "int64",
          "description": "Data quota",
          "type": "integer"
        },
        "dataUsed": {
          "format": "int64",
          "description": "Data quota",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.deviceActionResult": {
      "title": "deviceActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.configurationManagerClientEnabledFeatures": {
      "title": "configurationManagerClientEnabledFeatures",
      "type": "object",
      "properties": {
        "inventory": {
          "description": "Whether inventory is managed by Intune",
          "type": "boolean"
        },
        "modernApps": {
          "description": "Whether modern application is managed by Intune",
          "type": "boolean"
        },
        "resourceAccess": {
          "description": "Whether resource access is managed by Intune",
          "type": "boolean"
        },
        "deviceConfiguration": {
          "description": "Whether device configuration is managed by Intune",
          "type": "boolean"
        },
        "compliancePolicy": {
          "description": "Whether compliance policy is managed by Intune",
          "type": "boolean"
        },
        "windowsUpdateForBusiness": {
          "description": "Whether Windows Update for Business is managed by Intune",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.deviceHealthAttestationState": {
      "title": "deviceHealthAttestationState",
      "type": "object",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The Timestamp of the last update.",
          "type": "string"
        },
        "contentNamespaceUrl": {
          "description": "The DHA report version. (Namespace version)",
          "type": "string"
        },
        "deviceHealthAttestationStatus": {
          "description": "The DHA report version. (Namespace version)",
          "type": "string"
        },
        "contentVersion": {
          "description": "The HealthAttestation state schema version",
          "type": "string"
        },
        "issuedDateTime": {
          "format": "date-time",
          "description": "The DateTime when device was evaluated or issued to MDM",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "attestationIdentityKey": {
          "description": "TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.",
          "type": "string"
        },
        "resetCount": {
          "format": "int64",
          "description": "The number of times a PC device has hibernated or resumed",
          "type": "integer"
        },
        "restartCount": {
          "format": "int64",
          "description": "The number of times a PC device has rebooted",
          "type": "integer"
        },
        "dataExcutionPolicy": {
          "description": "DEP Policy defines a set of hardware and software technologies that perform additional checks on memory ",
          "type": "string"
        },
        "bitLockerStatus": {
          "description": "On or Off of BitLocker Drive Encryption",
          "type": "string"
        },
        "bootManagerVersion": {
          "description": "The version of the Boot Manager",
          "type": "string"
        },
        "codeIntegrityCheckVersion": {
          "description": "The version of the Boot Manager",
          "type": "string"
        },
        "secureBoot": {
          "description": "When Secure Boot is enabled, the core components must have the correct cryptographic signatures",
          "type": "string"
        },
        "bootDebugging": {
          "description": "When bootDebugging is enabled, the device is used in development and testing",
          "type": "string"
        },
        "operatingSystemKernelDebugging": {
          "description": "When operatingSystemKernelDebugging is enabled, the device is used in development and testing",
          "type": "string"
        },
        "codeIntegrity": {
          "description": " When code integrity is enabled, code execution is restricted to integrity verified code",
          "type": "string"
        },
        "testSigning": {
          "description": "When test signing is allowed, the device does not enforce signature validation during boot",
          "type": "string"
        },
        "safeMode": {
          "description": "Safe mode is a troubleshooting option for Windows that starts your computer in a limited state",
          "type": "string"
        },
        "windowsPE": {
          "description": "Operating system running with limited services that is used to prepare a computer for Windows",
          "type": "string"
        },
        "earlyLaunchAntiMalwareDriverProtection": {
          "description": "ELAM provides protection for the computers in your network when they start up",
          "type": "string"
        },
        "virtualSecureMode": {
          "description": "VSM is a container that protects high value assets from a compromised kernel",
          "type": "string"
        },
        "pcrHashAlgorithm": {
          "description": "Informational attribute that identifies the HASH algorithm that was used by TPM",
          "type": "string"
        },
        "bootAppSecurityVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "bootManagerSecurityVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "tpmVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "pcr0": {
          "description": "The measurement that is captured in PCR[0]",
          "type": "string"
        },
        "secureBootConfigurationPolicyFingerPrint": {
          "description": "Fingerprint of the Custom Secure Boot Configuration Policy",
          "type": "string"
        },
        "codeIntegrityPolicy": {
          "description": "The Code Integrity policy that is controlling the security of the boot environment",
          "type": "string"
        },
        "bootRevisionListInfo": {
          "description": "The Boot Revision List that was loaded during initial boot on the attested device",
          "type": "string"
        },
        "operatingSystemRevListInfo": {
          "description": "The Operating System Revision List that was loaded during initial boot on the attested device",
          "type": "string"
        },
        "healthStatusMismatchInfo": {
          "description": "This attribute appears if DHA-Service detects an integrity issue",
          "type": "string"
        },
        "healthAttestationSupportedStatus": {
          "description": "This attribute indicates if DHA is supported for the device",
          "type": "string"
        }
      }
    },
    "microsoft.graph.windowsProtectionState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsProtectionState",
          "description": "Device protection status entity.",
          "type": "object",
          "properties": {
            "malwareProtectionEnabled": {
              "description": "Anti malware is enabled or not",
              "type": "boolean"
            },
            "deviceState": {
              "description": "Computer's state (like clean or pending full scan or pending reboot etc)"
            },
            "realTimeProtectionEnabled": {
              "description": "Real time protection is enabled or not?",
              "type": "boolean"
            },
            "networkInspectionSystemEnabled": {
              "description": "Network inspection system enabled or not?",
              "type": "boolean"
            },
            "quickScanOverdue": {
              "description": "Quick scan overdue or not?",
              "type": "boolean"
            },
            "fullScanOverdue": {
              "description": "Full scan overdue or not?",
              "type": "boolean"
            },
            "signatureUpdateOverdue": {
              "description": "Signature out of date or not?",
              "type": "boolean"
            },
            "rebootRequired": {
              "description": "Reboot required or not?",
              "type": "boolean"
            },
            "fullScanRequired": {
              "description": "Full scan required or not?",
              "type": "boolean"
            },
            "engineVersion": {
              "description": "Current endpoint protection engine's version",
              "type": "string"
            },
            "signatureVersion": {
              "description": "Current malware definitions version",
              "type": "string"
            },
            "antiMalwareVersion": {
              "description": "Current anti malware version",
              "type": "string"
            },
            "lastQuickScanDateTime": {
              "format": "date-time",
              "description": "Last quick scan datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastFullScanDateTime": {
              "format": "date-time",
              "description": "Last quick scan datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastQuickScanSignatureVersion": {
              "description": "Last quick scan signature version",
              "type": "string"
            },
            "lastFullScanSignatureVersion": {
              "description": "Last full scan signature version",
              "type": "string"
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last device health status reported time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "detectedMalwareState": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsDeviceMalwareState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicyState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyState",
          "description": "Device Compliance Policy State for a given device.",
          "type": "object",
          "properties": {
            "settingStates": {
              "type": "array",
              "items": { }
            },
            "displayName": {
              "description": "The name of the policy for this policyBase",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "The version of the policy",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "platformType": {
              "description": "Platform type that the policy applies to"
            },
            "state": {
              "description": "The compliance state of the policy"
            },
            "settingCount": {
              "format": "int32",
              "description": "Count of how many setting a policy holds",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.bulkManagedDeviceActionResult": {
      "title": "bulkManagedDeviceActionResult",
      "type": "object",
      "properties": {
        "successfulDeviceIds": {
          "description": "Successful devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedDeviceIds": {
          "description": "Failed devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notFoundDeviceIds": {
          "description": "Not found devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notSupportedDeviceIds": {
          "description": "Not supported devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.updateWindowsDeviceAccountActionParameter": {
      "title": "updateWindowsDeviceAccountActionParameter",
      "type": "object",
      "properties": {
        "deviceAccount": { },
        "passwordRotationEnabled": {
          "type": "boolean"
        },
        "calendarSyncEnabled": {
          "type": "boolean"
        },
        "deviceAccountEmail": {
          "type": "string"
        },
        "exchangeServer": {
          "type": "string"
        },
        "sessionInitiationProtocalAddress": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.windowsDeviceAccount": {
      "title": "windowsDeviceAccount",
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.dailySchedule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.runSchedule"
        },
        {
          "title": "dailySchedule",
          "type": "object",
          "properties": {
            "interval": {
              "format": "int32",
              "description": "Interval in number of days",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.hourlySchedule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.runSchedule"
        },
        {
          "title": "hourlySchedule",
          "type": "object",
          "properties": {
            "interval": {
              "format": "int32",
              "description": "Interval in number of hours",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsDefenderScanActionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceActionResult"
        },
        {
          "title": "windowsDefenderScanActionResult",
          "type": "object",
          "properties": {
            "scanType": {
              "description": "Scan type either full scan or quick scan",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deleteUserFromSharedAppleDeviceActionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceActionResult"
        },
        {
          "title": "deleteUserFromSharedAppleDeviceActionResult",
          "type": "object",
          "properties": {
            "userPrincipalName": {
              "description": "User principal name of the user to be deleted",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.locateDeviceActionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceActionResult"
        },
        {
          "title": "locateDeviceActionResult",
          "type": "object",
          "properties": {
            "deviceLocation": {
              "description": "device location"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceGeoLocation": {
      "title": "deviceGeoLocation",
      "type": "object",
      "properties": {
        "lastCollectedDateTimeUtc": {
          "format": "date-time",
          "description": "Time at which location was recorded, relative to UTC",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastCollectedDateTime": {
          "format": "date-time",
          "description": "Time at which location was recorded, relative to UTC",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude coordinate of the device's location"
        },
        "latitude": {
          "format": "double",
          "description": "Latitude coordinate of the device's location"
        },
        "altitude": {
          "format": "double",
          "description": "Altitude, given in meters above sea level"
        },
        "horizontalAccuracy": {
          "format": "double",
          "description": "Accuracy of longitude and latitude in meters"
        },
        "verticalAccuracy": {
          "format": "double",
          "description": "Accuracy of altitude in meters"
        },
        "heading": {
          "format": "double",
          "description": "Heading in degrees from true north"
        },
        "speed": {
          "format": "double",
          "description": "Speed the device is traveling in meters per second"
        }
      }
    },
    "microsoft.graph.remoteLockActionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceActionResult"
        },
        {
          "title": "remoteLockActionResult",
          "type": "object",
          "properties": {
            "unlockPin": {
              "description": "Pin to unlock the client",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.resetPasscodeActionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceActionResult"
        },
        {
          "title": "resetPasscodeActionResult",
          "type": "object",
          "properties": {
            "passcode": {
              "description": "Newly generated passcode for the device ",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsDeviceMalwareState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsDeviceMalwareState",
          "description": "Malware detection entity.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Malware name",
              "type": "string"
            },
            "additionalInformationUrl": {
              "description": "Information URL to learn more about the malware",
              "type": "string"
            },
            "severity": {
              "description": "Severity of the malware"
            },
            "catetgory": {
              "description": "Category of the malware"
            },
            "executionState": {
              "description": "Execution status of the malware like blocked/executing etc"
            },
            "state": {
              "description": "Current status of the malware like cleaned/quarantined/allowed etc"
            },
            "initialDetectionDateTime": {
              "format": "date-time",
              "description": "Initial detection datetime of the malware",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastStateChangeDateTime": {
              "format": "date-time",
              "description": "The last time this particular threat was changed",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "detectionCount": {
              "format": "int32",
              "description": "Number of times the malware is detected",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsManagedDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedDevice"
        },
        {
          "title": "windowsManagedDevice",
          "description": "Windows devices that are managed or pre-enrolled through Intune",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.deviceOperatingSystemSummary": {
      "title": "deviceOperatingSystemSummary",
      "type": "object",
      "properties": {
        "androidCount": {
          "format": "int32",
          "description": "Number of android device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "iosCount": {
          "format": "int32",
          "description": "Number of iOS device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "macOSCount": {
          "format": "int32",
          "description": "Number of Mac OS X device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "windowsMobileCount": {
          "format": "int32",
          "description": "Number of Windows mobile device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "windowsCount": {
          "format": "int32",
          "description": "Number of Windows device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unknownCount": {
          "format": "int32",
          "description": "Number of unknown device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.deviceExchangeAccessStateSummary": {
      "title": "deviceExchangeAccessStateSummary",
      "type": "object",
      "properties": {
        "allowedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Allowed.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "blockedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Blocked.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "quarantinedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Quarantined.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unknownDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Unknown.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unavailableDeviceCount": {
          "format": "int32",
          "description": "Total count of devices for which no Exchange Access State could be found.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.windowsManagementAppHealthSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsManagementAppHealthSummary",
          "description": "Contains properties for the health summary of the Windows management app.",
          "type": "object",
          "properties": {
            "healthyDeviceCount": {
              "format": "int32",
              "description": "Healthy device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unhealthyDeviceCount": {
              "format": "int32",
              "description": "Unhealthy device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Unknown device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsManagementAppHealthState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsManagementAppHealthState",
          "description": "Windows management app health state entity.",
          "type": "object",
          "properties": {
            "healthState": {
              "description": "Windows management app health state."
            },
            "installedVersion": {
              "description": "Windows management app installed version.",
              "type": "string"
            },
            "lastCheckInDateTime": {
              "format": "date-time",
              "description": "Windows management app last check-in time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deviceName": {
              "description": "Name of the device on which Windows management app is installed.",
              "type": "string"
            },
            "deviceOSVersion": {
              "description": "Windows 10 OS version of the device on which Windows management app is installed.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsDeviceADAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsDeviceAccount"
        },
        {
          "title": "windowsDeviceADAccount",
          "type": "object",
          "properties": {
            "domainName": {
              "type": "string"
            },
            "userName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsDeviceAzureADAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsDeviceAccount"
        },
        {
          "title": "windowsDeviceAzureADAccount",
          "type": "object",
          "properties": {
            "userPrincipalName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.reportRoot": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "reportRoot",
          "description": "The resource that represents an instance of History Reports.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.deviceConfigurationGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationGroupAssignment",
          "description": "Device configuration group assignment.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The Id of the AAD group we are targeting the device configuration to.",
              "type": "string"
            },
            "excludeGroup": {
              "description": "Indicates if this group is should be excluded. Defaults that the group should be included",
              "type": "boolean"
            },
            "deviceConfiguration": { }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationAssignment",
          "description": "The device configuration assignment entity assigns an AAD group to a specific device configuration.",
          "type": "object",
          "properties": {
            "target": {
              "description": "The assignment target for the device configuration."
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceStatus",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "platform": {
              "format": "int32",
              "description": "Platform of the device that is being reported",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationUserStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationUserOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationUserOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.settingStateDeviceSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "settingStateDeviceSummary",
          "description": "Device Compilance Policy and Configuration for a Setting State summary",
          "type": "object",
          "properties": {
            "settingName": {
              "description": "Name of the setting",
              "type": "string"
            },
            "instancePath": {
              "description": "Name of the InstancePath for the setting",
              "type": "string"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Device Unkown count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Device Not Applicable count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Device Compliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Device Compliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Device NonCompliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Device error count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Device conflict error count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicyGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyGroupAssignment",
          "description": "Device compliance policy group assignment.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The Id of the AAD group we are targeting the device compliance policy to.",
              "type": "string"
            },
            "excludeGroup": {
              "description": "Indicates if this group is should be excluded. Defaults that the group should be included",
              "type": "boolean"
            },
            "deviceCompliancePolicy": { }
          }
        }
      ]
    },
    "microsoft.graph.deviceCompliancePolicyAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyAssignment",
          "description": "Device compliance policy assignment.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Target for the compliance policy assignment."
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceScheduledActionForRule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceScheduledActionForRule",
          "description": "Scheduled Action for Rule",
          "type": "object",
          "properties": {
            "ruleName": {
              "description": "Name of the rule which this scheduled action applies to.",
              "type": "string"
            },
            "scheduledActionConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceActionItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceDeviceStatus",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "platform": {
              "format": "int32",
              "description": "Platform of the device that is being reported",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceUserStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceDeviceOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceUserOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceUserOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceActionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceActionItem",
          "description": "Scheduled Action Configuration",
          "type": "object",
          "properties": {
            "gracePeriodHours": {
              "format": "int32",
              "description": "Number of hours to wait till the action will be enforced. Valid values 0 to 8760",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "actionType": {
              "description": "What action to take"
            },
            "notificationTemplateId": {
              "description": "What notification Message template to use",
              "type": "string"
            },
            "notificationMessageCCList": {
              "description": "A list of group IDs to speicify who to CC this notification message to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "notificationMessageTemplate": { }
          }
        }
      ]
    },
    "microsoft.graph.androidDeviceComplianceLocalActionBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "androidDeviceComplianceLocalActionBase",
          "description": "Local Action Configuration",
          "type": "object",
          "properties": {
            "gracePeriodInMinutes": {
              "format": "int32",
              "description": "Number of minutes to wait till a local action is enforced. Valid values 0 to 2147483647",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPrivacyDataAccessControlItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfigurationAssignment"
        },
        {
          "title": "windowsPrivacyDataAccessControlItem",
          "description": "Specify access control level per privacy data category",
          "type": "object",
          "properties": {
            "accessLevel": {
              "description": "This indicates an access level for the privacy data category to which the specified application will be given to."
            },
            "dataCategory": {
              "description": "This indicates a privacy data category to which the specific access control will apply."
            },
            "appPackageFamilyName": {
              "description": "The Package Family Name of a Windows app. When set, the access level applies to the specified application.",
              "type": "string"
            },
            "appDisplayName": {
              "description": "The Package Family Name of a Windows app. When set, the access level applies to the specified application.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsAssignedAccessProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsAssignedAccessProfile",
          "description": "Assigned Access profile for Windows.",
          "type": "object",
          "properties": {
            "profileName": {
              "description": "This is a friendly name used to identify a group of applications, the layout of these apps on the start menu and the users to whom this kiosk configuration is assigned.",
              "type": "string"
            },
            "showTaskBar": {
              "description": "This setting allows the admin to specify whether the Task Bar is shown or not.",
              "type": "boolean"
            },
            "appUserModelIds": {
              "description": "These are the only Windows Store Apps that will be available to launch from the Start menu.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "desktopAppPaths": {
              "description": "These are the paths of the Desktop Apps that will be available on the Start menu and the only apps the user will be able to launch.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "userAccounts": {
              "description": "The user accounts that will be locked to this kiosk configuration.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "startMenuLayoutXml": {
              "format": "base64url",
              "description": "Allows admins to override the default Start layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in Binary format.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.report": {
      "title": "report",
      "type": "object",
      "properties": {
        "content": {
          "format": "base64url",
          "type": "string"
        }
      }
    },
    "microsoft.graph.androidForWorkEasEmailProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkEasEmailProfileBase",
          "description": "Base for Android For Work EAS Email profiles",
          "type": "object",
          "properties": {
            "authenticationMethod": {
              "description": "Authentication method for Exchange ActiveSync."
            },
            "durationOfEmailToSync": {
              "description": "Duration of time email should be synced to."
            },
            "emailAddressSource": {
              "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "hostName": {
              "description": "Exchange location (URL) that the mail app connects to.",
              "type": "string"
            },
            "requireSsl": {
              "description": "Indicates whether or not to use SSL.",
              "type": "boolean"
            },
            "usernameSource": {
              "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkCertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkCertificateProfileBase",
          "description": "Android For Work certificate profile base.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format."
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name Type."
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validity Period.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period."
            },
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            },
            "rootCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.extendedKeyUsage": {
      "title": "extendedKeyUsage",
      "type": "object",
      "properties": {
        "name": {
          "description": "Extended Key Usage Name",
          "type": "string"
        },
        "objectIdentifier": {
          "description": "Extended Key Usage Object Identifier",
          "type": "string"
        }
      }
    },
    "microsoft.graph.androidForWorkTrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkTrustedRootCertificate",
          "description": "Android For Work Trusted Root Certificate configuration profile",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkPkcsCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkCertificateProfileBase"
        },
        {
          "title": "androidForWorkPkcsCertificateProfile",
          "description": "Android For Work PKCS certificate profile",
          "type": "object",
          "properties": {
            "certificationAuthority": {
              "description": "PKCS Certification Authority",
              "type": "string"
            },
            "certificationAuthorityName": {
              "description": "PKCS Certification Authority Name",
              "type": "string"
            },
            "certificateTemplateName": {
              "description": "PKCS Certificate Template Name",
              "type": "string"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkScepCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkCertificateProfileBase"
        },
        {
          "title": "androidForWorkScepCertificateProfile",
          "description": "Android For Work SCEP certificate profile",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage"
            },
            "keySize": {
              "description": "SCEP Key Size"
            },
            "hashAlgorithm": {
              "description": "SCEP Hash Algorithm"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.managedDeviceCertificateState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceCertificateState",
          "type": "object",
          "properties": {
            "devicePlatform": {
              "description": "Device platform"
            },
            "certificateKeyUsage": {
              "description": "Key usage"
            },
            "certificateProfileDisplayName": {
              "description": "Certificate profile display name",
              "type": "string"
            },
            "deviceDisplayName": {
              "description": "Device display name",
              "type": "string"
            },
            "userDisplayName": {
              "description": "User display name",
              "type": "string"
            },
            "serverUrl": {
              "description": "Server URL",
              "type": "string"
            },
            "certificateExpirationDateTime": {
              "format": "date-time",
              "description": "Certificate expiry date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastCertificateStateChangeDateTime": {
              "format": "date-time",
              "description": "Last certificate issuance state change",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "certificateIssuer": {
              "description": "Issuer",
              "type": "string"
            },
            "certificateThumbprint": {
              "description": "Thumbprint",
              "type": "string"
            },
            "certificateSerialNumber": {
              "description": "Serial number",
              "type": "string"
            },
            "certificateKeyLength": {
              "format": "int32",
              "description": "Key length",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enhancedKeyUsage": {
              "description": "Extended key usage",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkGmailEasConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkEasEmailProfileBase"
        },
        {
          "title": "androidForWorkGmailEasConfiguration",
          "description": "By providing configurations in this profile you can instruct the Gmail email client on Android For Work devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.androidForWorkNineWorkEasConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkEasEmailProfileBase"
        },
        {
          "title": "androidForWorkNineWorkEasConfiguration",
          "description": "By providing configurations in this profile you can instruct the Nine Work email client on Android For Work devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object",
          "properties": {
            "syncCalendar": {
              "description": "Toggles syncing the calendar. If set to false the calendar is turned off on the device.",
              "type": "boolean"
            },
            "syncContacts": {
              "description": "Toggles syncing contacts. If set to false contacts are turned off on the device.",
              "type": "boolean"
            },
            "syncTasks": {
              "description": "Toggles syncing tasks. If set to false tasks are turned off on the device.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidCertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidCertificateProfileBase",
          "description": "Android certificate profile base.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format."
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name Type."
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validity Period.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period."
            },
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            },
            "rootCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.androidTrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidTrustedRootCertificate",
          "description": "Android Trusted Root Certificate configuration profile",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidPkcsCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidCertificateProfileBase"
        },
        {
          "title": "androidPkcsCertificateProfile",
          "description": "Android PKCS certificate profile",
          "type": "object",
          "properties": {
            "certificationAuthority": {
              "description": "PKCS Certification Authority",
              "type": "string"
            },
            "certificationAuthorityName": {
              "description": "PKCS Certification Authority Name",
              "type": "string"
            },
            "certificateTemplateName": {
              "description": "PKCS Certificate Template Name",
              "type": "string"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidScepCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidCertificateProfileBase"
        },
        {
          "title": "androidScepCertificateProfile",
          "description": "Android SCEP certificate profile",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage"
            },
            "keySize": {
              "description": "SCEP Key Size"
            },
            "hashAlgorithm": {
              "description": "SCEP Hash Algorithm"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidCustomConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the androidCustomConfiguration resource.",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSetting": {
      "title": "omaSetting",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.omaSettingInteger": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingInteger",
          "type": "object",
          "properties": {
            "value": {
              "format": "int32",
              "description": "Value.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingFloatingPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingFloatingPoint",
          "type": "object",
          "properties": {
            "value": {
              "format": "float",
              "description": "Value."
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingString": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingString",
          "type": "object",
          "properties": {
            "value": {
              "description": "Value.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingDateTime": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingDateTime",
          "type": "object",
          "properties": {
            "value": {
              "format": "date-time",
              "description": "Value.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingStringXml": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingStringXml",
          "type": "object",
          "properties": {
            "fileName": {
              "description": "File name associated with the Value property (*.xml).",
              "type": "string"
            },
            "value": {
              "format": "base64url",
              "description": "Value. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingBoolean": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingBoolean",
          "type": "object",
          "properties": {
            "value": {
              "description": "Value.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.omaSettingBase64": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.omaSetting"
        },
        {
          "title": "omaSettingBase64",
          "type": "object",
          "properties": {
            "fileName": {
              "description": "File name associated with the Value property (*.cer | *.crt ).",
              "type": "string"
            },
            "value": {
              "description": "Value. (Base64 encoded string)",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidEasEmailProfileConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidEasEmailProfileConfiguration",
          "description": "By providing configurations in this profile you can instruct the native email client on KNOX devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Exchange ActiveSync account name, displayed to users as name of EAS (this) profile.",
              "type": "string"
            },
            "authenticationMethod": {
              "description": "Authentication method for Exchange ActiveSync."
            },
            "syncCalendar": {
              "description": "Toggles syncing the calendar. If set to false calendar is turned off on the device.",
              "type": "boolean"
            },
            "syncContacts": {
              "description": "Toggles syncing contacts. If set to false contacts are turned off on the device.",
              "type": "boolean"
            },
            "syncTasks": {
              "description": "Toggles syncing tasks. If set to false tasks are turned off on the device.",
              "type": "boolean"
            },
            "syncNotes": {
              "description": "Toggles syncing notes. If set to false notes are turned off on the device.",
              "type": "boolean"
            },
            "durationOfEmailToSync": {
              "description": "Duration of time email should be synced to."
            },
            "emailAddressSource": {
              "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "emailSyncSchedule": {
              "description": "Email sync schedule."
            },
            "hostName": {
              "description": "Exchange location (URL) that the native mail app connects to.",
              "type": "string"
            },
            "requireSmime": {
              "description": "Indicates whether or not to use S/MIME certificate.",
              "type": "boolean"
            },
            "requireSsl": {
              "description": "Indicates whether or not to use SSL.",
              "type": "boolean"
            },
            "usernameSource": {
              "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "identityCertificate": { },
            "smimeSigningCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkCustomConfiguration",
          "description": "Android For Work custom configuration",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android for Work device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile.",
          "type": "object",
          "properties": {
            "networkName": {
              "description": "Network Name",
              "type": "string"
            },
            "ssid": {
              "description": "This is the name of the Wi-Fi network that is broadcast to all devices.",
              "type": "string"
            },
            "connectAutomatically": {
              "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network.",
              "type": "boolean"
            },
            "connectWhenNetworkNameIsHidden": {
              "description": "When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices.",
              "type": "boolean"
            },
            "wiFiSecurityType": {
              "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkEnterpriseWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidForWorkWiFiConfiguration"
        },
        {
          "title": "androidForWorkEnterpriseWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android for Work device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user.",
          "type": "object",
          "properties": {
            "eapType": {
              "description": "Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
            },
            "authenticationMethod": {
              "description": "Indicates the Authentication Method the client (device) needs to use when the EAP Type is configured to PEAP or EAP-TTLS."
            },
            "nonEapAuthenticationMethodForEapTtls": {
              "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password."
            },
            "nonEapAuthenticationMethodForPeap": {
              "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is PEAP and Authenticationmethod is Username and Password."
            },
            "enableOuterIdentityPrivacy": {
              "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS or PEAP. The String provided here is used to mask the username of individual users when they attempt to connect to Wi-Fi network.",
              "type": "string"
            },
            "rootCertificateForServerValidation": { },
            "identityCertificateForClientAuthentication": { }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkGeneralDeviceConfiguration",
          "description": "Android For Work general device configuration.",
          "type": "object",
          "properties": {
            "passwordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passwordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required."
            },
            "workProfileDataSharingType": {
              "description": "Type of data sharing that is allowed."
            },
            "workProfileBlockNotificationsWhileDeviceLocked": {
              "description": "Indicates whether or not to block notifications while device locked.",
              "type": "boolean"
            },
            "blockCrossProfileCopyPaste": {
              "description": "Boolean that indicates if the setting disallow cross profile copy/paste is enabled.",
              "type": "boolean"
            },
            "workProfileDefaultAppPermissionPolicy": {
              "description": "Type of password that is required."
            },
            "workProfilePasswordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock for work profile.",
              "type": "boolean"
            },
            "workProfilePasswordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents for work profile.",
              "type": "boolean"
            },
            "workProfilePasswordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the work profile password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of work profile password. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous work profile passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before work profile is removed and all corporate data deleted. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordRequiredType": {
              "description": "Type of work profile password that is required."
            },
            "workProfileRequirePassword": {
              "description": "Password is required or not for work profile",
              "type": "boolean"
            },
            "requireAppVerify": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidForWorkVpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "connectionName": {
              "description": "Connection name displayed to the user.",
              "type": "string"
            },
            "connectionType": {
              "description": "Connection type."
            },
            "role": {
              "description": "Role when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "realm": {
              "description": "Realm when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "servers": {
              "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.vpnServer"
              }
            },
            "fingerprint": {
              "description": "Fingerprint is a string that will be used to verify the VPN server can be trusted, which is only applicable when connection type is Check Point Capsule VPN.",
              "type": "string"
            },
            "customData": {
              "description": "Custom data when connection type is set to Citrix. This collection can contain a maximum of 25 elements.",
              "type": "array",
              "items": { }
            },
            "authenticationMethod": {
              "description": "Authentication method."
            },
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.vpnServer": {
      "title": "vpnServer",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "ipAddressOrFqdn": {
          "description": "IP Address or FQDN.",
          "type": "string"
        },
        "address": {
          "description": "Address (IP address, FQDN or URL)",
          "type": "string"
        },
        "isDefaultServer": {
          "description": "Default server.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.androidGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidGeneralDeviceConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the androidGeneralDeviceConfiguration resource.",
          "type": "object",
          "properties": {
            "appsBlockClipboardSharing": {
              "description": "Indicates whether or not to block clipboard sharing to copy and paste between applications.",
              "type": "boolean"
            },
            "appsBlockCopyPaste": {
              "description": "Indicates whether or not to block copy and paste within applications.",
              "type": "boolean"
            },
            "appsBlockYouTube": {
              "description": "Indicates whether or not to block the YouTube app.",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Indicates whether or not to block Bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block the use of the camera.",
              "type": "boolean"
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "cellularBlockMessaging": {
              "description": "Indicates whether or not to block SMS/MMS messaging.",
              "type": "boolean"
            },
            "cellularBlockVoiceRoaming": {
              "description": "Indicates whether or not to block voice roaming.",
              "type": "boolean"
            },
            "cellularBlockWiFiTethering": {
              "description": "Indicates whether or not to block syncing Wi-Fi tethering.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "Type of list that is in the CompliantAppsList."
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to block location services.",
              "type": "boolean"
            },
            "googleAccountBlockAutoSync": {
              "description": "Indicates whether or not to block Google account auto sync.",
              "type": "boolean"
            },
            "googlePlayStoreBlocked": {
              "description": "Indicates whether or not to block the Google Play store.",
              "type": "boolean"
            },
            "kioskModeBlockSleepButton": {
              "description": "Indicates whether or not to block the screen sleep button while in Kiosk Mode.",
              "type": "boolean"
            },
            "kioskModeBlockVolumeButtons": {
              "description": "Indicates whether or not to block the volume buttons while in Kiosk Mode.",
              "type": "boolean"
            },
            "dateAndTimeBlockChanges": {
              "description": "Indicates whether or not to block changing date and time while in KNOX Mode.",
              "type": "boolean"
            },
            "kioskModeApps": {
              "description": "A list of apps that will be allowed to run when the device is in Kiosk Mode. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to block Near-Field Communication.",
              "type": "boolean"
            },
            "passwordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passwordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required."
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require a password.",
              "type": "boolean"
            },
            "powerOffBlocked": {
              "description": "Indicates whether or not to block powering off the device.",
              "type": "boolean"
            },
            "factoryResetBlocked": {
              "description": "Indicates whether or not to block user performing a factory reset.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block screenshots.",
              "type": "boolean"
            },
            "deviceSharingAllowed": {
              "description": "Indicates whether or not to allow device sharing mode.",
              "type": "boolean"
            },
            "storageBlockGoogleBackup": {
              "description": "Indicates whether or not to block Google Backup.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to block removable storage usage.",
              "type": "boolean"
            },
            "storageRequireDeviceEncryption": {
              "description": "Indicates whether or not to require device encryption.",
              "type": "boolean"
            },
            "storageRequireRemovableStorageEncryption": {
              "description": "Indicates whether or not to require removable storage encryption.",
              "type": "boolean"
            },
            "voiceAssistantBlocked": {
              "description": "Indicates whether or not to block the use of the Voice Assistant.",
              "type": "boolean"
            },
            "voiceDialingBlocked": {
              "description": "Indicates whether or not to block voice dialing.",
              "type": "boolean"
            },
            "webBrowserBlockPopups": {
              "description": "Indicates whether or not to block popups within the web browser.",
              "type": "boolean"
            },
            "webBrowserBlockAutofill": {
              "description": "Indicates whether or not to block the web browser's auto fill feature.",
              "type": "boolean"
            },
            "webBrowserBlockJavaScript": {
              "description": "Indicates whether or not to block JavaScript within the web browser.",
              "type": "boolean"
            },
            "webBrowserBlocked": {
              "description": "Indicates whether or not to block the web browser.",
              "type": "boolean"
            },
            "webBrowserCookieSettings": {
              "description": "Cookie settings within the web browser."
            },
            "wiFiBlocked": {
              "description": "Indicates whether or not to block syncing Wi-Fi.",
              "type": "boolean"
            },
            "appsInstallAllowList": {
              "description": "List of apps which can be installed on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsLaunchBlockList": {
              "description": "List of apps which are blocked from being launched on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsHideList": {
              "description": "List of apps to be hidden on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "requireAppVerify": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.appListItem": {
      "title": "appListItem",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application name",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the application",
          "type": "string"
        },
        "appStoreUrl": {
          "description": "The Store URL of the application",
          "type": "string"
        },
        "appId": {
          "description": "The application or bundle identifier of the application",
          "type": "string"
        }
      }
    },
    "microsoft.graph.appsComplianceListItem": {
      "title": "appsComplianceListItem",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application name",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the application",
          "type": "string"
        },
        "appStoreUrl": {
          "description": "The Store URL of the application",
          "type": "string"
        },
        "appId": {
          "description": "The application or bundle identifier of the application",
          "type": "string"
        }
      }
    },
    "microsoft.graph.androidVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidVpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "connectionName": {
              "description": "Connection name displayed to the user.",
              "type": "string"
            },
            "connectionType": {
              "description": "Connection type."
            },
            "role": {
              "description": "Role when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "realm": {
              "description": "Realm when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "servers": {
              "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.vpnServer"
              }
            },
            "fingerprint": {
              "description": "Fingerprint is a string that will be used to verify the VPN server can be trusted, which is only applicable when connection type is Check Point Capsule VPN.",
              "type": "string"
            },
            "customData": {
              "description": "Custom data when connection type is set to Citrix. This collection can contain a maximum of 25 elements.",
              "type": "array",
              "items": { }
            },
            "authenticationMethod": {
              "description": "Authentication method."
            },
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.androidWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile.",
          "type": "object",
          "properties": {
            "networkName": {
              "description": "Network Name",
              "type": "string"
            },
            "ssid": {
              "description": "This is the name of the Wi-Fi network that is broadcast to all devices.",
              "type": "string"
            },
            "connectAutomatically": {
              "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network.",
              "type": "boolean"
            },
            "connectWhenNetworkNameIsHidden": {
              "description": "When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices.",
              "type": "boolean"
            },
            "wiFiSecurityType": {
              "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
            }
          }
        }
      ]
    },
    "microsoft.graph.androidEnterpriseWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidWiFiConfiguration"
        },
        {
          "title": "androidEnterpriseWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user.",
          "type": "object",
          "properties": {
            "eapType": {
              "description": "Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
            },
            "authenticationMethod": {
              "description": "Indicates the Authentication Method the client (device) needs to use when the EAP Type is configured to PEAP or EAP-TTLS."
            },
            "innerAuthenticationProtocolForEapTtls": {
              "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password."
            },
            "innerAuthenticationProtocolForPeap": {
              "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is PEAP and Authenticationmethod is Username and Password."
            },
            "outerIdentityPrivacyTemporaryValue": {
              "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS or PEAP. The String provided here is used to mask the username of individual users when they attempt to connect to Wi-Fi network.",
              "type": "string"
            },
            "rootCertificateForServerValidation": { },
            "identityCertificateForClientAuthentication": { }
          }
        }
      ]
    },
    "microsoft.graph.iosCertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosCertificateProfileBase",
          "description": "iOS certificate profile base.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format."
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name type."
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validity Period.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period."
            }
          }
        }
      ]
    },
    "microsoft.graph.iosPkcsCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosCertificateProfileBase"
        },
        {
          "title": "iosPkcsCertificateProfile",
          "description": "iOS PKCS certificate profile.",
          "type": "object",
          "properties": {
            "certificationAuthority": {
              "description": "PKCS Certification Authority.",
              "type": "string"
            },
            "certificationAuthorityName": {
              "description": "PKCS Certification Authority Name.",
              "type": "string"
            },
            "certificateTemplateName": {
              "description": "PKCS Certificate Template Name.",
              "type": "string"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosScepCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosCertificateProfileBase"
        },
        {
          "title": "iosScepCertificateProfile",
          "description": "iOS SCEP certificate profile.",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage."
            },
            "keySize": {
              "description": "SCEP Key Size."
            },
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "rootCertificate": { },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosTrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosTrustedRootCertificate",
          "description": "iOS Trusted Root Certificate configuration profile.",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate.",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosCustomConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the iosCustomConfiguration resource.",
          "type": "object",
          "properties": {
            "payloadName": {
              "description": "Name that is displayed to the user.",
              "type": "string"
            },
            "payloadFileName": {
              "description": "Payload file name (*.mobileconfig | *.xml).",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosEasEmailProfileConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosEasEmailProfileConfiguration",
          "description": "By providing configurations in this profile you can instruct the native email client on iOS devices to communicate with an Exchange server and get email, contacts, calendar, reminders, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "authenticationMethod": {
              "description": "Authentication method for this Email profile."
            },
            "blockMovingMessagesToOtherEmailAccounts": {
              "description": "Indicates whether or not to block moving messages to other email accounts.",
              "type": "boolean"
            },
            "blockSendingEmailFromThirdPartyApps": {
              "description": "Indicates whether or not to block sending email from third party apps.",
              "type": "boolean"
            },
            "blockSyncingRecentlyUsedEmailAddresses": {
              "description": "Indicates whether or not to block syncing recently used email addresses, for instance - when composing new email.",
              "type": "boolean"
            },
            "durationOfEmailToSync": {
              "description": "Duration of time email should be synced back to. "
            },
            "emailAddressSource": {
              "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "hostName": {
              "description": "Exchange location that (URL) that the native mail app connects to.",
              "type": "string"
            },
            "requireSmime": {
              "description": "Indicates whether or not to use S/MIME certificate.",
              "type": "boolean"
            },
            "requireSsl": {
              "description": "Indicates whether or not to use SSL.",
              "type": "boolean"
            },
            "usernameSource": {
              "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "identityCertificate": { },
            "smimeSigningCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.iosEduDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosEduDeviceConfiguration",
          "description": "iOS Education device configuration",
          "type": "object",
          "properties": {
            "teacherCertificateSettings": {
              "$ref": "#/definitions/microsoft.graph.iosEduCertificateSettings"
            },
            "studentCertificateSettings": {
              "description": "The Trusted Root and PFX certificates for Student"
            },
            "deviceCertificateSettings": {
              "description": "The Trusted Root and PFX certificates for Device"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosEduCertificateSettings": {
      "title": "iosEduCertificateSettings",
      "type": "object",
      "properties": {
        "trustedRootCertificate": {
          "format": "base64url",
          "description": "Trusted Root Certificate.",
          "type": "string"
        },
        "certFileName": {
          "description": "File name to display in UI.",
          "type": "string"
        },
        "certificationAuthority": {
          "description": "PKCS Certification Authority.",
          "type": "string"
        },
        "certificationAuthorityName": {
          "description": "PKCS Certification Authority Name.",
          "type": "string"
        },
        "certificateTemplateName": {
          "description": "PKCS Certificate Template Name.",
          "type": "string"
        },
        "renewalThresholdPercentage": {
          "format": "int32",
          "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "certificateValidityPeriodValue": {
          "format": "int32",
          "description": "Value for the Certificate Validity Period.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "certificateValidityPeriodScale": {
          "description": "Scale for the Certificate Validity Period."
        }
      }
    },
    "microsoft.graph.iosEducationDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosEducationDeviceConfiguration",
          "description": "iOS Education configuration profile",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.iosGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosGeneralDeviceConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the iosGeneralDeviceConfiguration resource.",
          "type": "object",
          "properties": {
            "accountBlockModification": {
              "description": "Indicates whether or not to allow account modification when the device is in supervised mode.",
              "type": "boolean"
            },
            "activationLockAllowWhenSupervised": {
              "description": "Indicates whether or not to allow activation lock when the device is in the supervised mode.",
              "type": "boolean"
            },
            "airDropBlocked": {
              "description": "Indicates whether or not to allow AirDrop when the device is in supervised mode.",
              "type": "boolean"
            },
            "airDropForceUnmanagedDropTarget": {
              "description": "Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later).",
              "type": "boolean"
            },
            "airPlayForcePairingPasswordForOutgoingRequests": {
              "description": "Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password.",
              "type": "boolean"
            },
            "appleWatchBlockPairing": {
              "description": "Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appleWatchForceWristDetection": {
              "description": "Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later).",
              "type": "boolean"
            },
            "appleNewsBlocked": {
              "description": "Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appsSingleAppModeList": {
              "description": "Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsVisibilityList": {
              "description": "List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "appsVisibilityListType": {
              "description": "Type of list that is in the AppsVisibilityList."
            },
            "appStoreBlockAutomaticDownloads": {
              "description": "Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appStoreBlocked": {
              "description": "Indicates whether or not to block the user from using the App Store.",
              "type": "boolean"
            },
            "appStoreBlockInAppPurchases": {
              "description": "Indicates whether or not to block the user from making in app purchases.",
              "type": "boolean"
            },
            "appStoreBlockUIAppInstallation": {
              "description": "Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appStoreRequirePassword": {
              "description": "Indicates whether or not to require a password when using the app store.",
              "type": "boolean"
            },
            "bluetoothBlockModification": {
              "description": "Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later).",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block the user from accessing the camera of the device.",
              "type": "boolean"
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "cellularBlockGlobalBackgroundFetchWhileRoaming": {
              "description": "Indicates whether or not to block global background fetch while roaming.",
              "type": "boolean"
            },
            "cellularBlockPerAppDataModification": {
              "description": "Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode.",
              "type": "boolean"
            },
            "cellularBlockPersonalHotspot": {
              "description": "Indicates whether or not to block Personal Hotspot.",
              "type": "boolean"
            },
            "cellularBlockVoiceRoaming": {
              "description": "Indicates whether or not to block voice roaming.",
              "type": "boolean"
            },
            "certificatesBlockUntrustedTlsCertificates": {
              "description": "Indicates whether or not to block untrusted TLS certificates.",
              "type": "boolean"
            },
            "classroomAppBlockRemoteScreenObservation": {
              "description": "Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later).",
              "type": "boolean"
            },
            "classroomAppForceUnpromptedScreenObservation": {
              "description": "Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the AppComplianceList."
            },
            "configurationProfileBlockChanges": {
              "description": "Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.",
              "type": "boolean"
            },
            "definitionLookupBlocked": {
              "description": "Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).",
              "type": "boolean"
            },
            "deviceBlockEnableRestrictions": {
              "description": "Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode.",
              "type": "boolean"
            },
            "deviceBlockEraseContentAndSettings": {
              "description": "Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode.",
              "type": "boolean"
            },
            "deviceBlockNameModification": {
              "description": "Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "diagnosticDataBlockSubmissionModification": {
              "description": "Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later).",
              "type": "boolean"
            },
            "documentsBlockManagedDocumentsInUnmanagedApps": {
              "description": "Indicates whether or not to block the user from viewing managed documents in unmanaged apps.",
              "type": "boolean"
            },
            "documentsBlockUnmanagedDocumentsInManagedApps": {
              "description": "Indicates whether or not to block the user from viewing unmanaged documents in managed apps.",
              "type": "boolean"
            },
            "emailInDomainSuffixes": {
              "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enterpriseAppBlockTrust": {
              "description": "Indicates whether or not to block the user from trusting an enterprise app.",
              "type": "boolean"
            },
            "enterpriseAppBlockTrustModification": {
              "description": "Indicates whether or not to block the user from modifying the enterprise app trust settings.",
              "type": "boolean"
            },
            "faceTimeBlocked": {
              "description": "Indicates whether or not to block the user from using FaceTime.",
              "type": "boolean"
            },
            "findMyFriendsBlocked": {
              "description": "Indicates whether or not to block Find My Friends when the device is in supervised mode.",
              "type": "boolean"
            },
            "gamingBlockGameCenterFriends": {
              "description": "Indicates whether or not to block the user from having friends in Game Center.",
              "type": "boolean"
            },
            "gamingBlockMultiplayer": {
              "description": "Indicates whether or not to block the user from using multiplayer gaming.",
              "type": "boolean"
            },
            "gameCenterBlocked": {
              "description": "Indicates whether or not to block the user from using Game Center when the device is in supervised mode.",
              "type": "boolean"
            },
            "hostPairingBlocked": {
              "description": "indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode.",
              "type": "boolean"
            },
            "iBooksStoreBlocked": {
              "description": "Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.",
              "type": "boolean"
            },
            "iBooksStoreBlockErotica": {
              "description": "Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica.",
              "type": "boolean"
            },
            "iCloudBlockActivityContinuation": {
              "description": "Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device.",
              "type": "boolean"
            },
            "iCloudBlockBackup": {
              "description": "Indicates whether or not to block iCloud backup.",
              "type": "boolean"
            },
            "iCloudBlockDocumentSync": {
              "description": "Indicates whether or not to block iCloud document sync.",
              "type": "boolean"
            },
            "iCloudBlockManagedAppsSync": {
              "description": "Indicates whether or not to block Managed Apps Cloud Sync.",
              "type": "boolean"
            },
            "iCloudBlockPhotoLibrary": {
              "description": "Indicates whether or not to block iCloud Photo Library.",
              "type": "boolean"
            },
            "iCloudBlockPhotoStreamSync": {
              "description": "Indicates whether or not to block iCloud Photo Stream Sync.",
              "type": "boolean"
            },
            "iCloudBlockSharedPhotoStream": {
              "description": "Indicates whether or not to block Shared Photo Stream.",
              "type": "boolean"
            },
            "iCloudRequireEncryptedBackup": {
              "description": "Indicates whether or not to require backups to iCloud be encrypted.",
              "type": "boolean"
            },
            "iTunesBlockExplicitContent": {
              "description": "Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store.",
              "type": "boolean"
            },
            "iTunesBlockMusicService": {
              "description": "Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later).",
              "type": "boolean"
            },
            "iTunesBlockRadio": {
              "description": "Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockAutoCorrect": {
              "description": "Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockDictation": {
              "description": "Indicates whether or not to block the user from using dictation input when the device is in supervised mode.",
              "type": "boolean"
            },
            "keyboardBlockPredictive": {
              "description": "Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockShortcuts": {
              "description": "Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "keyboardBlockSpellCheck": {
              "description": "Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "kioskModeAllowAssistiveSpeak": {
              "description": "Indicates whether or not to allow assistive speak while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowAssistiveTouchSettings": {
              "description": "Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowAutoLock": {
              "description": "Indicates whether or not to allow device auto lock while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowColorInversionSettings": {
              "description": "Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowRingerSwitch": {
              "description": "Indicates whether or not to allow use of the ringer switch while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowScreenRotation": {
              "description": "Indicates whether or not to allow screen rotation while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowSleepButton": {
              "description": "Indicates whether or not to allow use of the sleep button while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowTouchscreen": {
              "description": "Indicates whether or not to allow use of the touchscreen while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowVoiceOverSettings": {
              "description": "Indicates whether or not to allow access to the voice over settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowVolumeButtons": {
              "description": "Indicates whether or not to allow use of the volume buttons while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowZoomSettings": {
              "description": "Indicates whether or not to allow access to the zoom settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAppStoreUrl": {
              "description": "URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.",
              "type": "string"
            },
            "kioskModeRequireAssistiveTouch": {
              "description": "Indicates whether or not to require assistive touch while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireColorInversion": {
              "description": "Indicates whether or not to require color inversion while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireMonoAudio": {
              "description": "Indicates whether or not to require mono audio while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireVoiceOver": {
              "description": "Indicates whether or not to require voice over while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireZoom": {
              "description": "Indicates whether or not to require zoom while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeManagedAppId": {
              "description": "Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.",
              "type": "string"
            },
            "lockScreenBlockControlCenter": {
              "description": "Indicates whether or not to block the user from using control center on the lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockNotificationView": {
              "description": "Indicates whether or not to block the user from using the notification view on the lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockPassbook": {
              "description": "Indicates whether or not to block the user from using passbook when the device is locked.",
              "type": "boolean"
            },
            "lockScreenBlockTodayView": {
              "description": "Indicates whether or not to block the user from using the Today View on the lock screen.",
              "type": "boolean"
            },
            "mediaContentRatingAustralia": {
              "description": "Media content rating settings for Australia"
            },
            "mediaContentRatingCanada": {
              "description": "Media content rating settings for Canada"
            },
            "mediaContentRatingFrance": {
              "description": "Media content rating settings for France"
            },
            "mediaContentRatingGermany": {
              "description": "Media content rating settings for Germany"
            },
            "mediaContentRatingIreland": {
              "description": "Media content rating settings for Ireland"
            },
            "mediaContentRatingJapan": {
              "description": "Media content rating settings for Japan"
            },
            "mediaContentRatingNewZealand": {
              "description": "Media content rating settings for New Zealand"
            },
            "mediaContentRatingUnitedKingdom": {
              "description": "Media content rating settings for United Kingdom"
            },
            "mediaContentRatingUnitedStates": {
              "description": "Media content rating settings for United States"
            },
            "networkUsageRules": {
              "description": "List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            },
            "mediaContentRatingApps": {
              "description": "Media content rating settings for Apps"
            },
            "messagesBlocked": {
              "description": "Indicates whether or not to block the user from using the Messages app on the supervised device.",
              "type": "boolean"
            },
            "notificationsBlockSettingsModification": {
              "description": "Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).",
              "type": "boolean"
            },
            "passcodeBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passcodeBlockFingerprintModification": {
              "description": "Block modification of registered Touch ID fingerprints when in supervised mode.",
              "type": "boolean"
            },
            "passcodeBlockModification": {
              "description": "Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later).",
              "type": "boolean"
            },
            "passcodeBlockSimple": {
              "description": "Indicates whether or not to block simple passcodes.",
              "type": "boolean"
            },
            "passcodeExpirationDays": {
              "format": "int32",
              "description": "Number of days before the passcode expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passcode. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a passcode is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a passcode must contain. Valid values 0 to 4",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodePreviousPasscodeBlockCount": {
              "format": "int32",
              "description": "Number of previous passcodes to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeSignInFailureCountBeforeWipe": {
              "format": "int32",
              "description": "Number of sign in failures allowed before wiping the device. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeRequiredType": {
              "description": "Type of passcode that is required."
            },
            "passcodeRequired": {
              "description": "Indicates whether or not to require a passcode.",
              "type": "boolean"
            },
            "podcastsBlocked": {
              "description": "Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later).",
              "type": "boolean"
            },
            "safariBlockAutofill": {
              "description": "Indicates whether or not to block the user from using Auto fill in Safari.",
              "type": "boolean"
            },
            "safariBlockJavaScript": {
              "description": "Indicates whether or not to block JavaScript in Safari.",
              "type": "boolean"
            },
            "safariBlockPopups": {
              "description": "Indicates whether or not to block popups in Safari.",
              "type": "boolean"
            },
            "safariBlocked": {
              "description": "Indicates whether or not to block the user from using Safari.",
              "type": "boolean"
            },
            "safariCookieSettings": {
              "description": "Cookie settings for Safari."
            },
            "safariManagedDomains": {
              "description": "URLs matching the patterns listed here will be considered managed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "safariPasswordAutoFillDomains": {
              "description": "Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "safariRequireFraudWarning": {
              "description": "Indicates whether or not to require fraud warning in Safari.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block the user from taking Screenshots.",
              "type": "boolean"
            },
            "siriBlocked": {
              "description": "Indicates whether or not to block the user from using Siri.",
              "type": "boolean"
            },
            "siriBlockedWhenLocked": {
              "description": "Indicates whether or not to block the user from using Siri when locked.",
              "type": "boolean"
            },
            "siriBlockUserGeneratedContent": {
              "description": "Indicates whether or not to block Siri from querying user-generated content when used on a supervised device.",
              "type": "boolean"
            },
            "siriRequireProfanityFilter": {
              "description": "Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device.",
              "type": "boolean"
            },
            "spotlightBlockInternetResults": {
              "description": "Indicates whether or not to block Spotlight search from returning internet results on supervised device.",
              "type": "boolean"
            },
            "voiceDialingBlocked": {
              "description": "Indicates whether or not to block voice dialing.",
              "type": "boolean"
            },
            "wallpaperBlockModification": {
              "description": "Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) .",
              "type": "boolean"
            },
            "wiFiConnectOnlyToConfiguredNetworks": {
              "description": "Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.mediaContentRatingAustralia": {
      "title": "mediaContentRatingAustralia",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Australia"
        },
        "tvRating": {
          "description": "TV rating selected for Australia"
        }
      }
    },
    "microsoft.graph.mediaContentRatingCanada": {
      "title": "mediaContentRatingCanada",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Canada"
        },
        "tvRating": {
          "description": "TV rating selected for Canada"
        }
      }
    },
    "microsoft.graph.mediaContentRatingFrance": {
      "title": "mediaContentRatingFrance",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for France"
        },
        "tvRating": {
          "description": "TV rating selected for France"
        }
      }
    },
    "microsoft.graph.mediaContentRatingGermany": {
      "title": "mediaContentRatingGermany",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Germany"
        },
        "tvRating": {
          "description": "TV rating selected for Germany"
        }
      }
    },
    "microsoft.graph.mediaContentRatingIreland": {
      "title": "mediaContentRatingIreland",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Ireland"
        },
        "tvRating": {
          "description": "TV rating selected for Ireland"
        }
      }
    },
    "microsoft.graph.mediaContentRatingJapan": {
      "title": "mediaContentRatingJapan",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Japan"
        },
        "tvRating": {
          "description": "TV rating selected for Japan"
        }
      }
    },
    "microsoft.graph.mediaContentRatingNewZealand": {
      "title": "mediaContentRatingNewZealand",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for New Zealand"
        },
        "tvRating": {
          "description": "TV rating selected for New Zealand"
        }
      }
    },
    "microsoft.graph.mediaContentRatingUnitedKingdom": {
      "title": "mediaContentRatingUnitedKingdom",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for United Kingdom"
        },
        "tvRating": {
          "description": "TV rating selected for United Kingdom"
        }
      }
    },
    "microsoft.graph.mediaContentRatingUnitedStates": {
      "title": "mediaContentRatingUnitedStates",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for United States"
        },
        "tvRating": {
          "description": "TV rating selected for United States"
        }
      }
    },
    "microsoft.graph.iosNetworkUsageRule": {
      "title": "iosNetworkUsageRule",
      "type": "object",
      "properties": {
        "managedApps": {
          "description": "Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "cellularDataBlockWhenRoaming": {
          "description": "If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.",
          "type": "boolean"
        },
        "cellularDataBlocked": {
          "description": "If set to true, corresponding managed apps will not be allowed to use cellular data at any time.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.iosUpdateConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosUpdateConfiguration",
          "description": "IOS Update Configuration, allows you to configure time window within week to install iOS updates",
          "type": "object",
          "properties": {
            "isEnabled": {
              "description": "Is setting enabled in UI",
              "type": "boolean"
            },
            "activeHoursStart": {
              "format": "time",
              "description": "Active Hours Start (active hours mean the time window when updates install should not happen)",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "activeHoursEnd": {
              "format": "time",
              "description": "Active Hours End (active hours mean the time window when updates install should not happen)",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "scheduledInstallDays": {
              "description": "Days in week for which active hours are configured. This collection can contain a maximum of 7 elements.",
              "type": "array",
              "items": { }
            },
            "utcTimeOffsetInMinutes": {
              "format": "int32",
              "description": "UTC Time Offset indicated in minutes",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile.",
          "type": "object",
          "properties": {
            "networkName": {
              "description": "Network Name",
              "type": "string"
            },
            "ssid": {
              "description": "This is the name of the Wi-Fi network that is broadcast to all devices.",
              "type": "string"
            },
            "connectAutomatically": {
              "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network.",
              "type": "boolean"
            },
            "connectWhenNetworkNameIsHidden": {
              "description": "Connect when the network is not broadcasting its name (SSID). When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices.",
              "type": "boolean"
            },
            "wiFiSecurityType": {
              "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
            },
            "proxySettings": {
              "description": "Proxy Type for this Wi-Fi connection"
            },
            "proxyManualAddress": {
              "description": "IP Address or DNS hostname of the proxy server when manual configuration is selected.",
              "type": "string"
            },
            "proxyManualPort": {
              "format": "int32",
              "description": "Port of the proxy server when manual configuration is selected.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "proxyAutomaticConfigurationUrl": {
              "description": "URL of the proxy server automatic configuration script when automatic configuration is selected. This URL is typically the location of PAC (Proxy Auto Configuration) file.",
              "type": "string"
            },
            "preSharedKey": {
              "description": "This is the pre-shared key for WPA Personal Wi-Fi network.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosEnterpriseWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosWiFiConfiguration"
        },
        {
          "title": "iosEnterpriseWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user.",
          "type": "object",
          "properties": {
            "eapType": {
              "description": "Extensible Authentication Protocol (EAP). Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
            },
            "eapFastConfiguration": {
              "description": "EAP-FAST Configuration Option when EAP-FAST is the selected EAP Type."
            },
            "trustedServerCertificateNames": {
              "description": "Trusted server certificate names when EAP Type is configured to EAP-TLS/TTLS/FAST or PEAP. This is the common name used in the certificates issued by your trusted certificate authority (CA). If you provide this information, you can bypass the dynamic trust dialog that is displayed on end users' devices when they connect to this Wi-Fi network.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "authenticationMethod": {
              "description": "Authentication Method when EAP Type is configured to PEAP or EAP-TTLS."
            },
            "innerAuthenticationProtocolForEapTtls": {
              "description": "Non-EAP Method for Authentication when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password."
            },
            "outerIdentityPrivacyTemporaryValue": {
              "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP - TTLS, EAP - FAST or PEAP. This property masks usernames with the text you enter. For example, if you use 'anonymous', each user that authenticates with this Wi-Fi connection using their real username is displayed as 'anonymous'.",
              "type": "string"
            },
            "rootCertificatesForServerValidation": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosTrustedRootCertificate"
              }
            },
            "identityCertificateForClientAuthentication": { }
          }
        }
      ]
    },
    "microsoft.graph.macOSCertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSCertificateProfileBase",
          "description": "Mac OS certificate profile.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format."
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name Type."
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validity Period.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period."
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSScepCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.macOSCertificateProfileBase"
        },
        {
          "title": "macOSScepCertificateProfile",
          "description": "Mac OS SCEP certificate profile.",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage."
            },
            "keySize": {
              "description": "SCEP Key Size."
            },
            "hashAlgorithm": {
              "description": "SCEP Hash Algorithm."
            },
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "rootCertificate": { },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSTrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSTrustedRootCertificate",
          "description": "OS X Trusted Root Certificate configuration profile.",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate.",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSCustomConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSCustomConfiguration resource.",
          "type": "object",
          "properties": {
            "payloadName": {
              "description": "Name that is displayed to the user.",
              "type": "string"
            },
            "payloadFileName": {
              "description": "Payload file name (*.mobileconfig | *.xml).",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSGeneralDeviceConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSGeneralDeviceConfiguration resource.",
          "type": "object",
          "properties": {
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the CompliantAppsList."
            },
            "emailInDomainSuffixes": {
              "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "passwordBlockSimple": {
              "description": "Block simple passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a password must contain. Valid values 0 to 4",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity required before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity required before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required."
            },
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSWiFiConfiguration",
          "description": "By providing the configurations in this profile you can instruct the macOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user.",
          "type": "object",
          "properties": {
            "networkName": {
              "description": "Network Name",
              "type": "string"
            },
            "ssid": {
              "description": "This is the name of the Wi-Fi network that is broadcast to all devices.",
              "type": "string"
            },
            "connectAutomatically": {
              "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network.",
              "type": "boolean"
            },
            "connectWhenNetworkNameIsHidden": {
              "description": "Connect when the network is not broadcasting its name (SSID). When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices.",
              "type": "boolean"
            },
            "wiFiSecurityType": {
              "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
            },
            "proxySettings": {
              "description": "Proxy Type for this Wi-Fi connection"
            },
            "proxyManualAddress": {
              "description": "IP Address or DNS hostname of the proxy server when manual configuration is selected.",
              "type": "string"
            },
            "proxyManualPort": {
              "format": "int32",
              "description": "Port of the proxy server when manual configuration is selected.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "proxyAutomaticConfigurationUrl": {
              "description": "URL of the proxy server automatic configuration script when automatic configuration is selected. This URL is typically the location of PAC (Proxy Auto Configuration) file.",
              "type": "string"
            },
            "preSharedKey": {
              "description": "This is the pre-shared key for WPA Personal Wi-Fi network.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSEnterpriseWiFiConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.macOSWiFiConfiguration"
        },
        {
          "title": "macOSEnterpriseWiFiConfiguration",
          "description": "MacOS Wi-Fi WPA-Enterprise/WPA2-Enterprise configuration profile.",
          "type": "object",
          "properties": {
            "eapType": {
              "description": "Extensible Authentication Protocol (EAP). Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
            },
            "eapFastConfiguration": {
              "description": "EAP-FAST Configuration Option when EAP-FAST is the selected EAP Type."
            },
            "trustedServerCertificateNames": {
              "description": "Trusted server certificate names when EAP Type is configured to EAP-TLS/TTLS/FAST or PEAP. This is the common name used in the certificates issued by your trusted certificate authority (CA). If you provide this information, you can bypass the dynamic trust dialog that is displayed on end users devices when they connect to this Wi-Fi network.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "authenticationMethod": {
              "description": "Authentication Method when EAP Type is configured to PEAP or EAP-TTLS."
            },
            "innerAuthenticationProtocolForEapTtls": {
              "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password."
            },
            "outerIdentityPrivacyTemporaryValue": {
              "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS, EAP-FAST or PEAP. This property masks usernames with the text you enter. For example, if you use 'anonymous', each user that authenticates with this Wi-Fi connection using their real username is displayed as 'anonymous'.",
              "type": "string"
            },
            "rootCertificateForServerValidation": { },
            "identityCertificateForClientAuthentication": { }
          }
        }
      ]
    },
    "microsoft.graph.appleDeviceFeaturesConfigurationBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "appleDeviceFeaturesConfigurationBase",
          "description": "Apple device features configuration profile.",
          "type": "object",
          "properties": {
            "airPrintDestinations": {
              "description": "An array of AirPrint printers that should always be shown. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.airPrintDestination": {
      "title": "airPrintDestination",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IP Address of the AirPrint destination.",
          "type": "string"
        },
        "resourcePath": {
          "description": "The Resource Path associated with the printer. This corresponds to the rp parameter of the _ipps.tcp Bonjour record. For example: printers/Canon_MG5300_series, printers/Xerox_Phaser_7600, ipp/print, Epson_IPP_Printer.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The listening port of the AirPrint destination. If this key is not specified AirPrint will use the default port. Available in iOS 11.0 and later.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "forceTls": {
          "description": "If true AirPrint connections are secured by Transport Layer Security (TLS). Default is false. Available in iOS 11.0 and later.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.iosDeviceFeaturesConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleDeviceFeaturesConfigurationBase"
        },
        {
          "title": "iosDeviceFeaturesConfiguration",
          "description": "iOS Device Features Configuration Profile.",
          "type": "object",
          "properties": {
            "assetTagTemplate": {
              "description": "Asset tag information for the device, displayed on the login window and lock screen.",
              "type": "string"
            },
            "contentFilterSettings": {
              "description": "Gets or sets iOS Web Content Filter settings, supervised mode only"
            },
            "lockScreenFootnote": {
              "description": "A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.",
              "type": "string"
            },
            "homeScreenDockIcons": {
              "description": "A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "homeScreenPages": {
              "description": "A list of pages on the Home Screen. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "notificationSettings": {
              "description": "Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "singleSignOnSettings": {
              "description": "The Kerberos login settings that enable apps on receiving devices to authenticate smoothly."
            },
            "identityCertificateForClientAuthentication": { }
          }
        }
      ]
    },
    "microsoft.graph.iosWebContentFilterBase": {
      "title": "iosWebContentFilterBase",
      "type": "object"
    },
    "microsoft.graph.iosHomeScreenItem": {
      "title": "iosHomeScreenItem",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the app",
          "type": "string"
        }
      }
    },
    "microsoft.graph.iosHomeScreenPage": {
      "title": "iosHomeScreenPage",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the page",
          "type": "string"
        },
        "icons": {
          "description": "A list of apps and folders to appear on a page. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.iosHomeScreenItem"
          }
        }
      }
    },
    "microsoft.graph.iosNotificationSettings": {
      "title": "iosNotificationSettings",
      "type": "object",
      "properties": {
        "bundleID": {
          "description": "Bundle id of app to which to apply these notification settings.",
          "type": "string"
        },
        "appName": {
          "description": "Application name to be associated with the bundleID.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher to be associated with the bundleID.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether notifications are allowed for this app.",
          "type": "boolean"
        },
        "showInNotificationCenter": {
          "description": "Indicates whether notifications can be shown in notification center.",
          "type": "boolean"
        },
        "showOnLockScreen": {
          "description": "Indicates whether notifications can be shown on the lock screen.",
          "type": "boolean"
        },
        "alertType": {
          "description": "Indicates the type of alert for notifications for this app."
        },
        "badgesEnabled": {
          "description": "Indicates whether badges are allowed for this app.",
          "type": "boolean"
        },
        "soundsEnabled": {
          "description": "Indicates whether sounds are allowed for this app.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.iosSingleSignOnSettings": {
      "title": "iosSingleSignOnSettings",
      "type": "object",
      "properties": {
        "allowedAppsList": {
          "description": "List of app identifiers that are allowed to use this login. If this field is omitted, the login applies to all applications on the device. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "allowedUrls": {
          "description": "List of HTTP URLs that must be matched in order to use this login. With iOS 9.0 or later, a wildcard characters may be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The display name of login settings shown on the receiving device.",
          "type": "string"
        },
        "kerberosPrincipalName": {
          "description": "A Kerberos principal name. If not provided, the user is prompted for one during profile installation.",
          "type": "string"
        },
        "kerberosRealm": {
          "description": "A Kerberos realm name. Case sensitive.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.iosWebContentFilterSpecificWebsitesAccess": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosWebContentFilterBase"
        },
        {
          "title": "iosWebContentFilterSpecificWebsitesAccess",
          "type": "object",
          "properties": {
            "specificWebsitesOnly": {
              "description": "URL bookmarks which will be installed into built-in browser and user is only allowed to access websites through bookmarks. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosBookmark": {
      "title": "iosBookmark",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL allowed to access",
          "type": "string"
        },
        "bookmarkFolder": {
          "description": "The folder into which the bookmark should be added in Safari",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the bookmark",
          "type": "string"
        }
      }
    },
    "microsoft.graph.iosWebContentFilterAutoFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosWebContentFilterBase"
        },
        {
          "title": "iosWebContentFilterAutoFilter",
          "type": "object",
          "properties": {
            "allowedUrls": {
              "description": "Additional URLs allowed for access",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "blockedUrls": {
              "description": "Additional URLs blocked for access",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosHomeScreenFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosHomeScreenItem"
        },
        {
          "title": "iosHomeScreenFolder",
          "type": "object",
          "properties": {
            "pages": {
              "description": "Pages of Home Screen Layout Icons which must be Application Type. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosHomeScreenFolderPage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.iosHomeScreenFolderPage": {
      "title": "iosHomeScreenFolderPage",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the folder page",
          "type": "string"
        },
        "apps": {
          "description": "A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.iosHomeScreenApp"
          }
        }
      }
    },
    "microsoft.graph.iosHomeScreenApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.iosHomeScreenItem"
        },
        {
          "title": "iosHomeScreenApp",
          "type": "object",
          "properties": {
            "bundleID": {
              "description": "BundleID of app",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSDeviceFeaturesConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleDeviceFeaturesConfigurationBase"
        },
        {
          "title": "macOSDeviceFeaturesConfiguration",
          "description": "MacOS device features configuration profile.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.appleVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "appleVpnConfiguration",
          "description": "Apple VPN configuration profile.",
          "type": "object",
          "properties": {
            "connectionName": {
              "description": "Connection name displayed to the user.",
              "type": "string"
            },
            "connectionType": {
              "description": "Connection type."
            },
            "loginGroupOrDomain": {
              "description": "Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.",
              "type": "string"
            },
            "role": {
              "description": "Role when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "realm": {
              "description": "Realm when connection type is set to Pulse Secure.",
              "type": "string"
            },
            "server": {
              "$ref": "#/definitions/microsoft.graph.vpnServer"
            },
            "identifier": {
              "description": "Identifier provided by VPN vendor when connection type is set to Custom VPN. For example: Cisco AnyConnect uses an identifier of the form com.cisco.anyconnect.applevpn.plugin",
              "type": "string"
            },
            "customData": {
              "description": "Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements.",
              "type": "array",
              "items": { }
            },
            "enableSplitTunneling": {
              "description": "Send all network traffic through VPN.",
              "type": "boolean"
            },
            "authenticationMethod": {
              "description": "Authentication method for this VPN connection."
            },
            "enablePerApp": {
              "description": "Setting this to true creates Per-App VPN payload which can later be associated with Apps that can trigger this VPN conneciton on the end user's iOS device.",
              "type": "boolean"
            },
            "safariDomains": {
              "description": "Safari domains when this VPN per App setting is enabled. In addition to the apps associated with this VPN, Safari domains specified here will also be able to trigger this VPN connection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onDemandRules": {
              "description": "On-Demand Rules. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "proxyServer": {
              "description": "Proxy Server."
            }
          }
        }
      ]
    },
    "microsoft.graph.vpnOnDemandRule": {
      "title": "vpnOnDemandRule",
      "type": "object",
      "properties": {
        "ssids": {
          "description": "Network Service Set Identifiers (SSIDs).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsSearchDomains": {
          "description": "DNS Search Domains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "probeUrl": {
          "description": "A URL to probe. If this URL is successfully fetched (returning a 200 HTTP status code) without redirection, this rule matches.",
          "type": "string"
        },
        "action": {
          "description": "Action."
        },
        "domainAction": {
          "description": "Domain Action (Only applicable when Action is evaluate connection)."
        },
        "domains": {
          "description": "Domains (Only applicable when Action is evaluate connection).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "probeRequiredUrl": {
          "description": "Probe Required Url (Only applicable when Action is evaluate connection and DomainAction is connect if needed).",
          "type": "string"
        }
      }
    },
    "microsoft.graph.vpnProxyServer": {
      "title": "vpnProxyServer",
      "type": "object",
      "properties": {
        "automaticConfigurationScriptUrl": {
          "description": "Proxy's automatic configuration script url.",
          "type": "string"
        },
        "address": {
          "description": "Address.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "Port. Valid values 0 to 65535",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.windows81VpnProxyServer": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.vpnProxyServer"
        },
        {
          "title": "windows81VpnProxyServer",
          "type": "object",
          "properties": {
            "automaticallyDetectProxySettings": {
              "description": "Automatically detect proxy settings.",
              "type": "boolean"
            },
            "bypassProxyServerForLocalAddress": {
              "description": "Bypass proxy server for local address.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10VpnProxyServer": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.vpnProxyServer"
        },
        {
          "title": "windows10VpnProxyServer",
          "type": "object",
          "properties": {
            "bypassProxyServerForLocalAddress": {
              "description": "Bypass proxy server for local address.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleVpnConfiguration"
        },
        {
          "title": "iosVpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.macOSVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleVpnConfiguration"
        },
        {
          "title": "macOSVpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Mac device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsDefenderAdvancedThreatProtectionConfiguration",
          "description": "Windows Defender AdvancedThreatProtection Configuration.",
          "type": "object",
          "properties": {
            "advancedThreatProtectionOnboardingBlob": {
              "description": "Windows Defender AdvancedThreatProtection Onboarding Blob.",
              "type": "string"
            },
            "allowSampleSharing": {
              "description": "Windows Defender AdvancedThreatProtection \"Allow Sample Sharing\" Rule",
              "type": "boolean"
            },
            "enableExpeditedTelemetryReporting": {
              "description": "Expedite Windows Defender Advanced Threat Protection telemetry reporting frequency.",
              "type": "boolean"
            },
            "advancedThreatProtectionOffboardingBlob": {
              "description": "Windows Defender AdvancedThreatProtection Offboarding Blob.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10EndpointProtectionConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10EndpointProtectionConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the Windows10EndpointProtectionConfiguration resource.",
          "type": "object",
          "properties": {
            "defenderSecurityCenterDisableAppBrowserUI": {
              "description": "Used to disable the display of the app and browser protection area.",
              "type": "boolean"
            },
            "defenderSecurityCenterDisableFamilyUI": {
              "description": "Used to disable the display of the family options area.",
              "type": "boolean"
            },
            "defenderSecurityCenterDisableHealthUI": {
              "description": "Used to disable the display of the device performance and health area.",
              "type": "boolean"
            },
            "defenderSecurityCenterDisableNetworkUI": {
              "description": "Used to disable the display of the firewall and network protection area.",
              "type": "boolean"
            },
            "defenderSecurityCenterDisableVirusUI": {
              "description": "Used to disable the display of the virus and threat protection area.",
              "type": "boolean"
            },
            "defenderSecurityCenterOrganizationDisplayName": {
              "description": "The company name that is displayed to the users.",
              "type": "string"
            },
            "defenderSecurityCenterHelpEmail": {
              "description": "The email address that is displayed to users.",
              "type": "string"
            },
            "defenderSecurityCenterHelpPhone": {
              "description": "The phone number or Skype ID that is displayed to users.",
              "type": "string"
            },
            "defenderSecurityCenterHelpURL": {
              "description": "The help portal URL this is displayed to users.",
              "type": "string"
            },
            "defenderSecurityCenterNotificationsFromApp": {
              "description": "Notifications to show from the displayed areas of app"
            },
            "defenderSecurityCenterITContactDisplay": {
              "description": "Configure where to display IT contact information to end users."
            },
            "firewallBlockStatefulFTP": {
              "description": "Blocks stateful FTP connections to the device",
              "type": "boolean"
            },
            "firewallIdleTimeoutForSecurityAssociationInSeconds": {
              "format": "int32",
              "description": "Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "firewallPreSharedKeyEncodingMethod": {
              "description": "Select the preshared key encoding to be used"
            },
            "firewallIPSecExemptionsAllowNeighborDiscovery": {
              "description": "Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowICMP": {
              "description": "Configures IPSec exemptions to allow ICMP",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowRouterDiscovery": {
              "description": "Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowDHCP": {
              "description": "Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic",
              "type": "boolean"
            },
            "firewallCertificateRevocationListCheckMethod": {
              "description": "Specify how the certificate revocation list is to be enforced"
            },
            "firewallMergeKeyingModuleSettings": {
              "description": "If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set",
              "type": "boolean"
            },
            "firewallPacketQueueingMethod": {
              "description": "Configures how packet queueing should be applied in the tunnel gateway scenario"
            },
            "firewallProfileDomain": {
              "description": "Configures the firewall profile settings for domain networks"
            },
            "firewallProfilePublic": {
              "description": "Configures the firewall profile settings for public networks"
            },
            "firewallProfilePrivate": {
              "description": "Configures the firewall profile settings for private networks"
            },
            "defenderAttackSurfaceReductionExcludedPaths": {
              "description": "List of exe files and folders to be excluded from attack surface reduction rules",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderOfficeAppsOtherProcessInjectionType": {
              "description": "Value indicating the behavior of  Office applications injecting into other processes"
            },
            "defenderOfficeAppsExecutableContentCreationOrLaunchType": {
              "description": "Value indicating the behavior of Office applications/macros creating or launching executable content"
            },
            "defenderOfficeAppsLaunchChildProcessType": {
              "description": "Value indicating the behavior of Office application launching child processes"
            },
            "defenderOfficeMacroCodeAllowWin32ImportsType": {
              "description": "Value indicating the behavior of Win32 imports from Macro code in Office"
            },
            "defenderScriptObfuscatedMacroCodeType": {
              "description": "Value indicating the behavior of obfuscated js/vbs/ps/macro code"
            },
            "defenderScriptDownloadedPayloadExecutionType": {
              "description": "Value indicating the behavior of js/vbs executing payload downloaded from Internet"
            },
            "defenderEmailContentExecutionType": {
              "description": "Value indicating if execution of executable content (exe, dll, ps, js, vbs, etc) should be dropped from email(webmail/mail-client)"
            },
            "defenderGuardMyFoldersType": {
              "description": "Value indicating the behavior of protected folders"
            },
            "defenderGuardedFoldersAllowedAppPaths": {
              "description": "List of paths to exe that are allowed to access protected folders",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderAdditionalGuardedFolders": {
              "description": "List of folder paths to be added to the list of protected folders",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderNetworkProtectionType": {
              "description": "Value indicating the behavior of NetworkProtection"
            },
            "defenderExploitProtectionXml": {
              "format": "base64url",
              "description": "Xml content containing information regarding exploit protection details.",
              "type": "string"
            },
            "defenderExploitProtectionXmlFileName": {
              "description": "Name of the file from which DefenderExploitProtectionXml was obtained.",
              "type": "string"
            },
            "defenderSecurityCenterBlockExploitProtectionOverride": {
              "description": "Indicates whether or not to block user from overriding Exploit Protection settings.",
              "type": "boolean"
            },
            "appLockerApplicationControl": {
              "description": "Enables the Admin to choose what types of app to allow on devices."
            },
            "smartScreenEnableInShell": {
              "description": "Allows IT Admins to configure SmartScreen for Windows.",
              "type": "boolean"
            },
            "smartScreenBlockOverrideForFiles": {
              "description": "Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files.",
              "type": "boolean"
            },
            "applicationGuardEnabled": {
              "description": "Enable Windows Defender Application Guard",
              "type": "boolean"
            },
            "applicationGuardBlockFileTransfer": {
              "description": "Block clipboard to transfer image file, text file or neither of them"
            },
            "applicationGuardBlockNonEnterpriseContent": {
              "description": "Block enterprise sites to load non-enterprise content, such as third party plug-ins",
              "type": "boolean"
            },
            "applicationGuardAllowPersistence": {
              "description": "Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)",
              "type": "boolean"
            },
            "applicationGuardForceAuditing": {
              "description": "Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)",
              "type": "boolean"
            },
            "applicationGuardBlockClipboardSharing": {
              "description": "Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways."
            },
            "applicationGuardAllowPrintToPDF": {
              "description": "Allow printing to PDF from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToXPS": {
              "description": "Allow printing to XPS from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToLocalPrinters": {
              "description": "Allow printing to Local Printers from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToNetworkPrinters": {
              "description": "Allow printing to Network Printers from Container",
              "type": "boolean"
            },
            "applicationGuardAllowVirtualGPU": {
              "description": "Allow application guard to use virtual GPU",
              "type": "boolean"
            },
            "bitLockerDisableWarningForOtherDiskEncryption": {
              "description": "Allows the Admin to disable the warning prompt for other disk encryption on the user machines.",
              "type": "boolean"
            },
            "bitLockerEnableStorageCardEncryptionOnMobile": {
              "description": "Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.",
              "type": "boolean"
            },
            "bitLockerEncryptDevice": {
              "description": "Allows the admin to require encryption to be turned on using BitLocker.",
              "type": "boolean"
            },
            "bitLockerSystemDrivePolicy": {
              "description": "BitLocker System Drive Policy."
            },
            "bitLockerFixedDrivePolicy": {
              "description": "BitLocker Fixed Drive Policy."
            },
            "bitLockerRemovableDrivePolicy": {
              "description": "BitLocker Removable Drive Policy."
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsFirewallNetworkProfile": {
      "title": "windowsFirewallNetworkProfile",
      "type": "object",
      "properties": {
        "firewallEnabled": {
          "description": "Turn on the firewall and advanced security enforcement"
        },
        "stealthModeBlocked": {
          "description": "Prevent the server from operating in stealth mode",
          "type": "boolean"
        },
        "incomingTrafficBlocked": {
          "description": "Configures the firewall to block all incoming traffic regardless of other policy settings",
          "type": "boolean"
        },
        "unicastResponsesToMulticastBroadcastsBlocked": {
          "description": "Configures the firewall to block unicast responses to multicast broadcast traffic",
          "type": "boolean"
        },
        "inboundNotificationsBlocked": {
          "description": "Prevents the firewall from displaying notifications when an application is blocked from listening on a port",
          "type": "boolean"
        },
        "authorizedApplicationRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge authorized application rules from group policy with those from local store instead of ignoring the local store rules",
          "type": "boolean"
        },
        "globalPortRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge global port rules from group policy with those from local store instead of ignoring the local store rules",
          "type": "boolean"
        },
        "connectionSecurityRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge connection security rules from group policy with those from local store instead of ignoring the local store rules",
          "type": "boolean"
        },
        "outboundConnectionsBlocked": {
          "description": "Configures the firewall to block all outgoing connections by default",
          "type": "boolean"
        },
        "inboundConnectionsBlocked": {
          "description": "Configures the firewall to block all incoming connections by default",
          "type": "boolean"
        },
        "securedPacketExemptionAllowed": {
          "description": "Configures the firewall to allow the host computer to respond to unsolicited network traffic of that traffic is secured by IPSec even when stealthModeBlocked is set to true",
          "type": "boolean"
        },
        "policyRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge Firewall Rule policies from group policy with those from local store instead of ignoring the local store rules",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.bitLockerSystemDrivePolicy": {
      "title": "bitLockerSystemDrivePolicy",
      "type": "object",
      "properties": {
        "encryptionMethod": {
          "description": "Select the encryption method for operating system drives."
        },
        "startupAuthenticationRequired": {
          "description": "Require additional authentication at startup.",
          "type": "boolean"
        },
        "startupAuthenticationBlockWithoutTpmChip": {
          "description": "Indicates whether to allow BitLocker without a compatible TPM (requires a password or a startup key on a USB flash drive).",
          "type": "boolean"
        },
        "startupAuthenticationTpmUsage": {
          "description": "Indicates if TPM startup is allowed/required/disallowed."
        },
        "startupAuthenticationTpmPinUsage": {
          "description": "Indicates if TPM startup pin is allowed/required/disallowed."
        },
        "startupAuthenticationTpmKeyUsage": {
          "description": "Indicates if TPM startup key is allowed/required/disallowed."
        },
        "startupAuthenticationTpmPinAndKeyUsage": {
          "description": "Indicates if TPM startup pin key and key are allowed/required/disallowed."
        },
        "minimumPinLength": {
          "format": "int32",
          "description": "Indicates the minimum length of startup pin. Valid values 4 to 20",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "recoveryOptions": {
          "description": "Allows to recover BitLocker encrypted operating system drives in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker."
        },
        "prebootRecoveryEnableMessageAndUrl": {
          "description": "Enable pre-boot recovery message and Url. If requireStartupAuthentication is false, this value does not affect.",
          "type": "boolean"
        },
        "prebootRecoveryMessage": {
          "description": "Defines a custom recovery message.",
          "type": "string"
        },
        "prebootRecoveryUrl": {
          "description": "Defines a custom recovery URL.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.bitLockerRecoveryOptions": {
      "title": "bitLockerRecoveryOptions",
      "type": "object",
      "properties": {
        "blockDataRecoveryAgent": {
          "description": "Indicates whether to block certificate-based data recovery agent.",
          "type": "boolean"
        },
        "recoveryPasswordUsage": {
          "description": "Indicates whether users are allowed or required to generate a 48-digit recovery password for fixed or system disk."
        },
        "recoveryKeyUsage": {
          "description": "Indicates whether users are allowed or required to generate a 256-bit recovery key for fixed or system disk."
        },
        "hideRecoveryOptions": {
          "description": "Indicates whether or not to allow showing recovery options in BitLocker Setup Wizard for fixed or system disk.",
          "type": "boolean"
        },
        "enableRecoveryInformationSaveToStore": {
          "description": "Indicates whether or not to allow BitLocker recovery information to store in AD DS.",
          "type": "boolean"
        },
        "recoveryInformationToStore": {
          "description": "Configure what pieces of BitLocker recovery information are stored to AD DS."
        },
        "enableBitLockerAfterRecoveryInformationToStore": {
          "description": "Indicates whether or not to enable BitLocker until recovery information is stored in AD DS.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.bitLockerFixedDrivePolicy": {
      "title": "bitLockerFixedDrivePolicy",
      "type": "object",
      "properties": {
        "encryptionMethod": {
          "description": "Select the encryption method for fixed drives."
        },
        "requireEncryptionForWriteAccess": {
          "description": "This policy setting determines whether BitLocker protection is required for fixed data drives to be writable on a computer.",
          "type": "boolean"
        },
        "recoveryOptions": {
          "description": "This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker."
        }
      }
    },
    "microsoft.graph.bitLockerRemovableDrivePolicy": {
      "title": "bitLockerRemovableDrivePolicy",
      "type": "object",
      "properties": {
        "encryptionMethod": {
          "description": "Select the encryption method for removable  drives."
        },
        "requireEncryptionForWriteAccess": {
          "description": "Indicates whether to block write access to devices configured in another organization.  If requireEncryptionForWriteAccess is false, this value does not affect.",
          "type": "boolean"
        },
        "blockCrossOrganizationWriteAccess": {
          "description": "This policy setting determines whether BitLocker protection is required for removable data drives to be writable on a computer.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.windows10GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10GeneralConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10GeneralConfiguration resource.",
          "type": "object",
          "properties": {
            "enableAutomaticRedeployment": {
              "description": "Allow users with administrative rights to delete all user data and settings using CTRL + Win + R at the device lock screen so that the device can be automatically re-configured and re-enrolled into management.",
              "type": "boolean"
            },
            "assignedAccessSingleModeUserName": {
              "description": "This policy setting allows to define the user account that will be locked to Single App Kiosk Mode.",
              "type": "string"
            },
            "assignedAccessSingleModeAppUserModelId": {
              "description": "This policy setting allows to define the Application User Model ID (AUMID) that will be locked to Single App Kiosk Mode.",
              "type": "string"
            },
            "microsoftAccountSignInAssistantSettings": {
              "description": "Controls the Microsoft Account Sign-In Assistant (wlidsvc) NT service."
            },
            "authenticationAllowSecondaryDevice": {
              "description": "Allows secondary authentication devices to work with Windows.",
              "type": "boolean"
            },
            "authenticationAllowFIDODevice": {
              "description": "Indicates whether or not to allow authentication using FIDO device (https://fidoalliance.org/)",
              "type": "boolean"
            },
            "cryptographyAllowFipsAlgorithmPolicy": {
              "description": "Specify whether to allow or disallow the Federal Information Processing Standard (FIPS) policy.",
              "type": "boolean"
            },
            "displayAppListWithGdiDPIScalingTurnedOn": {
              "description": "List of legacy applications that have GDI DPI Scaling turned on.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "displayAppListWithGdiDPIScalingTurnedOff": {
              "description": "List of legacy applications that have GDI DPI Scaling turned off.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enterpriseCloudPrintDiscoveryEndPoint": {
              "description": "Endpoint for discovering cloud printers.",
              "type": "string"
            },
            "enterpriseCloudPrintOAuthAuthority": {
              "description": "Authentication endpoint for acquiring OAuth tokens.",
              "type": "string"
            },
            "enterpriseCloudPrintOAuthClientIdentifier": {
              "description": "GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority.",
              "type": "string"
            },
            "enterpriseCloudPrintResourceIdentifier": {
              "description": "OAuth resource URI for print service as configured in the Azure portal.",
              "type": "string"
            },
            "enterpriseCloudPrintDiscoveryMaxLimit": {
              "format": "int32",
              "description": "Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": {
              "description": "OAuth resource URI for printer discovery service as configured in Azure portal.",
              "type": "string"
            },
            "messagingBlockSync": {
              "description": "Indicates whether or not to block text message back up and restore and Messaging Everywhere.",
              "type": "boolean"
            },
            "messagingBlockMMS": {
              "description": "Indicates whether or not to block the the MMS send/receive functionality on the device.",
              "type": "boolean"
            },
            "messagingBlockRichCommunicationServices": {
              "description": "Indicates whether or not to block the the RCS send/receive functionality on the device.",
              "type": "boolean"
            },
            "searchBlockDiacritics": {
              "description": "Specifies if search can use diacritics.",
              "type": "boolean"
            },
            "searchDisableAutoLanguageDetection": {
              "description": "Specifies whether to use automatic language detection when indexing content and properties.",
              "type": "boolean"
            },
            "searchDisableIndexingEncryptedItems": {
              "description": "Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer.",
              "type": "boolean"
            },
            "searchEnableRemoteQueries": {
              "description": "Indicates whether or not to block remote queries of this computer’s index.",
              "type": "boolean"
            },
            "searchDisableUseLocation": {
              "description": "Specifies if search can use location information.",
              "type": "boolean"
            },
            "searchDisableIndexerBackoff": {
              "description": "Indicates whether or not to disable the search indexer backoff feature.",
              "type": "boolean"
            },
            "searchDisableIndexingRemovableDrive": {
              "description": "Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed.",
              "type": "boolean"
            },
            "searchEnableAutomaticIndexSizeManangement": {
              "description": "Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops.",
              "type": "boolean"
            },
            "securityBlockAzureADJoinedDevicesAutoEncryption": {
              "description": "Specify whether to allow automatic device encryption during OOBE when the device is Azure AD joined (desktop only).",
              "type": "boolean"
            },
            "diagnosticsDataSubmissionMode": {
              "description": "Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson."
            },
            "oneDriveDisableFileSync": {
              "description": "Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive.",
              "type": "boolean"
            },
            "systemTelemetryProxyServer": {
              "description": "Gets or sets the fully qualified domain name (FQDN) or IP address of a proxy server to forward Connected User Experiences and Telemetry requests.",
              "type": "string"
            },
            "inkWorkspaceAccess": {
              "description": "Controls the user access to the ink workspace, from the desktop and from above the lock screen."
            },
            "inkWorkspaceBlockSuggestedApps": {
              "description": "Specify whether to show recommended app suggestions in the ink workspace.",
              "type": "boolean"
            },
            "smartScreenEnableAppInstallControl": {
              "description": "Allows IT Admins to control whether users are allowed to install apps from places other than the Store.",
              "type": "boolean"
            },
            "personalizationDesktopImageUrl": {
              "description": "A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image.",
              "type": "string"
            },
            "personalizationLockScreenImageUrl": {
              "description": "A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.",
              "type": "string"
            },
            "bluetoothAllowedServices": {
              "description": "Specify a list of allowed Bluetooth services and profiles in hex formatted strings.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bluetoothBlockAdvertising": {
              "description": "Whether or not to Block the user from using bluetooth advertising.",
              "type": "boolean"
            },
            "bluetoothBlockDiscoverableMode": {
              "description": "Whether or not to Block the user from using bluetooth discoverable mode.",
              "type": "boolean"
            },
            "bluetoothBlockPrePairing": {
              "description": "Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device.",
              "type": "boolean"
            },
            "edgeBlockAutofill": {
              "description": "Indicates whether or not to block auto fill.",
              "type": "boolean"
            },
            "edgeBlocked": {
              "description": "Indicates whether or not to Block the user from using the Edge browser.",
              "type": "boolean"
            },
            "edgeCookiePolicy": {
              "description": "Indicates which cookies to block in the Edge browser."
            },
            "edgeBlockDeveloperTools": {
              "description": "Indicates whether or not to block developer tools in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockSendingDoNotTrackHeader": {
              "description": "Indicates whether or not to Block the user from sending the do not track header.",
              "type": "boolean"
            },
            "edgeBlockExtensions": {
              "description": "Indicates whether or not to block extensions in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockInPrivateBrowsing": {
              "description": "Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockJavaScript": {
              "description": "Indicates whether or not to Block the user from using JavaScript.",
              "type": "boolean"
            },
            "edgeBlockPasswordManager": {
              "description": "Indicates whether or not to Block password manager.",
              "type": "boolean"
            },
            "edgeBlockAddressBarDropdown": {
              "description": "Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services.",
              "type": "boolean"
            },
            "edgeBlockCompatibilityList": {
              "description": "Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues.",
              "type": "boolean"
            },
            "edgeClearBrowsingDataOnExit": {
              "description": "Clear browsing data on exiting Microsoft Edge.",
              "type": "boolean"
            },
            "edgeAllowStartPagesModification": {
              "description": "Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge.",
              "type": "boolean"
            },
            "edgeDisableFirstRunPage": {
              "description": "Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page.",
              "type": "boolean"
            },
            "edgeBlockLiveTileDataCollection": {
              "description": "Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge.",
              "type": "boolean"
            },
            "edgeSyncFavoritesWithInternetExplorer": {
              "description": "Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers.",
              "type": "boolean"
            },
            "cellularBlockDataWhenRoaming": {
              "description": "Whether or not to Block the user from using data over cellular while roaming.",
              "type": "boolean"
            },
            "cellularBlockVpn": {
              "description": "Whether or not to Block the user from using VPN over cellular.",
              "type": "boolean"
            },
            "cellularBlockVpnWhenRoaming": {
              "description": "Whether or not to Block the user from using VPN when roaming over cellular.",
              "type": "boolean"
            },
            "cellularData": {
              "description": "Whether or not to allow the cellular data channel on the device. If not configured, the cellular data channel is allowed and the user can turn it off."
            },
            "defenderBlockEndUserAccess": {
              "description": "Whether or not to block end user access to Defender.",
              "type": "boolean"
            },
            "defenderDaysBeforeDeletingQuarantinedMalware": {
              "format": "int32",
              "description": "Number of days before deleting quarantined malware. Valid values 0 to 90",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderDetectedMalwareActions": {
              "description": "Gets or sets Defender’s actions to take on detected Malware per threat level."
            },
            "defenderSystemScanSchedule": {
              "description": "Defender day of the week for the system scan."
            },
            "defenderFilesAndFoldersToExclude": {
              "description": "Files and folder to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderFileExtensionsToExclude": {
              "description": "File extensions to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderScanMaxCpu": {
              "format": "int32",
              "description": "Max CPU usage percentage during scan. Valid values 0 to 100",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderMonitorFileActivity": {
              "description": "Value for monitoring file activity."
            },
            "defenderPotentiallyUnwantedAppAction": {
              "description": "Gets or sets Defender’s action to take on Potentially Unwanted Application (PUA), which includes software with behaviors of ad-injection, software bundling, persistent solicitation for payment or subscription, etc. Defender alerts user when PUA is being downloaded or attempts to install itself. Added in Windows 10 for desktop."
            },
            "defenderProcessesToExclude": {
              "description": "Processes to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderPromptForSampleSubmission": {
              "description": "The configuration for how to prompt user for sample submission."
            },
            "defenderRequireBehaviorMonitoring": {
              "description": "Indicates whether or not to require behavior monitoring.",
              "type": "boolean"
            },
            "defenderRequireCloudProtection": {
              "description": "Indicates whether or not to require cloud protection.",
              "type": "boolean"
            },
            "defenderRequireNetworkInspectionSystem": {
              "description": "Indicates whether or not to require network inspection system.",
              "type": "boolean"
            },
            "defenderRequireRealTimeMonitoring": {
              "description": "Indicates whether or not to require real time monitoring.",
              "type": "boolean"
            },
            "defenderScanArchiveFiles": {
              "description": "Indicates whether or not to scan archive files.",
              "type": "boolean"
            },
            "defenderScanDownloads": {
              "description": "Indicates whether or not to scan downloads.",
              "type": "boolean"
            },
            "defenderScanNetworkFiles": {
              "description": "Indicates whether or not to scan files opened from a network folder.",
              "type": "boolean"
            },
            "defenderScanIncomingMail": {
              "description": "Indicates whether or not to scan incoming mail messages.",
              "type": "boolean"
            },
            "defenderScanMappedNetworkDrivesDuringFullScan": {
              "description": "Indicates whether or not to scan mapped network drives during full scan.",
              "type": "boolean"
            },
            "defenderScanRemovableDrivesDuringFullScan": {
              "description": "Indicates whether or not to scan removable drives during full scan.",
              "type": "boolean"
            },
            "defenderScanScriptsLoadedInInternetExplorer": {
              "description": "Indicates whether or not to scan scripts loaded in Internet Explorer browser.",
              "type": "boolean"
            },
            "defenderSignatureUpdateIntervalInHours": {
              "format": "int32",
              "description": "The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderScanType": {
              "description": "The defender system scan type."
            },
            "defenderScheduledScanTime": {
              "format": "time",
              "description": "The defender time for the system scan.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "defenderScheduledQuickScanTime": {
              "format": "time",
              "description": "The time to perform a daily quick scan.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "defenderCloudBlockLevel": {
              "description": "Specifies the level of cloud-delivered protection."
            },
            "defenderCloudExtendedTimeout": {
              "format": "int32",
              "description": "Timeout extension for file scanning by the cloud. Valid values 0 to 50",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lockScreenAllowTimeoutConfiguration": {
              "description": "Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored.",
              "type": "boolean"
            },
            "lockScreenBlockActionCenterNotifications": {
              "description": "Indicates whether or not to block action center notifications over lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockCortana": {
              "description": "Indicates whether or not the user can interact with Cortana using speech while the system is locked.",
              "type": "boolean"
            },
            "lockScreenBlockToastNotifications": {
              "description": "Indicates whether to allow toast notifications above the device lock screen.",
              "type": "boolean"
            },
            "lockScreenTimeoutInSeconds": {
              "format": "int32",
              "description": "Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordBlockSimple": {
              "description": "Specify whether PINs or passwords such as \"1111\" or \"1234\" are allowed. For Windows 10 desktops, it also controls the use of picture passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "The password expiration in days. Valid values 0 to 730",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "The minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent reuse of. Valid values 0 to 50",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require the user to have a password.",
              "type": "boolean"
            },
            "passwordRequireWhenResumeFromIdleState": {
              "description": "Indicates whether or not to require a password upon resuming from an idle state.",
              "type": "boolean"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "The number of sign in failures before factory reset. Valid values 0 to 999",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "privacyAdvertisingId": {
              "description": "Enables or disables the use of advertising ID. Added in Windows 10, version 1607."
            },
            "privacyAutoAcceptPairingAndConsentPrompts": {
              "description": "Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps.",
              "type": "boolean"
            },
            "privacyBlockInputPersonalization": {
              "description": "Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications.",
              "type": "boolean"
            },
            "startBlockUnpinningAppsFromTaskbar": {
              "description": "Indicates whether or not to block the user from unpinning apps from taskbar.",
              "type": "boolean"
            },
            "startMenuAppListVisibility": {
              "description": "Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app."
            },
            "startMenuHideChangeAccountSettings": {
              "description": "Enabling this policy hides the change account setting from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideFrequentlyUsedApps": {
              "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideHibernate": {
              "description": "Enabling this policy hides hibernate from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideLock": {
              "description": "Enabling this policy hides lock from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHidePowerButton": {
              "description": "Enabling this policy hides the power button from appearing in the start menu.",
              "type": "boolean"
            },
            "startMenuHideRecentJumpLists": {
              "description": "Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideRecentlyAddedApps": {
              "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideRestartOptions": {
              "description": "Enabling this policy hides “Restart/Update and Restart” from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideShutDown": {
              "description": "Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSignOut": {
              "description": "Enabling this policy hides sign out from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSleep": {
              "description": "Enabling this policy hides sleep from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSwitchAccount": {
              "description": "Enabling this policy hides switch account from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideUserTile": {
              "description": "Enabling this policy hides the user tile from appearing in the start menu.",
              "type": "boolean"
            },
            "startMenuLayoutEdgeAssetsXml": {
              "format": "base64url",
              "description": "This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array.",
              "type": "string"
            },
            "startMenuLayoutXml": {
              "format": "base64url",
              "description": "Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format.",
              "type": "string"
            },
            "startMenuMode": {
              "description": "Allows admins to decide how the Start menu is displayed."
            },
            "startMenuPinnedFolderDocuments": {
              "description": "Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderDownloads": {
              "description": "Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderFileExplorer": {
              "description": "Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu."
            },
            "startMenuPinnedFolderHomeGroup": {
              "description": "Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderMusic": {
              "description": "Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderNetwork": {
              "description": "Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderPersonalFolder": {
              "description": "Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu."
            },
            "startMenuPinnedFolderPictures": {
              "description": "Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderSettings": {
              "description": "Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu."
            },
            "startMenuPinnedFolderVideos": {
              "description": "Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu."
            },
            "settingsBlockSettingsApp": {
              "description": "Indicates whether or not to block access to Settings app.",
              "type": "boolean"
            },
            "settingsBlockSystemPage": {
              "description": "Indicates whether or not to block access to System in Settings app.",
              "type": "boolean"
            },
            "settingsBlockDevicesPage": {
              "description": "Indicates whether or not to block access to Devices in Settings app.",
              "type": "boolean"
            },
            "settingsBlockNetworkInternetPage": {
              "description": "Indicates whether or not to block access to Network & Internet in Settings app.",
              "type": "boolean"
            },
            "settingsBlockPersonalizationPage": {
              "description": "Indicates whether or not to block access to Personalization in Settings app.",
              "type": "boolean"
            },
            "settingsBlockAccountsPage": {
              "description": "Indicates whether or not to block access to Accounts in Settings app.",
              "type": "boolean"
            },
            "settingsBlockTimeLanguagePage": {
              "description": "Indicates whether or not to block access to Time & Language in Settings app.",
              "type": "boolean"
            },
            "settingsBlockEaseOfAccessPage": {
              "description": "Indicates whether or not to block access to Ease of Access in Settings app.",
              "type": "boolean"
            },
            "settingsBlockPrivacyPage": {
              "description": "Indicates whether or not to block access to Privacy in Settings app.",
              "type": "boolean"
            },
            "settingsBlockUpdateSecurityPage": {
              "description": "Indicates whether or not to block access to Update & Security in Settings app.",
              "type": "boolean"
            },
            "settingsBlockAppsPage": {
              "description": "Indicates whether or not to block access to Apps in Settings app.",
              "type": "boolean"
            },
            "settingsBlockGamingPage": {
              "description": "Indicates whether or not to block access to Gaming in Settings app.",
              "type": "boolean"
            },
            "windowsSpotlightBlockConsumerSpecificFeatures": {
              "description": "Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles.",
              "type": "boolean"
            },
            "windowsSpotlightBlocked": {
              "description": "Allows IT admins to turn off all Windows Spotlight features",
              "type": "boolean"
            },
            "windowsSpotlightBlockOnActionCenter": {
              "description": "Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed",
              "type": "boolean"
            },
            "windowsSpotlightBlockTailoredExperiences": {
              "description": "Block personalized content in Windows spotlight based on user’s device usage.",
              "type": "boolean"
            },
            "windowsSpotlightBlockThirdPartyNotifications": {
              "description": "Block third party content delivered via Windows Spotlight",
              "type": "boolean"
            },
            "windowsSpotlightBlockWelcomeExperience": {
              "description": "Block Windows Spotlight Windows welcome experience",
              "type": "boolean"
            },
            "windowsSpotlightBlockWindowsTips": {
              "description": "Allows IT admins to turn off the popup of Windows Tips.",
              "type": "boolean"
            },
            "windowsSpotlightConfigureOnLockScreen": {
              "description": "Specifies the type of Spotlight"
            },
            "networkProxyApplySettingsDeviceWide": {
              "description": "If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that’s enrolled into MDM.",
              "type": "boolean"
            },
            "networkProxyDisableAutoDetect": {
              "description": "Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script.",
              "type": "boolean"
            },
            "networkProxyAutomaticConfigurationUrl": {
              "description": "Address to the proxy auto-config (PAC) script you want to use.",
              "type": "string"
            },
            "networkProxyServer": {
              "description": "Specifies manual proxy server settings."
            },
            "accountsBlockAddingNonMicrosoftAccountEmail": {
              "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
              "type": "boolean"
            },
            "antiTheftModeBlocked": {
              "description": "Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only).",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Whether or not to Block the user from using bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Whether or not to Block the user from accessing the camera of the device.",
              "type": "boolean"
            },
            "connectedDevicesServiceBlocked": {
              "description": "Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences.",
              "type": "boolean"
            },
            "certificatesBlockManualRootCertificateInstallation": {
              "description": "Whether or not to Block the user from doing manual root certificate installation.",
              "type": "boolean"
            },
            "copyPasteBlocked": {
              "description": "Whether or not to Block the user from using copy paste.",
              "type": "boolean"
            },
            "cortanaBlocked": {
              "description": "Whether or not to Block the user from using Cortana.",
              "type": "boolean"
            },
            "deviceManagementBlockFactoryResetOnMobile": {
              "description": "Indicates whether or not to Block the user from resetting their phone.",
              "type": "boolean"
            },
            "deviceManagementBlockManualUnenroll": {
              "description": "Indicates whether or not to Block the user from doing manual un-enrollment from device management.",
              "type": "boolean"
            },
            "safeSearchFilter": {
              "description": "Specifies what filter level of safe search is required."
            },
            "edgeBlockPopups": {
              "description": "Indicates whether or not to block popups.",
              "type": "boolean"
            },
            "edgeBlockSearchSuggestions": {
              "description": "Indicates whether or not to Block the user from using the search suggestions in the address bar.",
              "type": "boolean"
            },
            "edgeBlockSendingIntranetTrafficToInternetExplorer": {
              "description": "Indicates whether or not to Block the user from sending Intranet traffic to Internet Explorer from Edge.",
              "type": "boolean"
            },
            "edgeRequireSmartScreen": {
              "description": "Indicates whether or not to Require the user to use the smart screen filter.",
              "type": "boolean"
            },
            "edgeEnterpriseModeSiteListLocation": {
              "description": "Indicates the enterprise mode site list location. Could be a local file, local network or http location.",
              "type": "string"
            },
            "edgeFirstRunUrl": {
              "description": "The first run URL for when Edge browser is opened for the first time.",
              "type": "string"
            },
            "edgeSearchEngine": {
              "description": "Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set."
            },
            "edgeHomepageUrls": {
              "description": "The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "edgeBlockAccessToAboutFlags": {
              "description": "Indicates whether or not to prevent access to about flags on Edge browser.",
              "type": "boolean"
            },
            "smartScreenBlockPromptOverride": {
              "description": "Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites.",
              "type": "boolean"
            },
            "smartScreenBlockPromptOverrideForFiles": {
              "description": "Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files",
              "type": "boolean"
            },
            "webRtcBlockLocalhostIpAddress": {
              "description": "Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC",
              "type": "boolean"
            },
            "internetSharingBlocked": {
              "description": "Indicates whether or not to Block the user from using internet sharing.",
              "type": "boolean"
            },
            "settingsBlockAddProvisioningPackage": {
              "description": "Indicates whether or not to block the user from installing provisioning packages.",
              "type": "boolean"
            },
            "settingsBlockRemoveProvisioningPackage": {
              "description": "Indicates whether or not to block the runtime configuration agent from removing provisioning packages.",
              "type": "boolean"
            },
            "settingsBlockChangeSystemTime": {
              "description": "Indicates whether or not to block the user from changing date and time settings.",
              "type": "boolean"
            },
            "settingsBlockEditDeviceName": {
              "description": "Indicates whether or not to block the user from editing the device name.",
              "type": "boolean"
            },
            "settingsBlockChangeRegion": {
              "description": "Indicates whether or not to block the user from changing the region settings.",
              "type": "boolean"
            },
            "settingsBlockChangeLanguage": {
              "description": "Indicates whether or not to block the user from changing the language settings.",
              "type": "boolean"
            },
            "settingsBlockChangePowerSleep": {
              "description": "Indicates whether or not to block the user from changing power and sleep settings.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to Block the user from location services.",
              "type": "boolean"
            },
            "microsoftAccountBlocked": {
              "description": "Indicates whether or not to Block a Microsoft account.",
              "type": "boolean"
            },
            "microsoftAccountBlockSettingsSync": {
              "description": "Indicates whether or not to Block Microsoft account settings sync.",
              "type": "boolean"
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to Block the user from using near field communication.",
              "type": "boolean"
            },
            "resetProtectionModeBlocked": {
              "description": "Indicates whether or not to Block the user from reset protection mode.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to Block the user from taking Screenshots.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to Block the user from using removable storage.",
              "type": "boolean"
            },
            "storageRequireMobileDeviceEncryption": {
              "description": "Indicating whether or not to require encryption on a mobile device.",
              "type": "boolean"
            },
            "usbBlocked": {
              "description": "Indicates whether or not to Block the user from USB connection.",
              "type": "boolean"
            },
            "voiceRecordingBlocked": {
              "description": "Indicates whether or not to Block the user from voice recording.",
              "type": "boolean"
            },
            "wiFiBlockAutomaticConnectHotspots": {
              "description": "Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "wiFiBlocked": {
              "description": "Indicates whether or not to Block the user from using Wi-Fi.",
              "type": "boolean"
            },
            "wiFiBlockManualConfiguration": {
              "description": "Indicates whether or not to Block the user from using Wi-Fi manual configuration.",
              "type": "boolean"
            },
            "wiFiScanInterval": {
              "format": "int32",
              "description": "Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "wirelessDisplayBlockProjectionToThisDevice": {
              "description": "Indicates whether or not to allow other devices from discovering this PC for projection.",
              "type": "boolean"
            },
            "wirelessDisplayBlockUserInputFromReceiver": {
              "description": "Indicates whether or not to allow user input from wireless display receiver.",
              "type": "boolean"
            },
            "wirelessDisplayRequirePinForPairing": {
              "description": "Indicates whether or not to require a PIN for new devices to initiate pairing.",
              "type": "boolean"
            },
            "windowsStoreBlocked": {
              "description": "Indicates whether or not to Block the user from using the Windows store.",
              "type": "boolean"
            },
            "appsAllowTrustedAppsSideloading": {
              "description": "Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded."
            },
            "windowsStoreBlockAutoUpdate": {
              "description": "Indicates whether or not to block automatic update of apps from Windows Store.",
              "type": "boolean"
            },
            "developerUnlockSetting": {
              "description": "Indicates whether or not to allow developer unlock."
            },
            "sharedUserAppDataAllowed": {
              "description": "Indicates whether or not to block multiple users of the same app to share data.",
              "type": "boolean"
            },
            "appsBlockWindowsStoreOriginatedApps": {
              "description": "Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded.",
              "type": "boolean"
            },
            "windowsStoreEnablePrivateStoreOnly": {
              "description": "Indicates whether or not to enable Private Store Only.",
              "type": "boolean"
            },
            "storageRestrictAppDataToSystemVolume": {
              "description": "Indicates whether application data is restricted to the system drive.",
              "type": "boolean"
            },
            "storageRestrictAppInstallToSystemVolume": {
              "description": "Indicates whether the installation of applications is restricted to the system drive.",
              "type": "boolean"
            },
            "gameDvrBlocked": {
              "description": "Indicates whether or not to block DVR and broadcasting.",
              "type": "boolean"
            },
            "experienceBlockDeviceDiscovery": {
              "description": "Indicates whether or not to enable device discovery UX.",
              "type": "boolean"
            },
            "experienceBlockErrorDialogWhenNoSIM": {
              "description": "Indicates whether or not to allow the error dialog from displaying if no SIM card is detected.",
              "type": "boolean"
            },
            "experienceBlockTaskSwitcher": {
              "description": "Indicates whether or not to enable task switching on the device.",
              "type": "boolean"
            },
            "logonBlockFastUserSwitching": {
              "description": "Disables the ability to quickly switch between users that are logged on simultaneously without logging off.",
              "type": "boolean"
            },
            "assignedAccessMultiModeProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsAssignedAccessProfile"
              }
            },
            "privacyAccessControls": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsPrivacyDataAccessControlItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.defenderDetectedMalwareActions": {
      "title": "defenderDetectedMalwareActions",
      "type": "object",
      "properties": {
        "lowSeverity": {
          "description": "Indicates a Defender action to take for low severity Malware threat detected."
        },
        "moderateSeverity": {
          "description": "Indicates a Defender action to take for moderate severity Malware threat detected."
        },
        "highSeverity": {
          "description": "Indicates a Defender action to take for high severity Malware threat detected."
        },
        "severeSeverity": {
          "description": "Indicates a Defender action to take for severe severity Malware threat detected."
        }
      }
    },
    "microsoft.graph.windows10NetworkProxyServer": {
      "title": "windows10NetworkProxyServer",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address to the proxy server. Specify an address in the format <server>[“:”<port>]",
          "type": "string"
        },
        "exceptions": {
          "description": "Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useForLocalAddresses": {
          "description": "Specifies whether the proxy server should be used for local (intranet) addresses.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.edgeSearchEngineBase": {
      "title": "edgeSearchEngineBase",
      "type": "object"
    },
    "microsoft.graph.edgeSearchEngineCustom": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.edgeSearchEngineBase"
        },
        {
          "title": "edgeSearchEngineCustom",
          "type": "object",
          "properties": {
            "edgeSearchEngineOpenSearchXmlUrl": {
              "description": "Points to a https link containing the OpenSearch xml file that contains, at minimum, the short name and the URL to the search Engine.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.edgeSearchEngine": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.edgeSearchEngineBase"
        },
        {
          "title": "edgeSearchEngine",
          "type": "object",
          "properties": {
            "edgeSearchEngineType": {
              "description": "Allows IT admins to set a predefined default search engine for MDM-Controlled devices."
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10NetworkBoundaryConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10NetworkBoundaryConfiguration",
          "description": "Windows10 Network Boundary Configuration",
          "type": "object",
          "properties": {
            "windowsNetworkIsolationPolicy": {
              "description": "Windows Network Isolation Policy"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsNetworkIsolationPolicy": {
      "title": "windowsNetworkIsolationPolicy",
      "type": "object",
      "properties": {
        "enterpriseNetworkDomainNames": {
          "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected. These locations will be considered a safe destination for enterprise data to be shared to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enterpriseCloudResources": {
          "description": "Contains a list of enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "enterpriseIPRanges": {
          "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "enterpriseInternalProxyServers": {
          "description": "This is the comma-separated list of internal proxy servers. For example, \"157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59\". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseCloudResources policy to force traffic to the matched cloud resources through these proxies.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enterpriseIPRangesAreAuthoritative": {
          "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false.",
          "type": "boolean"
        },
        "enterpriseProxyServers": {
          "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enterpriseProxyServersAreAuthoritative": {
          "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false",
          "type": "boolean"
        },
        "neutralDomainResources": {
          "description": "List of domain names that can used for work or personal resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.proxiedDomain": {
      "title": "proxiedDomain",
      "type": "object",
      "properties": {
        "ipAddressOrFQDN": {
          "description": "The IP address or FQDN",
          "type": "string"
        },
        "proxy": {
          "description": "Proxy IP",
          "type": "string"
        }
      }
    },
    "microsoft.graph.ipRange": {
      "title": "ipRange",
      "type": "object"
    },
    "microsoft.graph.iPv6Range": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.ipRange"
        },
        {
          "title": "iPv6Range",
          "type": "object",
          "properties": {
            "lowerAddress": {
              "description": "Lower address.",
              "type": "string"
            },
            "upperAddress": {
              "description": "Upper address.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iPv4Range": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.ipRange"
        },
        {
          "title": "iPv4Range",
          "type": "object",
          "properties": {
            "lowerAddress": {
              "description": "Lower address.",
              "type": "string"
            },
            "upperAddress": {
              "description": "Upper address.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10CustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10CustomConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10CustomConfiguration resource.",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10EasEmailProfileConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10EasEmailProfileConfiguration",
          "description": "By providing configurations in this profile you can instruct the native email client (Outlook) on Windows 10 devices to communicate with an Exchange server and get email, contacts, calendar, and tasks. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "syncCalendar": {
              "description": "Whether or not to sync the calendar.",
              "type": "boolean"
            },
            "syncContacts": {
              "description": "Whether or not to sync contacts.",
              "type": "boolean"
            },
            "syncTasks": {
              "description": "Whether or not to sync tasks.",
              "type": "boolean"
            },
            "durationOfEmailToSync": {
              "description": "Duration of email to sync."
            },
            "emailAddressSource": {
              "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "emailSyncSchedule": {
              "description": "Email sync schedule."
            },
            "hostName": {
              "description": "Exchange location that (URL) that the native mail app connects to.",
              "type": "string"
            },
            "requireSsl": {
              "description": "Indicates whether or not to use SSL.",
              "type": "boolean"
            },
            "usernameSource": {
              "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10EnterpriseModernAppManagementConfiguration",
          "description": "Windows10 Enterprise Modern App Management Configuration.",
          "type": "object",
          "properties": {
            "uninstallBuiltInApps": {
              "description": "Indicates whether or not to uninstall a fixed list of built-in Windows apps.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharedPCConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "sharedPCConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the sharedPCConfiguration resource.",
          "type": "object",
          "properties": {
            "accountManagerPolicy": {
              "description": "Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false."
            },
            "allowedAccounts": {
              "description": "Indicates which type of accounts are allowed to use on a shared PC."
            },
            "allowLocalStorage": {
              "description": "Specifies whether local storage is allowed on a shared PC.",
              "type": "boolean"
            },
            "disableAccountManager": {
              "description": "Disables the account manager for shared PC mode.",
              "type": "boolean"
            },
            "disableEduPolicies": {
              "description": "Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true.",
              "type": "boolean"
            },
            "disablePowerPolicies": {
              "description": "Specifies whether the default shared PC power policies should be disabled.",
              "type": "boolean"
            },
            "disableSignInOnResume": {
              "description": "Disables the requirement to sign in whenever the device wakes up from sleep mode.",
              "type": "boolean"
            },
            "enabled": {
              "description": "Enables shared PC mode and applies the shared pc policies.",
              "type": "boolean"
            },
            "idleTimeBeforeSleepInSeconds": {
              "format": "int32",
              "description": "Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "kioskAppDisplayName": {
              "description": "Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.",
              "type": "string"
            },
            "kioskAppUserModelId": {
              "description": "Specifies the application user model ID of the app to use with assigned access.",
              "type": "string"
            },
            "maintenanceStartTime": {
              "format": "time",
              "description": "Specifies the daily start time of maintenance hour.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharedPCAccountManagerPolicy": {
      "title": "sharedPCAccountManagerPolicy",
      "type": "object",
      "properties": {
        "accountDeletionPolicy": {
          "description": "Configures when accounts are deleted."
        },
        "cacheAccountsAboveDiskFreePercentage": {
          "format": "int32",
          "description": "Sets the percentage of available disk space a PC should have before it stops deleting cached shared PC accounts. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "inactiveThresholdDays": {
          "format": "int32",
          "description": "Specifies when the accounts will start being deleted when they have not been logged on during the specified period, given as number of days. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "removeAccountsBelowDiskFreePercentage": {
          "format": "int32",
          "description": "Sets the percentage of disk space remaining on a PC before cached accounts will be deleted to free disk space. Accounts that have been inactive the longest will be deleted first. Only applies when AccountDeletionPolicy is DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.windows10PFXImportCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10PFXImportCertificateProfile",
          "description": "Deprecated",
          "type": "object",
          "properties": {
            "keyStorageProvider": { }
          }
        }
      ]
    },
    "microsoft.graph.windows10SecureAssessmentConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10SecureAssessmentConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the secureAssessment resource.",
          "type": "object",
          "properties": {
            "launchUri": {
              "description": "Url link to an assessment that's automatically loaded when the secure assessment browser is launched. It has to be a valid Url (http[s]://msdn.microsoft.com/).",
              "type": "string"
            },
            "configurationAccount": {
              "description": "The account used to configure the Windows device for taking the test. The user can be a domain account (domain\\user), an AAD account (username@tenant.com) or a local account (username).",
              "type": "string"
            },
            "allowPrinting": {
              "description": "Indicates whether or not to allow the app from printing during the test.",
              "type": "boolean"
            },
            "allowScreenCapture": {
              "description": "Indicates whether or not to allow screen capture capability during a test.",
              "type": "boolean"
            },
            "allowTextSuggestion": {
              "description": "Indicates whether or not to allow text suggestions during the test.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81WifiImportConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows81WifiImportConfiguration",
          "description": "Windows 8.1+ Wi-Fi import configuration. By configuring this profile you can instruct Windows 8.1 (and later) devices to connect to desired Wi-Fi endpoint. Connect a Windows 8.1 device to the desired Wi-Fi network and extract the XML from that device to later embed into this Wi-Fi profile.",
          "type": "object",
          "properties": {
            "payloadFileName": {
              "description": "Payload file name (*.xml).",
              "type": "string"
            },
            "profileName": {
              "description": "Profile name displayed in the UI.",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array). This is the XML file saved on the device you used to connect to the Wi-Fi endpoint.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsCertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsCertificateProfileBase",
          "description": "Device Configuration.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "keyStorageProvider": {
              "description": "Key Storage Provider (KSP)"
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format"
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name Type"
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validity Period",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10CertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsCertificateProfileBase"
        },
        {
          "title": "windows10CertificateProfileBase",
          "description": "Base class for Windows 10 certificate profile.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.windows10PkcsCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windows10CertificateProfileBase"
        },
        {
          "title": "windows10PkcsCertificateProfile",
          "description": "Windows 10 Desktop and Mobile PKCS certificate profile",
          "type": "object",
          "properties": {
            "certificationAuthority": {
              "description": "PKCS Certification Authority",
              "type": "string"
            },
            "certificationAuthorityName": {
              "description": "PKCS Certification Authority Name",
              "type": "string"
            },
            "certificateTemplateName": {
              "description": "PKCS Certificate Template Name",
              "type": "string"
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81CertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsCertificateProfileBase"
        },
        {
          "title": "windows81CertificateProfileBase",
          "description": "Device Configuration.",
          "type": "object",
          "properties": {
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81SCEPCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windows81CertificateProfileBase"
        },
        {
          "title": "windows81SCEPCertificateProfile",
          "description": "Windows 8.1+ SCEP certificate profile",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage."
            },
            "keySize": {
              "description": "SCEP Key Size."
            },
            "hashAlgorithm": {
              "description": "SCEP Hash Algorithm."
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "rootCertificate": { },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81TrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows81TrustedRootCertificate",
          "description": "Windows 8.1 Trusted Certificate configuration profile",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            },
            "destinationStore": {
              "description": "Destination store location for the Trusted Root Certificate."
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81CustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81CustomConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81CustomConfiguration resource.",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81TrustedRootCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81TrustedRootCertificate",
          "description": "Windows Phone 8.1+ Trusted Root Certificate configuration profile",
          "type": "object",
          "properties": {
            "trustedRootCertificate": {
              "format": "base64url",
              "description": "Trusted Root Certificate",
              "type": "string"
            },
            "certFileName": {
              "description": "File name to display in UI.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhoneEASEmailProfileConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhoneEASEmailProfileConfiguration",
          "description": "By providing configurations in this profile you can instruct the native email client on Windows Phone to communicate with an Exchange server and get email, contacts, calendar, and tasks. Furthermore, you can also specify how much email to sync and how often the device should sync.",
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "applyOnlyToWindowsPhone81": {
              "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only.",
              "type": "boolean"
            },
            "syncCalendar": {
              "description": "Whether or not to sync the calendar.",
              "type": "boolean"
            },
            "syncContacts": {
              "description": "Whether or not to sync contacts.",
              "type": "boolean"
            },
            "syncTasks": {
              "description": "Whether or not to sync tasks.",
              "type": "boolean"
            },
            "durationOfEmailToSync": {
              "description": "Duration of email to sync."
            },
            "emailAddressSource": {
              "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
            },
            "emailSyncSchedule": {
              "description": "Email sync schedule."
            },
            "hostName": {
              "description": "Exchange location that (URL) that the native mail app connects to.",
              "type": "string"
            },
            "requireSsl": {
              "description": "Indicates whether or not to use SSL.",
              "type": "boolean"
            },
            "usernameSource": {
              "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsUpdateForBusinessConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsUpdateForBusinessConfiguration",
          "description": "Windows Update for business configuration.",
          "type": "object",
          "properties": {
            "deliveryOptimizationMode": {
              "description": "Delivery Optimization Mode"
            },
            "prereleaseFeatures": {
              "description": "The pre-release features."
            },
            "automaticUpdateMode": {
              "description": "Automatic update mode."
            },
            "microsoftUpdateServiceAllowed": {
              "description": "Allow Microsoft Update Service",
              "type": "boolean"
            },
            "driversExcluded": {
              "description": "Exclude Windows update Drivers",
              "type": "boolean"
            },
            "installationSchedule": {
              "description": "Installation schedule"
            },
            "qualityUpdatesDeferralPeriodInDays": {
              "format": "int32",
              "description": "Defer Quality Updates by these many days",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "featureUpdatesDeferralPeriodInDays": {
              "format": "int32",
              "description": "Defer Feature Updates by these many days",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "qualityUpdatesPaused": {
              "description": "Pause Quality Updates",
              "type": "boolean"
            },
            "featureUpdatesPaused": {
              "description": "Pause Feature Updates",
              "type": "boolean"
            },
            "qualityUpdatesPauseExpiryDateTime": {
              "format": "date-time",
              "description": "Quality Updates Pause Expiry datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "featureUpdatesPauseExpiryDateTime": {
              "format": "date-time",
              "description": "Feature Updates Pause Expiry datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "businessReadyUpdatesOnly": {
              "description": "Business ready updates only or regular updates allowed too"
            },
            "previewBuildSetting": {
              "description": "Set the insider build control in the advanced options for Windows Update"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsUpdateInstallScheduleType": {
      "title": "windowsUpdateInstallScheduleType",
      "type": "object"
    },
    "microsoft.graph.windowsUpdateScheduledInstall": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsUpdateInstallScheduleType"
        },
        {
          "title": "windowsUpdateScheduledInstall",
          "type": "object",
          "properties": {
            "scheduledInstallDay": {
              "description": "Scheduled Install Day in week"
            },
            "scheduledInstallTime": {
              "format": "time",
              "description": "Scheduled Install Time during day",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "restartMode": {
              "description": "Set restart mode allowed level to power or battery"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsUpdateActiveHoursInstall": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsUpdateInstallScheduleType"
        },
        {
          "title": "windowsUpdateActiveHoursInstall",
          "type": "object",
          "properties": {
            "activeHoursStart": {
              "format": "time",
              "description": "Active Hours Start",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "activeHoursEnd": {
              "format": "time",
              "description": "Active Hours End",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsVpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsVpnConfiguration",
          "description": "Windows VPN configuration profile.",
          "type": "object",
          "properties": {
            "connectionName": {
              "description": "Connection name displayed to the user.",
              "type": "string"
            },
            "servers": {
              "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.vpnServer"
              }
            },
            "customXml": {
              "format": "base64url",
              "description": "Custom XML commands that configures the VPN connection. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10VpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsVpnConfiguration"
        },
        {
          "title": "windows10VpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Windows 10 device (desktop or mobile) to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "connectionType": {
              "description": "Connection type."
            },
            "enableSplitTunneling": {
              "description": "Enable split tunneling.",
              "type": "boolean"
            },
            "authenticationMethod": {
              "description": "Authentication method."
            },
            "rememberUserCredentials": {
              "description": "Remember user credentials.",
              "type": "boolean"
            },
            "enableConditionalAccess": {
              "description": "Enable conditional access.",
              "type": "boolean"
            },
            "enableSingleSignOnWithAlternateCertificate": {
              "description": "Enable single sign-on (SSO) with alternate certificate.",
              "type": "boolean"
            },
            "singleSignOnEku": {
              "description": "Single sign-on Extended Key Usage (EKU)."
            },
            "singleSignOnIssuerHash": {
              "description": "Single sign-on issuer hash.",
              "type": "string"
            },
            "eapXml": {
              "format": "base64url",
              "description": "Extensible Authentication Protocol (EAP) XML. (UTF8 encoded byte array)",
              "type": "string"
            },
            "proxyServer": {
              "description": "Proxy Server."
            },
            "associatedApps": {
              "description": "Associated Apps. This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "onlyAssociatedAppsCanUseConnection": {
              "description": "Only associated Apps can use connection (per-app VPN).",
              "type": "boolean"
            },
            "windowsInformationProtectionDomain": {
              "description": "Windows Information Protection (WIP) domain to associate with this connection.",
              "type": "string"
            },
            "trafficRules": {
              "description": "Traffic rules. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            },
            "routes": {
              "description": "Routes (optional for third-party providers). This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            },
            "dnsRules": {
              "description": "DNS rules. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            },
            "trustedNetworkDomains": {
              "description": "Trusted Network Domains",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.windows10AssociatedApps": {
      "title": "windows10AssociatedApps",
      "type": "object",
      "properties": {
        "appType": {
          "description": "Application type."
        },
        "identifier": {
          "description": "Identifier.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.vpnTrafficRule": {
      "title": "vpnTrafficRule",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "protocols": {
          "format": "int32",
          "description": "Protocols (0-255). Valid values 0 to 255",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "localPortRanges": {
          "description": "Local port range can be set only when protocol is either TCP or UDP (6 or 17). This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "remotePortRanges": {
          "description": "Remote port range can be set only when protocol is either TCP or UDP (6 or 17). This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "localAddressRanges": {
          "description": "Local address range. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "remoteAddressRanges": {
          "description": "Remote address range. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "appId": {
          "description": "App identifier, if this traffic rule is triggered by an app.",
          "type": "string"
        },
        "appType": {
          "description": "App type, if this traffic rule is triggered by an app."
        },
        "routingPolicyType": {
          "description": "When app triggered, indicates whether to enable split tunneling along this route."
        },
        "claims": {
          "description": "Claims associated with this traffic rule.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.numberRange": {
      "title": "numberRange",
      "type": "object",
      "properties": {
        "lowerNumber": {
          "format": "int32",
          "description": "Lower number.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "upperNumber": {
          "format": "int32",
          "description": "Upper number.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.vpnRoute": {
      "title": "vpnRoute",
      "type": "object",
      "properties": {
        "destinationPrefix": {
          "description": "Destination prefix (IPv4/v6 address).",
          "type": "string"
        },
        "prefixSize": {
          "format": "int32",
          "description": "Prefix size. (1-32). Valid values 1 to 32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.vpnDnsRule": {
      "title": "vpnDnsRule",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "servers": {
          "description": "Servers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proxyServerUri": {
          "description": "Proxy Server Uri.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.windows81VpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsVpnConfiguration"
        },
        {
          "title": "windows81VpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Windows 8.1 (and later) devices to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "applyOnlyToWindows81": {
              "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only.",
              "type": "boolean"
            },
            "connectionType": {
              "description": "Connection type."
            },
            "loginGroupOrDomain": {
              "description": "Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.",
              "type": "string"
            },
            "enableSplitTunneling": {
              "description": "Enable split tunneling for the VPN.",
              "type": "boolean"
            },
            "proxyServer": {
              "description": "Proxy Server."
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81VpnConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windows81VpnConfiguration"
        },
        {
          "title": "windowsPhone81VpnConfiguration",
          "description": "By providing the configurations in this profile you can instruct the Windows Phone 8.1 to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.",
          "type": "object",
          "properties": {
            "bypassVpnOnCompanyWifi": {
              "description": "Bypass VPN on company Wi-Fi.",
              "type": "boolean"
            },
            "bypassVpnOnHomeWifi": {
              "description": "Bypass VPN on home Wi-Fi.",
              "type": "boolean"
            },
            "authenticationMethod": {
              "description": "Authentication method."
            },
            "rememberUserCredentials": {
              "description": "Remember user credentials.",
              "type": "boolean"
            },
            "dnsSuffixSearchList": {
              "description": "DNS suffix search list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "identityCertificate": { }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81CertificateProfileBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81CertificateProfileBase",
          "description": "Base Windows Phone 8.1+ certificate profile.",
          "type": "object",
          "properties": {
            "renewalThresholdPercentage": {
              "format": "int32",
              "description": "Certificate renewal threshold percentage.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "keyStorageProvider": {
              "description": "Key Storage Provider (KSP)."
            },
            "subjectNameFormat": {
              "description": "Certificate Subject Name Format."
            },
            "subjectAlternativeNameType": {
              "description": "Certificate Subject Alternative Name Type."
            },
            "certificateValidityPeriodValue": {
              "format": "int32",
              "description": "Value for the Certificate Validtiy Period.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "certificateValidityPeriodScale": {
              "description": "Scale for the Certificate Validity Period."
            },
            "extendedKeyUsages": {
              "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extendedKeyUsage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81SCEPCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsPhone81CertificateProfileBase"
        },
        {
          "title": "windowsPhone81SCEPCertificateProfile",
          "description": "Windows Phone 8.1+ SCEP certificate profile",
          "type": "object",
          "properties": {
            "scepServerUrls": {
              "description": "SCEP Server Url(s).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjectNameFormatString": {
              "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
              "type": "string"
            },
            "keyUsage": {
              "description": "SCEP Key Usage."
            },
            "keySize": {
              "description": "SCEP Key Size."
            },
            "hashAlgorithm": {
              "description": "SCEP Hash Algorithm."
            },
            "subjectAlternativeNameFormatString": {
              "description": "Custom String that defines the AAD Attribute.",
              "type": "string"
            },
            "rootCertificate": { },
            "managedDeviceCertificateStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceCertificateState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows81GeneralConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows81GeneralConfiguration resource.",
          "type": "object",
          "properties": {
            "accountsBlockAddingNonMicrosoftAccountEmail": {
              "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
              "type": "boolean"
            },
            "applyOnlyToWindows81": {
              "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only.",
              "type": "boolean"
            },
            "browserBlockAutofill": {
              "description": "Indicates whether or not to block auto fill.",
              "type": "boolean"
            },
            "browserBlockAutomaticDetectionOfIntranetSites": {
              "description": "Indicates whether or not to block automatic detection of Intranet sites.",
              "type": "boolean"
            },
            "browserBlockEnterpriseModeAccess": {
              "description": "Indicates whether or not to block enterprise mode access.",
              "type": "boolean"
            },
            "browserBlockJavaScript": {
              "description": "Indicates whether or not to Block the user from using JavaScript.",
              "type": "boolean"
            },
            "browserBlockPlugins": {
              "description": "Indicates whether or not to block plug-ins.",
              "type": "boolean"
            },
            "browserBlockPopups": {
              "description": "Indicates whether or not to block popups.",
              "type": "boolean"
            },
            "browserBlockSendingDoNotTrackHeader": {
              "description": "Indicates whether or not to Block the user from sending the do not track header.",
              "type": "boolean"
            },
            "browserBlockSingleWordEntryOnIntranetSites": {
              "description": "Indicates whether or not to block a single word entry on Intranet sites.",
              "type": "boolean"
            },
            "browserRequireSmartScreen": {
              "description": "Indicates whether or not to require the user to use the smart screen filter.",
              "type": "boolean"
            },
            "browserEnterpriseModeSiteListLocation": {
              "description": "The enterprise mode site list location. Could be a local file, local network or http location.",
              "type": "string"
            },
            "browserInternetSecurityLevel": {
              "description": "The internet security level."
            },
            "browserIntranetSecurityLevel": {
              "description": "The Intranet security level."
            },
            "browserLoggingReportLocation": {
              "description": "The logging report location.",
              "type": "string"
            },
            "browserRequireHighSecurityForRestrictedSites": {
              "description": "Indicates whether or not to require high security for restricted sites.",
              "type": "boolean"
            },
            "browserRequireFirewall": {
              "description": "Indicates whether or not to require a firewall.",
              "type": "boolean"
            },
            "browserRequireFraudWarning": {
              "description": "Indicates whether or not to require fraud warning.",
              "type": "boolean"
            },
            "browserTrustedSitesSecurityLevel": {
              "description": "The trusted sites security level."
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "diagnosticsBlockDataSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "passwordBlockPicturePasswordAndPin": {
              "description": "Indicates whether or not to Block the user from using a pictures password and pin.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "The minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "The number of sign in failures before factory reset.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "storageRequireDeviceEncryption": {
              "description": "Indicates whether or not to require encryption on a mobile device.",
              "type": "boolean"
            },
            "minimumAutoInstallClassification": {
              "description": "The minimum update classification to install automatically."
            },
            "updatesRequireAutomaticUpdates": {
              "description": "Indicates whether or not to require automatic updates.",
              "type": "boolean"
            },
            "userAccountControlSettings": {
              "description": "The user account control settings."
            },
            "workFoldersUrl": {
              "description": "The work folders url.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81GeneralConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81GeneralConfiguration resource.",
          "type": "object",
          "properties": {
            "applyOnlyToWindowsPhone81": {
              "description": "Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only.",
              "type": "boolean"
            },
            "appsBlockCopyPaste": {
              "description": "Indicates whether or not to block copy paste.",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Indicates whether or not to block bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block camera.",
              "type": "boolean"
            },
            "cellularBlockWifiTethering": {
              "description": "Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the AppComplianceList."
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "emailBlockAddingAccounts": {
              "description": "Indicates whether or not to block custom email accounts.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to block location services.",
              "type": "boolean"
            },
            "microsoftAccountBlocked": {
              "description": "Indicates whether or not to block using a Microsoft Account.",
              "type": "boolean"
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to block Near-Field Communication.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before screen timeout.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a password must contain.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Password type that is required."
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require a password.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block screenshots.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to block removable storage.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Indicates whether or not to require encryption.",
              "type": "boolean"
            },
            "webBrowserBlocked": {
              "description": "Indicates whether or not to block the web browser.",
              "type": "boolean"
            },
            "wifiBlocked": {
              "description": "Indicates whether or not to block Wi-Fi.",
              "type": "boolean"
            },
            "wifiBlockAutomaticConnectHotspots": {
              "description": "Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "wifiBlockHotspotReporting": {
              "description": "Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "windowsStoreBlocked": {
              "description": "Indicates whether or not to block the Windows Store.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windows10TeamGeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10TeamGeneralConfiguration",
          "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10TeamGeneralConfiguration resource.",
          "type": "object",
          "properties": {
            "azureOperationalInsightsBlockTelemetry": {
              "description": "Indicates whether or not to Block Azure Operational Insights.",
              "type": "boolean"
            },
            "azureOperationalInsightsWorkspaceId": {
              "description": "The Azure Operational Insights workspace id.",
              "type": "string"
            },
            "azureOperationalInsightsWorkspaceKey": {
              "description": "The Azure Operational Insights Workspace key.",
              "type": "string"
            },
            "connectAppBlockAutoLaunch": {
              "description": "Specifies whether to automatically launch the Connect app whenever a projection is initiated.",
              "type": "boolean"
            },
            "maintenanceWindowBlocked": {
              "description": "Indicates whether or not to Block setting a maintenance window for device updates.",
              "type": "boolean"
            },
            "maintenanceWindowDurationInHours": {
              "format": "int32",
              "description": "Maintenance window duration for device updates. Valid values 1 to 5",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "maintenanceWindowStartTime": {
              "format": "time",
              "description": "Maintenance window start time for device updates.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "miracastChannel": {
              "description": "The channel."
            },
            "miracastBlocked": {
              "description": "Indicates whether or not to Block wireless projection.",
              "type": "boolean"
            },
            "miracastRequirePin": {
              "description": "Indicates whether or not to require a pin for wireless projection.",
              "type": "boolean"
            },
            "settingsBlockMyMeetingsAndFiles": {
              "description": "Specifies whether to disable the \"My meetings and files\" feature in the Start menu, which shows the signed-in user's meetings and files from Office 365.",
              "type": "boolean"
            },
            "settingsBlockSessionResume": {
              "description": "Specifies whether to allow the ability to resume a session when the session times out.",
              "type": "boolean"
            },
            "settingsBlockSigninSuggestions": {
              "description": "Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings.",
              "type": "boolean"
            },
            "settingsDefaultVolume": {
              "format": "int32",
              "description": "Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsScreenTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the Hub screen turns off.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsSessionTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the session times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsSleepTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the Hub enters sleep mode.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "welcomeScreenBlockAutomaticWakeUp": {
              "description": "Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room.",
              "type": "boolean"
            },
            "welcomeScreenBackgroundImageUrl": {
              "description": "The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.",
              "type": "string"
            },
            "welcomeScreenMeetingInformation": {
              "description": "The welcome screen meeting information shown."
            }
          }
        }
      ]
    },
    "microsoft.graph.editionUpgradeConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "editionUpgradeConfiguration",
          "description": "Windows 10 Edition Upgrade configuration.",
          "type": "object",
          "properties": {
            "licenseType": {
              "description": "Edition Upgrade License Type."
            },
            "targetEdition": {
              "description": "Edition Upgrade Target Edition."
            },
            "license": {
              "description": "Edition Upgrade License File Content.",
              "type": "string"
            },
            "productKey": {
              "description": "Edition Upgrade Product Key.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.localizedNotificationMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "localizedNotificationMessage",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "locale": {
              "description": "The Locale for which this message is destined.",
              "type": "string"
            },
            "subject": {
              "description": "The Message Template Subject.",
              "type": "string"
            },
            "messageTemplate": {
              "description": "The Message Template content.",
              "type": "string"
            },
            "isDefault": {
              "description": "Flag to indicate whether or not this is the default locale for language fallback. This flag can only be set. To unset, set this property to true on another Localized Notification Message.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidForWorkCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "androidForWorkCompliancePolicy",
          "description": "This class contains compliance settings for Android for Work.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock device.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of characters in password"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "securityPreventInstallAppsFromUnknownSources": {
              "description": "Require that devices disallow installation of apps from unknown sources.",
              "type": "boolean"
            },
            "securityDisableUsbDebugging": {
              "description": "Disable USB debugging on Android devices.",
              "type": "boolean"
            },
            "requireAppVerify": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Android version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Android version.",
              "type": "string"
            },
            "minAndroidSecurityPatchLevel": {
              "description": "Minimum Android security patch level.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Android devices.",
              "type": "boolean"
            },
            "requireSafetyNetAttestationBasicIntegrity": {
              "description": "Require the device to pass the SafetyNet basic integrity check.",
              "type": "boolean"
            },
            "requireSafetyNetAttestationCertifiedDevice": {
              "description": "Require the device to pass the SafetyNet certified device check.",
              "type": "boolean"
            },
            "requireGooglePlayServices": {
              "description": "Require Google Play Services to be installed and enabled on the device.",
              "type": "boolean"
            },
            "requireUpToDateSecurityProviders": {
              "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
              "type": "boolean"
            },
            "requireCompanyPortalAppIntegrity": {
              "description": "Require the device to pass the Company Portal client app runtime integrity check.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "androidCompliancePolicy",
          "description": "This class contains compliance settings for Android.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock device.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of characters in password"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "securityPreventInstallAppsFromUnknownSources": {
              "description": "Require that devices disallow installation of apps from unknown sources.",
              "type": "boolean"
            },
            "securityDisableUsbDebugging": {
              "description": "Disable USB debugging on Android devices.",
              "type": "boolean"
            },
            "requireAppVerify": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Android version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Android version.",
              "type": "string"
            },
            "minAndroidSecurityPatchLevel": {
              "description": "Minimum Android security patch level.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Android devices.",
              "type": "boolean"
            },
            "requireSafetyNetAttestationBasicIntegrity": {
              "description": "Require the device to pass the SafetyNet basic integrity check.",
              "type": "boolean"
            },
            "requireSafetyNetAttestationCertifiedDevice": {
              "description": "Require the device to pass the SafetyNet certified device check.",
              "type": "boolean"
            },
            "requireGooglePlayServices": {
              "description": "Require Google Play Services to be installed and enabled on the device.",
              "type": "boolean"
            },
            "requireUpToDateSecurityProviders": {
              "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
              "type": "boolean"
            },
            "requireCompanyPortalAppIntegrity": {
              "description": "Require the device to pass the Company Portal client app runtime integrity check.",
              "type": "boolean"
            },
            "conditionStatementId": {
              "description": "Condition statement id.",
              "type": "string"
            },
            "localActions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.androidDeviceComplianceLocalActionBase"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.androidDeviceComplianceLocalActionLockDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidDeviceComplianceLocalActionBase"
        },
        {
          "title": "androidDeviceComplianceLocalActionLockDevice",
          "description": "Local Action Lock Device Only Configuration",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.androidDeviceComplianceLocalActionLockDeviceWithPasscode": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.androidDeviceComplianceLocalActionBase"
        },
        {
          "title": "androidDeviceComplianceLocalActionLockDeviceWithPasscode",
          "description": "Local Action Lock Device with Passcode Configuration",
          "type": "object",
          "properties": {
            "passcode": {
              "description": "Passcode to reset to Android device. This property is read-only.",
              "type": "string"
            },
            "passcodeSignInFailureCountBeforeWipe": {
              "format": "int32",
              "description": "Number of sign in failures before wiping device, the value can be 4-11. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "iosCompliancePolicy",
          "description": "This class contains compliance settings for IOS.",
          "type": "object",
          "properties": {
            "passcodeBlockSimple": {
              "description": "Indicates whether or not to block simple passcodes.",
              "type": "boolean"
            },
            "passcodeExpirationDays": {
              "format": "int32",
              "description": "Number of days before the passcode expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passcode. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a passcode is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodePreviousPasscodeBlockCount": {
              "format": "int32",
              "description": "Number of previous passcodes to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeRequiredType": {
              "description": "The required passcode type."
            },
            "passcodeRequired": {
              "description": "Indicates whether or not to require a passcode.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum IOS version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum IOS version.",
              "type": "string"
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection .",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
            },
            "managedEmailProfileRequired": {
              "description": "Indicates whether or not to require a managed email profile.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.macOSCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "macOSCompliancePolicy",
          "description": "This class contains compliance settings for Mac OS.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of password. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "osMinimumVersion": {
              "description": "Minimum IOS version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum IOS version.",
              "type": "string"
            },
            "systemIntegrityProtectionEnabled": {
              "description": "Require that devices have enabled system integrity protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection .",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Mac OS devices.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.defaultDeviceCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "defaultDeviceCompliancePolicy",
          "description": "Default device compliance policy rules that are enforced account wide.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.windows10CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows10CompliancePolicy",
          "description": "This class contains compliance settings for Windows 10.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple password.",
              "type": "boolean"
            },
            "passwordRequiredToUnlockFromIdle": {
              "description": "Require a password to unlock an idle device.",
              "type": "boolean"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "The password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "requireHealthyDeviceReport": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows 10 version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows 10 version.",
              "type": "string"
            },
            "minimumUpdateAutoInstallClassification": {
              "description": "The minimum update classification to install automatically."
            },
            "mobileOsMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "mobileOsMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "earlyLaunchAntiMalwareDriverEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
              "type": "boolean"
            },
            "bitLockerEnabled": {
              "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
              "type": "boolean"
            },
            "secureBootEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
              "type": "boolean"
            },
            "codeIntegrityEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows devices.",
              "type": "boolean"
            },
            "activeFirewallRequired": {
              "description": "Require active firewall on Windows devices.",
              "type": "boolean"
            },
            "uacRequired": {
              "description": "Require UAC on Windows devices.",
              "type": "boolean"
            },
            "defenderEnabled": {
              "description": "Require Windows Defender Antimalware on Windows devices.",
              "type": "boolean"
            },
            "defenderVersion": {
              "description": "Require Windows Defender Antimalware minimum version on Windows devices.",
              "type": "string"
            },
            "signatureOutOfDate": {
              "description": "Require Windows Defender Antimalware Signature to be up to date on Windows devices.",
              "type": "boolean"
            },
            "rtpEnabled": {
              "description": "Require Windows Defender Antimalware Real-Time Protection on Windows devices.",
              "type": "boolean"
            },
            "validOperatingSystemBuildRanges": {
              "description": "The valid operating system build ranges on Windows devices. This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.operatingSystemVersionRange": {
      "title": "operatingSystemVersionRange",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of this range (e.g. Valid 1702 builds)",
          "type": "string"
        },
        "lowestVersion": {
          "description": "The lowest inclusive version that this range contains.",
          "type": "string"
        },
        "highestVersion": {
          "description": "The highest inclusive version that this range contains.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.windows10MobileCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows10MobileCompliancePolicy",
          "description": "This class contains compliance settings for Windows 10 Mobile.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows Phone device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before password expiration. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequireToUnlockFromIdle": {
              "description": "Require a password to unlock an idle device.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "earlyLaunchAntiMalwareDriverEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
              "type": "boolean"
            },
            "bitLockerEnabled": {
              "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
              "type": "boolean"
            },
            "secureBootEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
              "type": "boolean"
            },
            "codeIntegrityEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows devices.",
              "type": "boolean"
            },
            "activeFirewallRequired": {
              "description": "Require active firewall on Windows devices.",
              "type": "boolean"
            },
            "uacRequired": {
              "description": "Require UAC on Windows devices.",
              "type": "boolean"
            },
            "validOperatingSystemBuildRanges": {
              "description": "The valid operating system build ranges on Windows devices. This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.windows81CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows81CompliancePolicy",
          "description": "This class contains compliance settings for Windows 8.1.",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple password.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows 8.1 version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows 8.1 version.",
              "type": "string"
            },
            "minimumUpdateAutoInstallClassification": {
              "description": "The minimum update classification to install automatically."
            },
            "storageRequireEncryption": {
              "description": "Indicates whether or not to require encryption on a windows 8.1 device.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsPhone81CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windowsPhone81CompliancePolicy",
          "description": "This class contains compliance settings for Windows 8.1 Mobile.",
          "type": "object",
          "properties": {
            "passwordBlockSimple": {
              "description": "Whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows phone devices.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsDomainJoinConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceSetupConfiguration"
        },
        {
          "title": "windowsDomainJoinConfiguration",
          "description": "Windows Domain Join device setup configuration.",
          "type": "object",
          "properties": {
            "computerNameStaticPrefix": {
              "description": "Fixed prefix to be used for computer name. This property can only be set during creation.",
              "type": "string"
            },
            "computerNameSuffixRandomCharCount": {
              "format": "int32",
              "description": "Dynamically generated characters used as suffix for computer name. Valid values 3 to 14. This property can only be set during creation.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "activeDirectoryDomainName": {
              "description": "Active Directory domain name to join. This property can only be set during creation.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.complianceSettingStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "complianceSettingStateSummary",
          "description": "Device Compilance Policy Setting State summary across the account.",
          "type": "object",
          "properties": {
            "setting": {
              "description": "The setting class name and property name.",
              "type": "string"
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string"
            },
            "platformType": {
              "description": "Setting platform"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceComplianceSettingState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceSettingState",
          "description": "Device compliance setting State for a given device.",
          "type": "object",
          "properties": {
            "platformType": {
              "description": "Device platform type"
            },
            "setting": {
              "description": "The setting class name and property name.",
              "type": "string"
            },
            "settingName": {
              "description": "The Setting Name that is being reported",
              "type": "string"
            },
            "deviceId": {
              "description": "The Device Id that is being reported",
              "type": "string"
            },
            "deviceName": {
              "description": "The Device Name that is being reported",
              "type": "string"
            },
            "userId": {
              "description": "The user Id that is being reported",
              "type": "string"
            },
            "userEmail": {
              "description": "The User email address that is being reported",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The User PrincipalName that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "state": {
              "description": "The compliance state of the setting"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceConfigurationSettingState": {
      "title": "deviceConfigurationSettingState",
      "type": "object",
      "properties": {
        "setting": {
          "description": "The setting that is being reported",
          "type": "string"
        },
        "settingName": {
          "description": "Localized/user friendly setting name that is being reported",
          "type": "string"
        },
        "instanceDisplayName": {
          "description": "Name of setting instance that is being reported.",
          "type": "string"
        },
        "state": {
          "description": "The compliance state of the setting"
        },
        "errorCode": {
          "format": "int64",
          "description": "Error code for the setting",
          "type": "integer"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        },
        "userId": {
          "description": "UserId",
          "type": "string"
        },
        "userName": {
          "description": "UserName",
          "type": "string"
        },
        "userEmail": {
          "description": "UserEmail",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "UserPrincipalName.",
          "type": "string"
        },
        "sources": {
          "description": "Contributing policies",
          "type": "array",
          "items": { }
        },
        "currentValue": {
          "description": "Current value of setting on device",
          "type": "string"
        }
      }
    },
    "microsoft.graph.settingSource": {
      "title": "settingSource",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.deviceCompliancePolicySettingState": {
      "title": "deviceCompliancePolicySettingState",
      "type": "object",
      "properties": {
        "setting": {
          "description": "The setting that is being reported",
          "type": "string"
        },
        "settingName": {
          "description": "Localized/user friendly setting name that is being reported",
          "type": "string"
        },
        "instanceDisplayName": {
          "description": "Name of setting instance that is being reported.",
          "type": "string"
        },
        "state": {
          "description": "The compliance state of the setting"
        },
        "errorCode": {
          "format": "int64",
          "description": "Error code for the setting",
          "type": "integer"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        },
        "userId": {
          "description": "UserId",
          "type": "string"
        },
        "userName": {
          "description": "UserName",
          "type": "string"
        },
        "userEmail": {
          "description": "UserEmail",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "UserPrincipalName.",
          "type": "string"
        },
        "sources": {
          "description": "Contributing policies",
          "type": "array",
          "items": { }
        },
        "currentValue": {
          "description": "Current value of setting on device",
          "type": "string"
        }
      }
    },
    "microsoft.graph.vppTokenActionResult": {
      "title": "vppTokenActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action"
        },
        "actionMessage": {
          "description": "Message about the action status",
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.enrollmentConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "enrollmentConfigurationAssignment",
          "type": "object",
          "properties": {
            "target": { }
          }
        }
      ]
    },
    "microsoft.graph.defaultDeviceEnrollmentRestrictions": {
      "title": "defaultDeviceEnrollmentRestrictions",
      "type": "object",
      "properties": {
        "iosRestrictions": {
          "description": "Restrictions on iOS enrollment"
        },
        "windowsRestrictions": {
          "description": "Restrictions on Windows Desktop enrollment"
        },
        "windowsMobileRestrictions": {
          "description": "Restrictions on Windows Mobile enrollment"
        },
        "androidRestrictions": {
          "description": "Restrictions on Android enrollment"
        },
        "androidForWorkRestrictions": {
          "description": "Restrictions on Android for Work enrollment"
        },
        "macRestrictions": {
          "description": "Restrictions on Mac enrollment"
        }
      }
    },
    "microsoft.graph.deviceEnrollmentPlatformRestrictions": {
      "title": "deviceEnrollmentPlatformRestrictions",
      "type": "object",
      "properties": {
        "platformBlocked": {
          "description": "Block the platform from enrolling",
          "type": "boolean"
        },
        "personalDeviceEnrollmentBlocked": {
          "description": "Block personally owned devices from enrolling",
          "type": "boolean"
        },
        "osMinimumVersion": {
          "description": "Min OS version supported",
          "type": "string"
        },
        "osMaximumVersion": {
          "description": "Max OS version supported",
          "type": "string"
        }
      }
    },
    "microsoft.graph.defaultDeviceEnrollmentWindowsHelloForBusinessSettings": {
      "title": "defaultDeviceEnrollmentWindowsHelloForBusinessSettings",
      "type": "object",
      "properties": {
        "pinMinimumLength": {
          "format": "int32",
          "description": "Controls the minimum number of characters required for the Windows Hello for Business PIN.  This value must be between 4 and 127, inclusive, and less than or equal to the value set for the maximum PIN.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pinMaximumLength": {
          "format": "int32",
          "description": "Controls the maximum number of characters allowed for the Windows Hello for Business PIN. This value must be between 4 and 127, inclusive. This value must be greater than or equal to the value set for the minimum PIN.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pinUppercaseLettersUsage": {
          "description": "Controls the ability to use uppercase letters in the Windows Hello for Business PIN.  Allowed permits the use of uppercase letter(s), whereas Required ensures they are present. If set to Not Allowed, uppercase letters will not be permitted."
        },
        "pinLowercaseLettersUsage": {
          "description": "Controls the ability to use lowercase letters in the Windows Hello for Business PIN.  Allowed permits the use of lowercase letter(s), whereas Required ensures they are present. If set to Not Allowed, lowercase letters will not be permitted."
        },
        "pinSpecialCharactersUsage": {
          "description": "Controls the ability to use special characters in the Windows Hello for Business PIN.  Allowed permits the use of special character(s), whereas Required ensures they are present. If set to Not Allowed, special character(s) will not be permitted."
        },
        "windowsHelloForBusiness": {
          "description": "Controls whether to allow the device to be configured for Windows Hello for Business. If set to disabled, the user cannot provision Windows Hello for Business except on Azure Active Directory joined mobile phones if otherwise required. If set to Not Configured, Intune will not override client defaults."
        },
        "securityDeviceRequired": {
          "description": "Controls whether to require a Trusted Platform Module (TPM) for provisioning Windows Hello for Business. A TPM provides an additional security benefit in that data stored on it cannot be used on other devices. If set to False, all devices can provision Windows Hello for Business even if there is not a usable TPM.",
          "type": "boolean"
        },
        "unlockWithBiometricsEnabled": {
          "description": "Controls the use of biometric gestures, such as face and fingerprint, as an alternative to the Windows Hello for Business PIN.  If set to False, biometric gestures are not allowed. Users must still configure a PIN as a backup in case of failures.",
          "type": "boolean"
        },
        "mobilePinSignInEnabled": {
          "description": "Controls the use of Remote Windows Hello for Business. Remote Windows Hello for Business provides the ability for a portable, registered device to be usable as a companion for desktop authentication. The desktop must be Azure AD joined and the companion device must have a Windows Hello for Business PIN.",
          "type": "boolean"
        },
        "pinPreviousBlockCount": {
          "format": "int32",
          "description": "Controls the ability to prevent users from using past PINs. This must be set between 0 and 50, inclusive, and the current PIN of the user is included in that count. If set to 0, previous PINs are not stored. PIN history is not preserved through a PIN reset.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "pinExpirationInDays": {
          "format": "int32",
          "description": "Controls the period of time (in days) that a PIN can be used before the system requires the user to change it. This must be set between 0 and 730, inclusive. If set to 0, the user's PIN will never expire",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "enhancedBiometrics": {
          "description": "Controls the ability to use the anti-spoofing features for facial recognition on devices which support it. If set to disabled, anti-spoofing features are not allowed. If set to Not Configured, the user can choose whether they want to use anti-spoofing."
        }
      }
    },
    "microsoft.graph.deviceEnrollmentLimitConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentLimitConfiguration",
          "type": "object",
          "properties": {
            "limit": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentPlatformRestrictionsConfiguration",
          "type": "object",
          "properties": {
            "iosRestriction": { },
            "windowsRestriction": { },
            "windowsMobileRestriction": { },
            "androidRestriction": { },
            "androidForWorkRestriction": { },
            "macRestriction": { }
          }
        }
      ]
    },
    "microsoft.graph.deviceEnrollmentPlatformRestriction": {
      "title": "deviceEnrollmentPlatformRestriction",
      "type": "object",
      "properties": {
        "platformBlocked": {
          "description": "Block the platform from enrolling",
          "type": "boolean"
        },
        "personalDeviceEnrollmentBlocked": {
          "description": "Block personally owned devices from enrolling",
          "type": "boolean"
        },
        "osMinimumVersion": {
          "description": "Min OS version supported",
          "type": "string"
        },
        "osMaximumVersion": {
          "description": "Max OS version supported",
          "type": "string"
        }
      }
    },
    "microsoft.graph.windows10EnrollmentCompletionPageConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "windows10EnrollmentCompletionPageConfiguration",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "bodyText": {
              "type": "string"
            },
            "moreInfoUrl": {
              "type": "string"
            },
            "moreInfoText": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentWindowsHelloForBusinessConfiguration",
          "type": "object",
          "properties": {
            "pinMinimumLength": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinMaximumLength": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinUppercaseCharactersUsage": { },
            "pinLowercaseCharactersUsage": { },
            "pinSpecialCharactersUsage": { },
            "state": { },
            "securityDeviceRequired": {
              "type": "boolean"
            },
            "unlockWithBiometricsEnabled": {
              "type": "boolean"
            },
            "remotePassportEnabled": {
              "type": "boolean"
            },
            "pinPreviousBlockCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinExpirationInDays": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enhancedBiometricsState": { }
          }
        }
      ]
    },
    "microsoft.graph.deviceManagementExchangeAccessRule": {
      "title": "deviceManagementExchangeAccessRule",
      "type": "object",
      "properties": {
        "deviceClass": {
          "description": "Device Class which will be impacted by this rule."
        },
        "accessLevel": {
          "description": "Access Level for Exchange granted by this rule."
        }
      }
    },
    "microsoft.graph.deviceManagementExchangeDeviceClass": {
      "title": "deviceManagementExchangeDeviceClass",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the device class which will be impacted by this rule.",
          "type": "string"
        },
        "type": {
          "description": "Type of device which is impacted by this rule e.g. Model, Family"
        }
      }
    },
    "microsoft.graph.managedMobileApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedMobileApp",
          "description": "The identifier for the deployment an app.",
          "type": "object",
          "properties": {
            "mobileAppIdentifier": {
              "description": "The identifier for an app with it's operating system type."
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mobileAppIdentifier": {
      "title": "mobileAppIdentifier",
      "type": "object"
    },
    "microsoft.graph.targetedManagedAppPolicyAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "targetedManagedAppPolicyAssignment",
          "description": "The type for deployment of groups or apps.",
          "type": "object",
          "properties": {
            "target": {
              "description": "Identifier for deployment of a group or app"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppDiagnosticStatus": {
      "title": "managedAppDiagnosticStatus",
      "type": "object",
      "properties": {
        "validationName": {
          "description": "The validation friendly name",
          "type": "string"
        },
        "state": {
          "description": "The state of the operation",
          "type": "string"
        },
        "mitigationInstruction": {
          "description": "Instruction on how to mitigate a failed validation",
          "type": "string"
        }
      }
    },
    "microsoft.graph.managedAppOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppOperation",
          "description": "Represents an operation applied against an app registration.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The operation name.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The last time the app operation was modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "The current state of the operation",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppPolicyDeploymentSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppPolicyDeploymentSummary",
          "description": "The ManagedAppEntity is the base entity type for all other entity types under app management workflow.",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "configurationDeployedUserCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastRefreshTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationDeploymentSummaryPerApp": {
              "type": "array",
              "items": { }
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.windowsInformationProtectionResourceCollection": {
      "title": "windowsInformationProtectionResourceCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "resources": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate": {
      "title": "windowsInformationProtectionDataRecoveryCertificate",
      "type": "object",
      "properties": {
        "subjectName": {
          "description": "Data recovery Certificate subject name",
          "type": "string"
        },
        "description": {
          "description": "Data recovery Certificate description",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Data recovery Certificate expiration datetime",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "certificate": {
          "format": "base64url",
          "description": "Data recovery Certificate",
          "type": "string"
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionApp": {
      "title": "windowsInformationProtectionApp",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "App display name.",
          "type": "string"
        },
        "description": {
          "description": "The app's description.",
          "type": "string"
        },
        "publisherName": {
          "description": "The publisher name",
          "type": "string"
        },
        "productName": {
          "description": "The product name.",
          "type": "string"
        },
        "denied": {
          "description": "If true, app is denied protection or exemption.",
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionProxiedDomainCollection": {
      "title": "windowsInformationProtectionProxiedDomainCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "proxiedDomains": {
          "description": "Collection of proxied domains",
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.proxiedDomain"
          }
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionIPRangeCollection": {
      "title": "windowsInformationProtectionIPRangeCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "ranges": {
          "description": "Collection of ip ranges",
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.ipRange"
          }
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionAppLockerFile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsInformationProtectionAppLockerFile",
          "description": "Windows Information Protection AppLocker File",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The friendly name",
              "type": "string"
            },
            "fileHash": {
              "description": "SHA256 hash of the file",
              "type": "string"
            },
            "file": {
              "format": "base64url",
              "description": "File as a byte array",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.androidMobileAppIdentifier": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppIdentifier"
        },
        {
          "title": "androidMobileAppIdentifier",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The identifier for an app, as specified in the play store.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosMobileAppIdentifier": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileAppIdentifier"
        },
        {
          "title": "iosMobileAppIdentifier",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The identifier for an app, as specified in the app store.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp": {
      "title": "managedAppPolicyDeploymentSummaryPerApp",
      "type": "object",
      "properties": {
        "mobileAppIdentifier": {
          "description": "Deployment of an app."
        },
        "configurationAppliedUserCount": {
          "format": "int32",
          "description": "Number of users the policy is applied.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionApp"
        },
        {
          "title": "windowsInformationProtectionStoreApp",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.windowsInformationProtectionDesktopApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionApp"
        },
        {
          "title": "windowsInformationProtectionDesktopApp",
          "type": "object",
          "properties": {
            "binaryName": {
              "description": "The binary name.",
              "type": "string"
            },
            "binaryVersionLow": {
              "description": "The lower binary version.",
              "type": "string"
            },
            "binaryVersionHigh": {
              "description": "The high binary version.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosManagedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
        },
        {
          "title": "iosManagedAppRegistration",
          "description": "Represents the synchronization details of an ios app, with management capabilities, for a specific user.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.androidManagedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
        },
        {
          "title": "androidManagedAppRegistration",
          "description": "Represents the synchronization details of an android app, with management capabilities, for a specific user.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.managedAppStatusRaw": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppStatus"
        },
        {
          "title": "managedAppStatusRaw",
          "description": "Represents an un-typed status report about organizations app protection and configuration.",
          "type": "object",
          "properties": {
            "content": {
              "description": "Status report content."
            }
          }
        }
      ]
    },
    "microsoft.graph.rolePermission": {
      "title": "rolePermission",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Allowed Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceActions": {
          "description": "Actions",
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.resourceAction": {
      "title": "resourceAction",
      "type": "object",
      "properties": {
        "allowedResourceActions": {
          "description": "Allowed Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notAllowedResourceActions": {
          "description": "Not Allowed Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.deviceAndAppManagementRoleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.roleAssignment"
        },
        {
          "title": "deviceAndAppManagementRoleAssignment",
          "description": "The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.deviceAndAppManagementRoleDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.roleDefinition"
        },
        {
          "title": "deviceAndAppManagementRoleDefinition",
          "description": "The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.eBookGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "eBookGroupAssignment",
          "description": "Contains properties used to assign a eBook to a group.",
          "type": "object",
          "properties": {
            "targetGroupId": {
              "description": "The Id of the AAD group we are targeting the eBook to.",
              "type": "string"
            },
            "installIntent": {
              "description": "The install intent defined by the admin."
            },
            "eBook": { }
          }
        }
      ]
    },
    "microsoft.graph.managedEBookAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedEBookAssignment",
          "description": "Contains properties used to assign a eBook to a group.",
          "type": "object",
          "properties": {
            "target": {
              "description": "The assignment target for eBook."
            },
            "installIntent": {
              "description": "The install intent for eBook."
            }
          }
        }
      ]
    },
    "microsoft.graph.eBookInstallSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "eBookInstallSummary",
          "description": "Contains properties for the installation summary of a book for a device.",
          "type": "object",
          "properties": {
            "installedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have successfully installed this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have failed to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that does not have this book installed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "installedUserCount": {
              "format": "int32",
              "description": "Number of Users whose devices have all succeeded to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedUserCount": {
              "format": "int32",
              "description": "Number of Users that have 1 or more device that failed to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledUserCount": {
              "format": "int32",
              "description": "Number of Users that did not install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.deviceInstallState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceInstallState",
          "description": "Contains properties for the installation state for a device.",
          "type": "object",
          "properties": {
            "deviceName": {
              "description": "Device name.",
              "type": "string"
            },
            "deviceId": {
              "description": "Device Id.",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last sync date and time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "installState": {
              "description": "The install state of the eBook."
            },
            "errorCode": {
              "description": "The error code for install failures.",
              "type": "string"
            },
            "osVersion": {
              "description": "OS Version.",
              "type": "string"
            },
            "osDescription": {
              "description": "OS Description.",
              "type": "string"
            },
            "userName": {
              "description": "Device User Name.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.userInstallStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "userInstallStateSummary",
          "description": "Contains properties for the installation state summary for a user.",
          "type": "object",
          "properties": {
            "userName": {
              "description": "User name.",
              "type": "string"
            },
            "installedDeviceCount": {
              "format": "int32",
              "description": "Installed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Failed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Not installed device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceInstallState"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.eBookVppGroupAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.eBookGroupAssignment"
        },
        {
          "title": "eBookVppGroupAssignment",
          "description": "Contains properties used to assign a VPP eBook to a group.",
          "type": "object",
          "properties": {
            "useDeviceLicensing": {
              "description": "Whether or not to use device licensing.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.iosVppEBookAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedEBookAssignment"
        },
        {
          "title": "iosVppEBookAssignment",
          "description": "Contains properties used to assign an iOS VPP EBook to a group.",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.iosVppEBook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedEBook"
        },
        {
          "title": "iosVppEBook",
          "description": "A class containing the properties for iOS Vpp eBook.",
          "type": "object",
          "properties": {
            "vppTokenId": {
              "format": "uuid",
              "description": "The Vpp token ID.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "appleId": {
              "description": "The Apple ID associated with Vpp token.",
              "type": "string"
            },
            "vppOrganizationName": {
              "description": "The Vpp token's organization name.",
              "type": "string"
            },
            "genres": {
              "description": "Genres.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "language": {
              "description": "Language.",
              "type": "string"
            },
            "seller": {
              "description": "Seller.",
              "type": "string"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "Total license count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "usedLicenseCount": {
              "format": "int32",
              "description": "Used license count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.outOfBoxExperienceSettings": {
      "title": "outOfBoxExperienceSettings",
      "type": "object",
      "properties": {
        "hidePrivacySettings": {
          "description": "Show or hide privacy settings to user",
          "type": "boolean"
        },
        "hideEULA": {
          "description": "Show or hide EULA to user",
          "type": "boolean"
        },
        "userType": {
          "description": "Type of user"
        }
      }
    },
    "microsoft.graph.activeDirectoryWindowsAutopilotDeploymentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeploymentProfile"
        },
        {
          "title": "activeDirectoryWindowsAutopilotDeploymentProfile",
          "description": "Windows Auto Pilot Deployment Profile",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.azureADWindowsAutopilotDeploymentProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsAutopilotDeploymentProfile"
        },
        {
          "title": "azureADWindowsAutopilotDeploymentProfile",
          "description": "Windows Auto Pilot Deployment Profile",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.office365ActivationsUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ActivationsUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "userActivationCounts": {
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.userActivationCounts": {
      "title": "userActivationCounts",
      "type": "object",
      "properties": {
        "productType": {
          "type": "string"
        },
        "lastActivatedDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "windows": {
          "format": "int64",
          "type": "integer"
        },
        "mac": {
          "format": "int64",
          "type": "integer"
        },
        "windows10Mobile": {
          "format": "int64",
          "type": "integer"
        },
        "ios": {
          "format": "int64",
          "type": "integer"
        },
        "android": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.office365ActivationCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ActivationCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "productType": {
              "type": "string"
            },
            "windows": {
              "format": "int64",
              "type": "integer"
            },
            "mac": {
              "format": "int64",
              "type": "integer"
            },
            "android": {
              "format": "int64",
              "type": "integer"
            },
            "ios": {
              "format": "int64",
              "type": "integer"
            },
            "windows10Mobile": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365ActivationsUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ActivationsUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "productType": {
              "type": "string"
            },
            "assigned": {
              "format": "int64",
              "type": "integer"
            },
            "activated": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365ActiveUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ActiveUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "hasExchangeLicense": {
              "type": "boolean"
            },
            "hasOneDriveLicense": {
              "type": "boolean"
            },
            "hasSharePointLicense": {
              "type": "boolean"
            },
            "hasSkypeForBusinessLicense": {
              "type": "boolean"
            },
            "hasYammerLicense": {
              "type": "boolean"
            },
            "hasTeamsLicense": {
              "type": "boolean"
            },
            "exchangeLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "oneDriveLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "sharePointLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "skypeForBusinessLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "yammerLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "teamsLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "exchangeLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "oneDriveLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "sharePointLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "skypeForBusinessLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "yammerLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "teamsLicenseAssignDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.office365ServicesUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ServicesUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "exchangeActive": {
              "format": "int64",
              "type": "integer"
            },
            "exchangeInactive": {
              "format": "int64",
              "type": "integer"
            },
            "oneDriveActive": {
              "format": "int64",
              "type": "integer"
            },
            "oneDriveInactive": {
              "format": "int64",
              "type": "integer"
            },
            "sharePointActive": {
              "format": "int64",
              "type": "integer"
            },
            "sharePointInactive": {
              "format": "int64",
              "type": "integer"
            },
            "skypeForBusinessActive": {
              "format": "int64",
              "type": "integer"
            },
            "skypeForBusinessInactive": {
              "format": "int64",
              "type": "integer"
            },
            "yammerActive": {
              "format": "int64",
              "type": "integer"
            },
            "yammerInactive": {
              "format": "int64",
              "type": "integer"
            },
            "teamsActive": {
              "format": "int64",
              "type": "integer"
            },
            "teamsInactive": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365ActiveUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365ActiveUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "office365": {
              "format": "int64",
              "type": "integer"
            },
            "exchange": {
              "format": "int64",
              "type": "integer"
            },
            "oneDrive": {
              "format": "int64",
              "type": "integer"
            },
            "sharePoint": {
              "format": "int64",
              "type": "integer"
            },
            "skypeForBusiness": {
              "format": "int64",
              "type": "integer"
            },
            "yammer": {
              "format": "int64",
              "type": "integer"
            },
            "teams": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365GroupsActivityDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365GroupsActivityDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "groupDisplayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "ownerPrincipalName": {
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "groupType": {
              "type": "string"
            },
            "memberCount": {
              "format": "int64",
              "type": "integer"
            },
            "externalMemberCount": {
              "format": "int64",
              "type": "integer"
            },
            "exchangeReceivedEmailCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharePointActiveFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "yammerPostedMessageCount": {
              "format": "int64",
              "type": "integer"
            },
            "yammerReadMessageCount": {
              "format": "int64",
              "type": "integer"
            },
            "yammerLikedMessageCount": {
              "format": "int64",
              "type": "integer"
            },
            "exchangeMailboxTotalItemCount": {
              "format": "int64",
              "type": "integer"
            },
            "exchangeMailboxStorageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "sharePointTotalFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharePointSiteStorageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365GroupsActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365GroupsActivityCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "exchangeEmailsReceived": {
              "format": "int64",
              "type": "integer"
            },
            "yammerMessagesPosted": {
              "format": "int64",
              "type": "integer"
            },
            "yammerMessagesRead": {
              "format": "int64",
              "type": "integer"
            },
            "yammerMessagesLiked": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365GroupsActivityGroupCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365GroupsActivityGroupCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365GroupsActivityStorage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365GroupsActivityStorage",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "mailboxStorageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "siteStorageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.office365GroupsActivityFileCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "office365GroupsActivityFileCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailActivityUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "sendCount": {
              "format": "int64",
              "type": "integer"
            },
            "receiveCount": {
              "format": "int64",
              "type": "integer"
            },
            "readCount": {
              "format": "int64",
              "type": "integer"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailActivitySummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailActivitySummary",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "send": {
              "format": "int64",
              "type": "integer"
            },
            "receive": {
              "format": "int64",
              "type": "integer"
            },
            "read": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailAppUsageUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailAppUsageUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "mailForMac": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outlookForMac": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outlookForWindows": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outlookForMobile": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "otherForMobile": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outlookForWeb": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pop3App": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "imap4App": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "smtpApp": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailAppUsageAppsUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailAppUsageAppsUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "mailForMac": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForMac": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForWindows": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForMobile": {
              "format": "int64",
              "type": "integer"
            },
            "otherForMobile": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForWeb": {
              "format": "int64",
              "type": "integer"
            },
            "pop3App": {
              "format": "int64",
              "type": "integer"
            },
            "imap4App": {
              "format": "int64",
              "type": "integer"
            },
            "smtpApp": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailAppUsageUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailAppUsageUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "mailForMac": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForMac": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForWindows": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForMobile": {
              "format": "int64",
              "type": "integer"
            },
            "otherForMobile": {
              "format": "int64",
              "type": "integer"
            },
            "outlookForWeb": {
              "format": "int64",
              "type": "integer"
            },
            "pop3App": {
              "format": "int64",
              "type": "integer"
            },
            "imap4App": {
              "format": "int64",
              "type": "integer"
            },
            "smtpApp": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.emailAppUsageVersionsUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "emailAppUsageVersionsUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "outlook2016": {
              "format": "int64",
              "type": "integer"
            },
            "outlook2013": {
              "format": "int64",
              "type": "integer"
            },
            "outlook2010": {
              "format": "int64",
              "type": "integer"
            },
            "outlook2007": {
              "format": "int64",
              "type": "integer"
            },
            "undetermined": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mailboxUsageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailboxUsageDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "createdDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "itemCount": {
              "format": "int64",
              "type": "integer"
            },
            "storageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "issueWarningQuotaInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "prohibitSendQuotaInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "prohibitSendReceiveQuotaInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mailboxUsageMailboxCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailboxUsageMailboxCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mailboxUsageQuotaStatusMailboxCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailboxUsageQuotaStatusMailboxCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "underLimit": {
              "format": "int64",
              "type": "integer"
            },
            "warningIssued": {
              "format": "int64",
              "type": "integer"
            },
            "sendProhibited": {
              "format": "int64",
              "type": "integer"
            },
            "sendReceiveProhibited": {
              "format": "int64",
              "type": "integer"
            },
            "indeterminate": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.mailboxUsageStorage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailboxUsageStorage",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "storageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.oneDriveActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "oneDriveActivityUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "viewedOrEditedFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "syncedFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharedInternallyFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharedExternallyFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.siteActivitySummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "siteActivitySummary",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "viewedOrEdited": {
              "format": "int64",
              "type": "integer"
            },
            "synced": {
              "format": "int64",
              "type": "integer"
            },
            "sharedInternally": {
              "format": "int64",
              "type": "integer"
            },
            "sharedExternally": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.oneDriveUsageAccountDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "oneDriveUsageAccountDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteUrl": {
              "type": "string"
            },
            "ownerDisplayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "fileCount": {
              "format": "int64",
              "type": "integer"
            },
            "activeFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "storageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "storageAllocatedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.oneDriveUsageAccountCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "oneDriveUsageAccountCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.oneDriveUsageFileCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "oneDriveUsageFileCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.siteUsageStorage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "siteUsageStorage",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "storageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointActivityUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "viewedOrEditedFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "syncedFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharedInternallyFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "sharedExternallyFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "visitedPageCount": {
              "format": "int64",
              "type": "integer"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointActivityUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "visitedPage": {
              "format": "int64",
              "type": "integer"
            },
            "viewedOrEdited": {
              "format": "int64",
              "type": "integer"
            },
            "synced": {
              "format": "int64",
              "type": "integer"
            },
            "sharedInternally": {
              "format": "int64",
              "type": "integer"
            },
            "sharedExternally": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointActivityPages": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointActivityPages",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "visitedPageCount": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointSiteUsageDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointSiteUsageDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteUrl": {
              "type": "string"
            },
            "ownerDisplayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "fileCount": {
              "format": "int64",
              "type": "integer"
            },
            "activeFileCount": {
              "format": "int64",
              "type": "integer"
            },
            "pageViewCount": {
              "format": "int64",
              "type": "integer"
            },
            "visitedPageCount": {
              "format": "int64",
              "type": "integer"
            },
            "storageUsedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "storageAllocatedInBytes": {
              "format": "int64",
              "type": "integer"
            },
            "rootWebTemplate": {
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointSiteUsageFileCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointSiteUsageFileCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointSiteUsageSiteCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointSiteUsageSiteCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.sharePointSiteUsagePages": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "sharePointSiteUsagePages",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "siteType": {
              "type": "string"
            },
            "pageViewCount": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessActivityUserDetail",
          "type": "object",
          "properties": {
            "totalPeerToPeerSessionCount": {
              "format": "int64",
              "type": "integer"
            },
            "totalOrganizedConferenceCount": {
              "format": "int64",
              "type": "integer"
            },
            "totalParticipatedConferenceCount": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "organizedConferenceLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "participatedConferenceLastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "peerToPeerIMCount": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerAudioCount": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerAudioMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerVideoCount": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerVideoMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerAppSharingCount": {
              "format": "int64",
              "type": "integer"
            },
            "peerToPeerFileTransferCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceIMCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceAudioVideoCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceAudioVideoMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceAppSharingCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceWebCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceDialInOut3rdPartyCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceCloudDialInOutMicrosoftCount": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceCloudDialInMicrosoftMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "organizedConferenceCloudDialOutMicrosoftMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceIMCount": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceAudioVideoCount": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceAudioVideoMinutes": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceAppSharingCount": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceWebCount": {
              "format": "int64",
              "type": "integer"
            },
            "participatedConferenceDialInOut3rdPartyCount": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessActivityCounts",
          "type": "object",
          "properties": {
            "peerToPeer": {
              "format": "int64",
              "type": "integer"
            },
            "organized": {
              "format": "int64",
              "type": "integer"
            },
            "participated": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessActivityUserCounts",
          "type": "object",
          "properties": {
            "peerToPeer": {
              "format": "int64",
              "type": "integer"
            },
            "organized": {
              "format": "int64",
              "type": "integer"
            },
            "participated": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessPeerToPeerActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessPeerToPeerActivityCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audio": {
              "format": "int64",
              "type": "integer"
            },
            "video": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "fileTransfer": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessPeerToPeerActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessPeerToPeerActivityUserCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audio": {
              "format": "int64",
              "type": "integer"
            },
            "video": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "fileTransfer": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessPeerToPeerActivityMinuteCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessPeerToPeerActivityMinuteCounts",
          "type": "object",
          "properties": {
            "audio": {
              "format": "int64",
              "type": "integer"
            },
            "video": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessOrganizerActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessOrganizerActivityCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audioVideo": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOut3rdParty": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOutMicrosoft": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessOrganizerActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessOrganizerActivityUserCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audioVideo": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOut3rdParty": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOutMicrosoft": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessOrganizerActivityMinuteCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessOrganizerActivityMinuteCounts",
          "type": "object",
          "properties": {
            "audioVideo": {
              "format": "int64",
              "type": "integer"
            },
            "dialInMicrosoft": {
              "format": "int64",
              "type": "integer"
            },
            "dialOutMicrosoft": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessParticipantActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessParticipantActivityCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audioVideo": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOut3rdParty": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessParticipantActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessParticipantActivityUserCounts",
          "type": "object",
          "properties": {
            "im": {
              "format": "int64",
              "type": "integer"
            },
            "audioVideo": {
              "format": "int64",
              "type": "integer"
            },
            "appSharing": {
              "format": "int64",
              "type": "integer"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "dialInOut3rdParty": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessParticipantActivityMinuteCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessParticipantActivityMinuteCounts",
          "type": "object",
          "properties": {
            "audiovideo": {
              "format": "int64",
              "type": "integer"
            },
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessDeviceUsageUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessDeviceUsageUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "usedWindows": {
              "type": "boolean"
            },
            "usedWindowsPhone": {
              "type": "boolean"
            },
            "usedAndroidPhone": {
              "type": "boolean"
            },
            "usediPhone": {
              "type": "boolean"
            },
            "usediPad": {
              "type": "boolean"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessDeviceUsageDistributionUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessDeviceUsageDistributionUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "windows": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "androidPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPad": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.skypeForBusinessDeviceUsageUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "skypeForBusinessDeviceUsageUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "windows": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "androidPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPad": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerActivityUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "userState": {
              "type": "string"
            },
            "stateChangeDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "postedCount": {
              "format": "int64",
              "type": "integer"
            },
            "readCount": {
              "format": "int64",
              "type": "integer"
            },
            "likedCount": {
              "format": "int64",
              "type": "integer"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerActivitySummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerActivitySummary",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "liked": {
              "format": "int64",
              "type": "integer"
            },
            "posted": {
              "format": "int64",
              "type": "integer"
            },
            "read": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerDeviceUsageUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerDeviceUsageUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "userState": {
              "type": "string"
            },
            "stateChangeDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "usedWeb": {
              "type": "boolean"
            },
            "usedWindowsPhone": {
              "type": "boolean"
            },
            "usedAndroidPhone": {
              "type": "boolean"
            },
            "usediPhone": {
              "type": "boolean"
            },
            "usediPad": {
              "type": "boolean"
            },
            "usedOthers": {
              "type": "boolean"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerDeviceUsageDistributionUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerDeviceUsageDistributionUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "web": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "androidPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPad": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "other": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerDeviceUsageUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerDeviceUsageUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "web": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "androidPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPhone": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "iPad": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "other": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerGroupsActivityDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerGroupsActivityDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "groupDisplayName": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "ownerPrincipalName": {
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "groupType": {
              "type": "string"
            },
            "office365Connected": {
              "type": "boolean"
            },
            "memberCount": {
              "format": "int64",
              "type": "integer"
            },
            "postedCount": {
              "format": "int64",
              "type": "integer"
            },
            "readCount": {
              "format": "int64",
              "type": "integer"
            },
            "likedCount": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerGroupsActivityGroupCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerGroupsActivityGroupCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "total": {
              "format": "int64",
              "type": "integer"
            },
            "active": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.yammerGroupsActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "yammerGroupsActivityCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "liked": {
              "format": "int64",
              "type": "integer"
            },
            "posted": {
              "format": "int64",
              "type": "integer"
            },
            "read": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsUserActivityUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsUserActivityUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "assignedProducts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "teamChatMessageCount": {
              "format": "int64",
              "type": "integer"
            },
            "privateChatMessageCount": {
              "format": "int64",
              "type": "integer"
            },
            "callCount": {
              "format": "int64",
              "type": "integer"
            },
            "meetingCount": {
              "format": "int64",
              "type": "integer"
            },
            "hasOtherAction": {
              "type": "boolean"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsUserActivityCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsUserActivityCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "teamChatMessages": {
              "format": "int64",
              "type": "integer"
            },
            "privateChatMessages": {
              "format": "int64",
              "type": "integer"
            },
            "calls": {
              "format": "int64",
              "type": "integer"
            },
            "meetings": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsUserActivityUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsUserActivityUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "teamChatMessages": {
              "format": "int64",
              "type": "integer"
            },
            "privateChatMessages": {
              "format": "int64",
              "type": "integer"
            },
            "calls": {
              "format": "int64",
              "type": "integer"
            },
            "meetings": {
              "format": "int64",
              "type": "integer"
            },
            "otherActions": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsDeviceUsageUserDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsDeviceUsageUserDetail",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "lastActivityDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "deletedDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "usedWeb": {
              "type": "boolean"
            },
            "usedWindowsPhone": {
              "type": "boolean"
            },
            "usediOS": {
              "type": "boolean"
            },
            "usedMac": {
              "type": "boolean"
            },
            "usedAndroidPhone": {
              "type": "boolean"
            },
            "usedWindows": {
              "type": "boolean"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsDeviceUsageUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsDeviceUsageUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int64",
              "type": "integer"
            },
            "androidPhone": {
              "format": "int64",
              "type": "integer"
            },
            "ios": {
              "format": "int64",
              "type": "integer"
            },
            "mac": {
              "format": "int64",
              "type": "integer"
            },
            "windows": {
              "format": "int64",
              "type": "integer"
            },
            "reportDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.teamsDeviceUsageDistributionUserCounts": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "teamsDeviceUsageDistributionUserCounts",
          "type": "object",
          "properties": {
            "reportRefreshDate": {
              "format": "date",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string"
            },
            "web": {
              "format": "int64",
              "type": "integer"
            },
            "windowsPhone": {
              "format": "int64",
              "type": "integer"
            },
            "androidPhone": {
              "format": "int64",
              "type": "integer"
            },
            "ios": {
              "format": "int64",
              "type": "integer"
            },
            "mac": {
              "format": "int64",
              "type": "integer"
            },
            "windows": {
              "format": "int64",
              "type": "integer"
            },
            "reportPeriod": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.PayloadRequest": {
      "title": "PayloadRequest",
      "type": "object"
    },
    "microsoft.graph.payloadResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "payloadResponse",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.teamMemberSettings": {
      "title": "teamMemberSettings",
      "type": "object",
      "properties": {
        "allowCreateUpdateChannels": {
          "type": "boolean"
        },
        "allowDeleteChannels": {
          "type": "boolean"
        },
        "allowAddRemoveApps": {
          "type": "boolean"
        },
        "allowCreateUpdateRemoveTabs": {
          "type": "boolean"
        },
        "allowCreateUpdateRemoveConnectors": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.teamMessagingSettings": {
      "title": "teamMessagingSettings",
      "type": "object",
      "properties": {
        "allowUserEditMessages": {
          "type": "boolean"
        },
        "allowUserDeleteMessages": {
          "type": "boolean"
        },
        "allowOwnerDeleteMessages": {
          "type": "boolean"
        },
        "allowTeamMentions": {
          "type": "boolean"
        },
        "allowChannelMentions": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.teamFunSettings": {
      "title": "teamFunSettings",
      "type": "object",
      "properties": {
        "allowGiphy": {
          "type": "boolean"
        },
        "giphyContentRating": { },
        "allowStickersAndMemes": {
          "type": "boolean"
        },
        "allowCustomMemes": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.teamGuestSettings": {
      "title": "teamGuestSettings",
      "type": "object",
      "properties": {
        "allowCreateUpdateChannels": {
          "type": "boolean"
        },
        "allowDeleteChannels": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.chatThread": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "chatThread",
          "type": "object",
          "properties": {
            "chatMessages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.chatMessage"
              }
            },
            "rootMessage": { }
          }
        }
      ]
    },
    "microsoft.graph.chatMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "chatMessage",
          "type": "object",
          "properties": {
            "body": { },
            "inReplyTo": { },
            "replies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.chatMessage"
              }
            },
            "from": { }
          }
        }
      ]
    },
    "microsoft.graph.IdentityProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "IdentityProvider",
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.synchronizationSecretKeyStringValuePair": {
      "title": "synchronizationSecretKeyStringValuePair",
      "type": "object",
      "properties": {
        "key": { },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.synchronizationJob": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "synchronizationJob",
          "type": "object",
          "properties": {
            "templateId": {
              "type": "string"
            },
            "schedule": { },
            "status": { },
            "schema": { }
          }
        }
      ]
    },
    "microsoft.graph.synchronizationTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "synchronizationTemplate",
          "type": "object",
          "properties": {
            "applicationId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "default": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "discoverable": {
              "type": "boolean"
            },
            "factoryTag": {
              "type": "string"
            },
            "metadata": {
              "type": "array",
              "items": { }
            },
            "schema": { }
          }
        }
      ]
    },
    "microsoft.graph.metadataEntry": {
      "title": "metadataEntry",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.synchronizationSchema": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "synchronizationSchema",
          "type": "object",
          "properties": {
            "directories": {
              "type": "array",
              "items": { }
            },
            "synchronizationRules": {
              "type": "array",
              "items": { }
            },
            "version": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.synchronizationSchedule": {
      "title": "synchronizationSchedule",
      "type": "object",
      "properties": {
        "expiration": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "interval": {
          "format": "duration",
          "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
          "type": "string"
        },
        "state": { }
      }
    },
    "microsoft.graph.synchronizationStatus": {
      "title": "synchronizationStatus",
      "type": "object",
      "properties": {
        "countSuccessiveCompleteFailures": {
          "format": "int64",
          "type": "integer"
        },
        "escrowsPruned": {
          "type": "boolean"
        },
        "synchronizedEntryCountByType": {
          "type": "array",
          "items": { }
        },
        "code": { },
        "lastExecution": { },
        "lastSuccessfulExecution": { },
        "lastSuccessfulExecutionWithExports": { },
        "steadyStateFirstAchievedTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "steadyStateLastAchievedTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "quarantine": { },
        "troubleshootingUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.stringKeyLongValuePair": {
      "title": "stringKeyLongValuePair",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.synchronizationTaskExecution": {
      "title": "synchronizationTaskExecution",
      "type": "object",
      "properties": {
        "activityIdentifier": {
          "type": "string"
        },
        "countEntitled": {
          "format": "int64",
          "type": "integer"
        },
        "countEntitledForProvisioning": {
          "format": "int64",
          "type": "integer"
        },
        "countEscrowed": {
          "format": "int64",
          "type": "integer"
        },
        "countEscrowedRaw": {
          "format": "int64",
          "type": "integer"
        },
        "countExported": {
          "format": "int64",
          "type": "integer"
        },
        "countExports": {
          "format": "int64",
          "type": "integer"
        },
        "countImported": {
          "format": "int64",
          "type": "integer"
        },
        "countImportedDeltas": {
          "format": "int64",
          "type": "integer"
        },
        "countImportedReferenceDeltas": {
          "format": "int64",
          "type": "integer"
        },
        "state": { },
        "error": { },
        "timeBegan": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "timeEnded": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.synchronizationError": {
      "title": "synchronizationError",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "tenantActionable": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.synchronizationQuarantine": {
      "title": "synchronizationQuarantine",
      "type": "object",
      "properties": {
        "currentBegan": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "nextAttempt": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "reason": { },
        "seriesBegan": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "seriesCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "microsoft.graph.synchronizationJobRestartCriteria": {
      "title": "synchronizationJobRestartCriteria",
      "type": "object",
      "properties": {
        "resetScope": { }
      }
    },
    "microsoft.graph.directoryDefinition": {
      "title": "directoryDefinition",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "objects": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.objectDefinition": {
      "title": "objectDefinition",
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": { }
        },
        "metadata": {
          "type": "array",
          "items": { }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attributeDefinition": {
      "title": "attributeDefinition",
      "type": "object",
      "properties": {
        "anchor": {
          "type": "boolean"
        },
        "caseExact": {
          "type": "boolean"
        },
        "defaultValue": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": { }
        },
        "multivalued": {
          "type": "boolean"
        },
        "mutability": { },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "referencedObjects": {
          "type": "array",
          "items": { }
        },
        "type": { }
      }
    },
    "microsoft.graph.referencedObject": {
      "title": "referencedObject",
      "type": "object",
      "properties": {
        "referencedObjectName": {
          "type": "string"
        },
        "referencedProperty": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.synchronizationRule": {
      "title": "synchronizationRule",
      "type": "object",
      "properties": {
        "editable": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": { }
        },
        "name": {
          "type": "string"
        },
        "objectMappings": {
          "type": "array",
          "items": { }
        },
        "priority": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sourceDirectoryName": {
          "type": "string"
        },
        "targetDirectoryName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.stringKeyStringValuePair": {
      "title": "stringKeyStringValuePair",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.objectMapping": {
      "title": "objectMapping",
      "type": "object",
      "properties": {
        "attributeMappings": {
          "type": "array",
          "items": { }
        },
        "enabled": {
          "type": "boolean"
        },
        "flowTypes": { },
        "metadata": {
          "type": "array",
          "items": { }
        },
        "name": {
          "type": "string"
        },
        "scope": { },
        "sourceObjectName": {
          "type": "string"
        },
        "targetObjectName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attributeMapping": {
      "title": "attributeMapping",
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "exportMissingReferences": {
          "type": "boolean"
        },
        "flowBehavior": { },
        "flowType": { },
        "matchingPriority": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "source": { },
        "targetAttributeName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attributeMappingSource": {
      "title": "attributeMappingSource",
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": { }
        },
        "type": { }
      }
    },
    "microsoft.graph.stringKeyAttributeMappingSourceValuePair": {
      "title": "stringKeyAttributeMappingSourceValuePair",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": { }
      }
    },
    "microsoft.graph.filter": {
      "title": "filter",
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": { }
        },
        "inputFilterGroups": {
          "type": "array",
          "items": { }
        },
        "categoryFilterGroups": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.filterGroup": {
      "title": "filterGroup",
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": { }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.filterClause": {
      "title": "filterClause",
      "type": "object",
      "properties": {
        "operatorName": {
          "type": "string"
        },
        "sourceOperandName": {
          "type": "string"
        },
        "targetOperand": { }
      }
    },
    "microsoft.graph.filterOperand": {
      "title": "filterOperand",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.attributeMappingFunctionSchema": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "attributeMappingFunctionSchema",
          "type": "object",
          "properties": {
            "parameters": {
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.attributeMappingParameterSchema": {
      "title": "attributeMappingParameterSchema",
      "type": "object",
      "properties": {
        "allowMultipleOccurrences": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": { }
      }
    },
    "microsoft.graph.filterOperatorSchema": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "filterOperatorSchema",
          "type": "object",
          "properties": {
            "arity": { },
            "multivaluedComparisonType": { },
            "supportedAttributeTypes": {
              "type": "array",
              "items": { }
            }
          }
        }
      ]
    },
    "microsoft.graph.expressionInputObject": {
      "title": "expressionInputObject",
      "type": "object",
      "properties": {
        "definition": { },
        "properties": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.stringKeyObjectValuePair": {
      "title": "stringKeyObjectValuePair",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.parseExpressionResponse": {
      "title": "parseExpressionResponse",
      "type": "object",
      "properties": {
        "error": { },
        "evaluationSucceeded": {
          "type": "boolean"
        },
        "evaluationResult": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parsedExpression": { },
        "parsingSucceeded": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.publicError": {
      "title": "publicError",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": { }
        },
        "innerError": { }
      }
    },
    "microsoft.graph.publicErrorDetail": {
      "title": "publicErrorDetail",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.publicInnerError": {
      "title": "publicInnerError",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": { }
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.publicErrorResponse": {
      "title": "publicErrorResponse",
      "type": "object",
      "properties": {
        "error": { }
      }
    },
    "microsoft.graph.educationRoot": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationRoot",
          "type": "object",
          "properties": {
            "synchronizationProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSynchronizationProfile"
              }
            },
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            },
            "me": { }
          }
        }
      ]
    },
    "microsoft.graph.educationSynchronizationProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationSynchronizationProfile",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "dataProvider": {
              "$ref": "#/definitions/microsoft.graph.educationSynchronizationDataProvider"
            },
            "identitySynchronizationConfiguration": {
              "$ref": "#/definitions/microsoft.graph.educationIdentitySynchronizationConfiguration"
            },
            "licensesToAssign": {
              "type": "array",
              "items": { }
            },
            "state": { },
            "handleSpecialCharacterConstraint": {
              "type": "boolean"
            },
            "termStartDate": {
              "type": "string"
            },
            "termEndDate": {
              "type": "string"
            },
            "dateFormat": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSynchronizationError"
              }
            },
            "profileStatus": { }
          }
        }
      ]
    },
    "microsoft.graph.educationClass": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationClass",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "mailNickname": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "createdBy": { },
            "classCode": {
              "type": "string"
            },
            "externalName": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "externalSource": { },
            "term": { },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            },
            "teachers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationOrganization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationOrganization",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "externalSource": { }
          }
        }
      ]
    },
    "microsoft.graph.educationSchool": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationOrganization"
        },
        {
          "title": "educationSchool",
          "type": "object",
          "properties": {
            "principalEmail": {
              "type": "string"
            },
            "principalName": {
              "type": "string"
            },
            "externalPrincipalId": {
              "type": "string"
            },
            "lowestGrade": {
              "type": "string"
            },
            "highestGrade": {
              "type": "string"
            },
            "schoolNumber": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "fax": {
              "type": "string"
            },
            "createdBy": { },
            "address": { },
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationUser",
          "type": "object",
          "properties": {
            "primaryRole": { },
            "middleName": {
              "type": "string"
            },
            "externalSource": { },
            "residenceAddress": { },
            "mailingAddress": { },
            "student": { },
            "teacher": { },
            "createdBy": { },
            "accountEnabled": {
              "type": "boolean"
            },
            "assignedLicenses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedLicense"
              }
            },
            "assignedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedPlan"
              }
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "department": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "mail": {
              "type": "string"
            },
            "mailNickname": {
              "type": "string"
            },
            "mobilePhone": {
              "type": "string"
            },
            "passwordPolicies": {
              "type": "string"
            },
            "passwordProfile": { },
            "officeLocation": {
              "type": "string"
            },
            "preferredLanguage": {
              "type": "string"
            },
            "provisionedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.provisionedPlan"
              }
            },
            "refreshTokensValidFromDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "showInAddressList": {
              "type": "boolean"
            },
            "surname": {
              "type": "string"
            },
            "usageLocation": {
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "userType": {
              "type": "string"
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationAssignment"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationSynchronizationDataProvider": {
      "title": "educationSynchronizationDataProvider",
      "type": "object"
    },
    "microsoft.graph.educationIdentitySynchronizationConfiguration": {
      "title": "educationIdentitySynchronizationConfiguration",
      "type": "object"
    },
    "microsoft.graph.educationSynchronizationLicenseAssignment": {
      "title": "educationSynchronizationLicenseAssignment",
      "type": "object",
      "properties": {
        "appliesTo": { },
        "skuIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "microsoft.graph.educationSynchronizationError": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationSynchronizationError",
          "type": "object",
          "properties": {
            "entryType": {
              "type": "string"
            },
            "errorCode": {
              "type": "string"
            },
            "errorMessage": {
              "type": "string"
            },
            "joiningValue": {
              "type": "string"
            },
            "recordedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "reportableIdentifier": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationSynchronizationProfileStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationSynchronizationProfileStatus",
          "type": "object",
          "properties": {
            "status": { },
            "lastSynchronizationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationFileSynchronizationVerificationMessage": {
      "title": "educationFileSynchronizationVerificationMessage",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationSynchronizationCustomizationsBase": {
      "title": "educationSynchronizationCustomizationsBase",
      "type": "object"
    },
    "microsoft.graph.educationSynchronizationCustomization": {
      "title": "educationSynchronizationCustomization",
      "type": "object",
      "properties": {
        "optionalPropertiesToSync": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "synchronizationStartDate": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "isSyncDeferred": {
          "type": "boolean"
        },
        "allowDisplayNameUpdate": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.educationSynchronizationCustomizations": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationSynchronizationCustomizationsBase"
        },
        {
          "title": "educationSynchronizationCustomizations",
          "type": "object",
          "properties": {
            "school": { },
            "section": { },
            "student": { },
            "teacher": { },
            "studentEnrollment": { },
            "teacherRoster": { }
          }
        }
      ]
    },
    "microsoft.graph.educationPowerSchoolDataProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationSynchronizationDataProvider"
        },
        {
          "title": "educationPowerSchoolDataProvider",
          "type": "object",
          "properties": {
            "connectionUrl": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "schoolsIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schoolYear": {
              "type": "string"
            },
            "allowTeachersInMultipleSchools": {
              "type": "boolean"
            },
            "customizations": { }
          }
        }
      ]
    },
    "microsoft.graph.educationCsvDataProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationSynchronizationDataProvider"
        },
        {
          "title": "educationCsvDataProvider",
          "type": "object",
          "properties": {
            "customizations": { }
          }
        }
      ]
    },
    "microsoft.graph.educationOneRosterApiDataProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationSynchronizationDataProvider"
        },
        {
          "title": "educationOneRosterApiDataProvider",
          "type": "object",
          "properties": {
            "connectionUrl": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "customizations": { }
          }
        }
      ]
    },
    "microsoft.graph.educationIdentityMatchingConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationIdentitySynchronizationConfiguration"
        },
        {
          "title": "educationIdentityMatchingConfiguration",
          "type": "object",
          "properties": {
            "matchingOptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationIdentityMatchingOptions"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationIdentityMatchingOptions": {
      "title": "educationIdentityMatchingOptions",
      "type": "object",
      "properties": {
        "appliesTo": { },
        "sourcePropertyName": {
          "type": "string"
        },
        "targetPropertyName": {
          "type": "string"
        },
        "targetDomain": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationIdentityDomain": {
      "title": "educationIdentityDomain",
      "type": "object",
      "properties": {
        "appliesTo": { },
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationIdentityCreationConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationIdentitySynchronizationConfiguration"
        },
        {
          "title": "educationIdentityCreationConfiguration",
          "type": "object",
          "properties": {
            "userDomains": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationIdentityDomain"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationStudent": {
      "title": "educationStudent",
      "type": "object",
      "properties": {
        "graduationYear": {
          "type": "string"
        },
        "grade": {
          "type": "string"
        },
        "birthDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "gender": { },
        "studentNumber": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationTeacher": {
      "title": "educationTeacher",
      "type": "object",
      "properties": {
        "teacherNumber": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationAssignment",
          "type": "object",
          "properties": {
            "classId": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "instructions": { },
            "dueDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "assignDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "assignedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "grading": { },
            "assignTo": { },
            "allowLateSubmissions": {
              "type": "boolean"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedBy": { },
            "allowStudentsToAddResourcesToSubmission": {
              "type": "boolean"
            },
            "status": { },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationAssignmentResource"
              }
            },
            "submissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSubmission"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationTerm": {
      "title": "educationTerm",
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationItemBody": {
      "title": "educationItemBody",
      "type": "object",
      "properties": {
        "contentType": { },
        "content": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationAssignmentGradeType": {
      "title": "educationAssignmentGradeType",
      "type": "object"
    },
    "microsoft.graph.educationAssignmentPointsGradeType": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationAssignmentGradeType"
        },
        {
          "title": "educationAssignmentPointsGradeType",
          "type": "object",
          "properties": {
            "maxPoints": {
              "format": "float"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationAssignmentGrade": {
      "title": "educationAssignmentGrade",
      "type": "object",
      "properties": {
        "gradedBy": { },
        "gradedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.educationAssignmentPointsGrade": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationAssignmentGrade"
        },
        {
          "title": "educationAssignmentPointsGrade",
          "type": "object",
          "properties": {
            "points": {
              "format": "float"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationAssignmentRecipient": {
      "title": "educationAssignmentRecipient",
      "type": "object"
    },
    "microsoft.graph.educationAssignmentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationAssignmentResource",
          "type": "object",
          "properties": {
            "distributeForStudentWork": {
              "type": "boolean"
            },
            "resource": { }
          }
        }
      ]
    },
    "microsoft.graph.educationSubmission": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationSubmission",
          "type": "object",
          "properties": {
            "recipient": { },
            "status": { },
            "submittedBy": { },
            "submittedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "releasedBy": { },
            "releasedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "grade": { },
            "feedback": { },
            "resourcesFolderUrl": {
              "type": "string"
            },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSubmissionResource"
              }
            },
            "submittedResources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSubmissionResource"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.educationAssignmentClassRecipient": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationAssignmentRecipient"
        },
        {
          "title": "educationAssignmentClassRecipient",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.educationAssignmentGroupRecipient": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationAssignmentRecipient"
        },
        {
          "title": "educationAssignmentGroupRecipient",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.educationResource": {
      "title": "educationResource",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "createdBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastModifiedBy": { }
      }
    },
    "microsoft.graph.educationSubmissionResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationSubmissionResource",
          "type": "object",
          "properties": {
            "resource": { },
            "assignmentResourceUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationWordResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationWordResource",
          "type": "object",
          "properties": {
            "fileUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationPowerPointResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationPowerPointResource",
          "type": "object",
          "properties": {
            "fileUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationExcelResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationExcelResource",
          "type": "object",
          "properties": {
            "fileUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationOneNoteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationOneNoteResource",
          "type": "object",
          "properties": {
            "sectionName": {
              "type": "string"
            },
            "pageUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationFileResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationFileResource",
          "type": "object",
          "properties": {
            "fileUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationLinkResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationResource"
        },
        {
          "title": "educationLinkResource",
          "type": "object",
          "properties": {
            "link": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationSubmissionRecipient": {
      "title": "educationSubmissionRecipient",
      "type": "object"
    },
    "microsoft.graph.educationSubmissionIndividualRecipient": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationSubmissionRecipient"
        },
        {
          "title": "educationSubmissionIndividualRecipient",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.educationFeedback": {
      "title": "educationFeedback",
      "type": "object",
      "properties": {
        "text": { },
        "feedbackDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "feedbackBy": { }
      }
    },
    "microsoft.graph.auditActor": {
      "title": "auditActor",
      "type": "object",
      "properties": {
        "type": {
          "description": "Actor Type.",
          "type": "string"
        },
        "permissions": {
          "description": "List of user permissions when the audit was performed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userPermissions": {
          "description": "List of user permissions when the audit was performed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationId": {
          "description": "AAD Application Id.",
          "type": "string"
        },
        "applicationDisplayName": {
          "description": "Name of the Application.",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "User Principal Name (UPN).",
          "type": "string"
        },
        "servicePrincipalName": {
          "description": "Service Principal Name (SPN).",
          "type": "string"
        },
        "ipAddress": {
          "description": "IPAddress.",
          "type": "string"
        },
        "userId": {
          "description": "User Id.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.auditResource": {
      "title": "auditResource",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "modifiedProperties": {
          "description": "List of modified properties.",
          "type": "array",
          "items": { }
        },
        "type": {
          "description": "Audit resource's type.",
          "type": "string"
        },
        "resourceId": {
          "description": "Audit resource's Id.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.auditProperty": {
      "title": "auditProperty",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "oldValue": {
          "description": "Old value.",
          "type": "string"
        },
        "newValue": {
          "description": "New value.",
          "type": "string"
        }
      }
    },
    "microsoft.graph.enrollmentTroubleshootingEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
        },
        {
          "title": "enrollmentTroubleshootingEvent",
          "description": "Event representing an enrollment failure.",
          "type": "object",
          "properties": {
            "managedDeviceIdentifier": {
              "description": "Device identifier created or collected by Intune.",
              "type": "string"
            },
            "operatingSystem": {
              "description": "Operating System.",
              "type": "string"
            },
            "osVersion": {
              "description": "OS Version.",
              "type": "string"
            },
            "userId": {
              "description": "Identifier for the user that tried to enroll the device.",
              "type": "string"
            },
            "deviceId": {
              "description": "Azure AD device identifier.",
              "type": "string"
            },
            "enrollmentType": {
              "description": "Type of the enrollment."
            },
            "failureCategory": {
              "description": "Highlevel failure category."
            },
            "failureReason": {
              "description": "Detailed failure reason.",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.status": {
      "title": "status",
      "enum": [
        "active",
        "updated",
        "deleted",
        "ignored"
      ],
      "type": "string"
    },
    "microsoft.graph.dayOfWeek": {
      "title": "dayOfWeek",
      "enum": [
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "type": "string"
    },
    "microsoft.graph.automaticRepliesStatus": {
      "title": "automaticRepliesStatus",
      "enum": [
        "disabled",
        "alwaysEnabled",
        "scheduled"
      ],
      "type": "string"
    },
    "microsoft.graph.externalAudienceScope": {
      "title": "externalAudienceScope",
      "enum": [
        "none",
        "contactsOnly",
        "all"
      ],
      "type": "string"
    },
    "microsoft.graph.attendeeType": {
      "title": "attendeeType",
      "enum": [
        "required",
        "optional",
        "resource"
      ],
      "type": "string"
    },
    "microsoft.graph.freeBusyStatus": {
      "title": "freeBusyStatus",
      "enum": [
        "free",
        "tentative",
        "busy",
        "oof",
        "workingElsewhere",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.physicalAddressType": {
      "title": "physicalAddressType",
      "enum": [
        "unknown",
        "home",
        "business",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.locationType": {
      "title": "locationType",
      "enum": [
        "default",
        "conferenceRoom",
        "homeAddress",
        "businessAddress",
        "geoCoordinates",
        "streetAddress",
        "hotel",
        "restaurant",
        "localBusiness",
        "postalAddress"
      ],
      "type": "string"
    },
    "microsoft.graph.locationUniqueIdType": {
      "title": "locationUniqueIdType",
      "enum": [
        "unknown",
        "locationStore",
        "directory",
        "private",
        "bing"
      ],
      "type": "string"
    },
    "microsoft.graph.activityDomain": {
      "title": "activityDomain",
      "enum": [
        "unknown",
        "work",
        "personal",
        "unrestricted"
      ],
      "type": "string"
    },
    "microsoft.graph.recipientScopeType": {
      "title": "recipientScopeType",
      "enum": [
        "none",
        "internal",
        "external",
        "externalPartner",
        "externalNonPartner"
      ],
      "type": "string"
    },
    "microsoft.graph.mailTipsType": {
      "title": "mailTipsType",
      "enum": [
        "automaticReplies",
        "mailboxFullStatus",
        "customMailTip",
        "externalMemberCount",
        "totalMemberCount",
        "maxMessageSize",
        "deliveryRestriction",
        "moderationStatus",
        "recipientScope",
        "recipientSuggestions"
      ],
      "type": "string"
    },
    "microsoft.graph.timeZoneStandard": {
      "title": "timeZoneStandard",
      "enum": [
        "windows",
        "iana"
      ],
      "type": "string"
    },
    "microsoft.graph.bodyType": {
      "title": "bodyType",
      "enum": [
        "text",
        "html"
      ],
      "type": "string"
    },
    "microsoft.graph.importance": {
      "title": "importance",
      "enum": [
        "low",
        "normal",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.inferenceClassificationType": {
      "title": "inferenceClassificationType",
      "enum": [
        "focused",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.followupFlagStatus": {
      "title": "followupFlagStatus",
      "enum": [
        "notFlagged",
        "complete",
        "flagged"
      ],
      "type": "string"
    },
    "microsoft.graph.calendarColor": {
      "title": "calendarColor",
      "enum": [
        "lightBlue",
        "lightGreen",
        "lightOrange",
        "lightGray",
        "lightYellow",
        "lightTeal",
        "lightPink",
        "lightBrown",
        "lightRed",
        "maxColor",
        "auto"
      ],
      "type": "string"
    },
    "microsoft.graph.responseType": {
      "title": "responseType",
      "enum": [
        "none",
        "organizer",
        "tentativelyAccepted",
        "accepted",
        "declined",
        "notResponded"
      ],
      "type": "string"
    },
    "microsoft.graph.sensitivity": {
      "title": "sensitivity",
      "enum": [
        "normal",
        "personal",
        "private",
        "confidential"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrencePatternType": {
      "title": "recurrencePatternType",
      "enum": [
        "daily",
        "weekly",
        "absoluteMonthly",
        "relativeMonthly",
        "absoluteYearly",
        "relativeYearly"
      ],
      "type": "string"
    },
    "microsoft.graph.weekIndex": {
      "title": "weekIndex",
      "enum": [
        "first",
        "second",
        "third",
        "fourth",
        "last"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrenceRangeType": {
      "title": "recurrenceRangeType",
      "enum": [
        "endDate",
        "noEnd",
        "numbered"
      ],
      "type": "string"
    },
    "microsoft.graph.eventType": {
      "title": "eventType",
      "enum": [
        "singleInstance",
        "occurrence",
        "exception",
        "seriesMaster"
      ],
      "type": "string"
    },
    "microsoft.graph.phoneType": {
      "title": "phoneType",
      "enum": [
        "home",
        "business",
        "mobile",
        "other",
        "assistant",
        "homeFax",
        "businessFax",
        "otherFax",
        "pager",
        "radio"
      ],
      "type": "string"
    },
    "microsoft.graph.websiteType": {
      "title": "websiteType",
      "enum": [
        "other",
        "home",
        "work",
        "blog",
        "profile"
      ],
      "type": "string"
    },
    "microsoft.graph.meetingMessageType": {
      "title": "meetingMessageType",
      "enum": [
        "none",
        "meetingRequest",
        "meetingCancelled",
        "meetingAccepted",
        "meetingTentativelyAccepted",
        "meetingDeclined"
      ],
      "type": "string"
    },
    "microsoft.graph.messageActionFlag": {
      "title": "messageActionFlag",
      "enum": [
        "any",
        "call",
        "doNotForward",
        "followUp",
        "fyi",
        "forward",
        "noResponseNecessary",
        "read",
        "reply",
        "replyToAll",
        "review"
      ],
      "type": "string"
    },
    "microsoft.graph.referenceAttachmentProvider": {
      "title": "referenceAttachmentProvider",
      "enum": [
        "other",
        "oneDriveBusiness",
        "oneDriveConsumer",
        "dropbox"
      ],
      "type": "string"
    },
    "microsoft.graph.referenceAttachmentPermission": {
      "title": "referenceAttachmentPermission",
      "enum": [
        "other",
        "view",
        "edit",
        "anonymousView",
        "anonymousEdit",
        "organizationView",
        "organizationEdit"
      ],
      "type": "string"
    },
    "microsoft.graph.groupAccessType": {
      "title": "groupAccessType",
      "enum": [
        "none",
        "private",
        "secret",
        "public"
      ],
      "type": "string"
    },
    "microsoft.graph.categoryColor": {
      "title": "categoryColor",
      "enum": [
        "preset0",
        "preset1",
        "preset2",
        "preset3",
        "preset4",
        "preset5",
        "preset6",
        "preset7",
        "preset8",
        "preset9",
        "preset10",
        "preset11",
        "preset12",
        "preset13",
        "preset14",
        "preset15",
        "preset16",
        "preset17",
        "preset18",
        "preset19",
        "preset20",
        "preset21",
        "preset22",
        "preset23",
        "preset24",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.taskStatus": {
      "title": "taskStatus",
      "enum": [
        "notStarted",
        "inProgress",
        "completed",
        "waitingOnOthers",
        "deferred"
      ],
      "type": "string"
    },
    "microsoft.graph.plannerPreviewType": {
      "title": "plannerPreviewType",
      "enum": [
        "automatic",
        "noPreview",
        "checklist",
        "description",
        "reference"
      ],
      "type": "string"
    },
    "microsoft.graph.operationStatus": {
      "title": "operationStatus",
      "enum": [
        "NotStarted",
        "Running",
        "Completed",
        "Failed"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchInsertPosition": {
      "title": "onenotePatchInsertPosition",
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchActionType": {
      "title": "onenotePatchActionType",
      "enum": [
        "Replace",
        "Append",
        "Delete",
        "Insert",
        "Prepend"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteSourceService": {
      "title": "onenoteSourceService",
      "enum": [
        "Unknown",
        "OneDrive",
        "OneDriveForBusiness",
        "OnPremOneDriveForBusiness"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteUserRole": {
      "title": "onenoteUserRole",
      "enum": [
        "Owner",
        "Contributor",
        "Reader",
        "None"
      ],
      "type": "string"
    },
    "microsoft.graph.riskEventStatus": {
      "title": "riskEventStatus",
      "enum": [
        "active",
        "remediated",
        "dismissedAsFixed",
        "dismissedAsFalsePositive",
        "dismissedAsIgnore",
        "loginBlocked",
        "closedMfaAuto",
        "closedMultipleReasons"
      ],
      "type": "string"
    },
    "microsoft.graph.riskLevel": {
      "title": "riskLevel",
      "enum": [
        "low",
        "medium",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.userRiskLevel": {
      "title": "userRiskLevel",
      "enum": [
        "unknown",
        "none",
        "low",
        "medium",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.approvalState": {
      "title": "approvalState",
      "enum": [
        "pending",
        "approved",
        "denied",
        "aborted",
        "canceled"
      ],
      "type": "string"
    },
    "microsoft.graph.roleSummaryStatus": {
      "title": "roleSummaryStatus",
      "enum": [
        "ok",
        "bad"
      ],
      "type": "string"
    },
    "microsoft.graph.setupStatus": {
      "title": "setupStatus",
      "enum": [
        "unknown",
        "notRegisteredYet",
        "registeredSetupNotStarted",
        "registeredSetupInProgress",
        "registrationAndSetupCompleted",
        "registrationFailed",
        "registrationTimedOut",
        "disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkBindStatus": {
      "title": "androidForWorkBindStatus",
      "enum": [
        "notBound",
        "bound",
        "boundAndValidated",
        "unbinding"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkSyncStatus": {
      "title": "androidForWorkSyncStatus",
      "enum": [
        "success",
        "credentialsNotValid",
        "androidForWorkApiError",
        "managementServiceError",
        "unknownError",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkEnrollmentTarget": {
      "title": "androidForWorkEnrollmentTarget",
      "enum": [
        "none",
        "all",
        "targeted",
        "targetedAsEnrollmentRestrictions"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkAppConfigurationSchemaItemDataType": {
      "title": "androidForWorkAppConfigurationSchemaItemDataType",
      "enum": [
        "bool",
        "integer",
        "string",
        "choice",
        "multiselect",
        "bundle",
        "bundleArray",
        "hidden"
      ],
      "type": "string"
    },
    "microsoft.graph.appInstallIntent": {
      "title": "appInstallIntent",
      "enum": [
        "available",
        "notApplicable",
        "required",
        "uninstall",
        "availableWithoutEnrollment"
      ],
      "type": "string"
    },
    "microsoft.graph.installIntent": {
      "title": "installIntent",
      "enum": [
        "available",
        "required",
        "uninstall",
        "availableWithoutEnrollment"
      ],
      "type": "string"
    },
    "microsoft.graph.resultantAppState": {
      "title": "resultantAppState",
      "enum": [
        "installed",
        "failed",
        "notInstalled",
        "uninstallFailed",
        "pendingInstall",
        "unknown",
        "notApplicable"
      ],
      "type": "string"
    },
    "microsoft.graph.officeProductId": {
      "title": "officeProductId",
      "enum": [
        "o365ProPlusRetail",
        "o365BusinessRetail",
        "visioProRetail",
        "projectProRetail"
      ],
      "type": "string"
    },
    "microsoft.graph.officeUpdateChannel": {
      "title": "officeUpdateChannel",
      "enum": [
        "none",
        "current",
        "deferred",
        "firstReleaseCurrent",
        "firstReleaseDeferred"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsArchitecture": {
      "title": "windowsArchitecture",
      "enum": [
        "none",
        "x86",
        "x64",
        "arm",
        "neutral"
      ],
      "type": "string"
    },
    "microsoft.graph.officeSuiteInstallProgressDisplayLevel": {
      "title": "officeSuiteInstallProgressDisplayLevel",
      "enum": [
        "none",
        "full"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppAvailability": {
      "title": "managedAppAvailability",
      "enum": [
        "global",
        "lineOfBusiness"
      ],
      "type": "string"
    },
    "microsoft.graph.mobileAppContentFileUploadState": {
      "title": "mobileAppContentFileUploadState",
      "enum": [
        "success",
        "transientError",
        "error",
        "unknown",
        "azureStorageUriRequestSuccess",
        "azureStorageUriRequestPending",
        "azureStorageUriRequestFailed",
        "azureStorageUriRequestTimedOut",
        "azureStorageUriRenewalSuccess",
        "azureStorageUriRenewalPending",
        "azureStorageUriRenewalFailed",
        "azureStorageUriRenewalTimedOut",
        "commitFileSuccess",
        "commitFilePending",
        "commitFileFailed",
        "commitFileTimedOut"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsDeviceType": {
      "title": "windowsDeviceType",
      "enum": [
        "none",
        "desktop",
        "mobile",
        "holographic",
        "team"
      ],
      "type": "string"
    },
    "microsoft.graph.microsoftStoreForBusinessLicenseType": {
      "title": "microsoftStoreForBusinessLicenseType",
      "enum": [
        "offline",
        "online"
      ],
      "type": "string"
    },
    "microsoft.graph.volumePurchaseProgramTokenAccountType": {
      "title": "volumePurchaseProgramTokenAccountType",
      "enum": [
        "business",
        "education"
      ],
      "type": "string"
    },
    "microsoft.graph.volumePurchaseProgramTokenState": {
      "title": "volumePurchaseProgramTokenState",
      "enum": [
        "unknown",
        "valid",
        "expired",
        "invalid"
      ],
      "type": "string"
    },
    "microsoft.graph.volumePurchaseProgramTokenSyncStatus": {
      "title": "volumePurchaseProgramTokenSyncStatus",
      "enum": [
        "none",
        "inProgress",
        "completed",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenAccountType": {
      "title": "vppTokenAccountType",
      "enum": [
        "business",
        "education"
      ],
      "type": "string"
    },
    "microsoft.graph.certificateStatus": {
      "title": "certificateStatus",
      "enum": [
        "notProvisioned",
        "provisioned"
      ],
      "type": "string"
    },
    "microsoft.graph.complianceStatus": {
      "title": "complianceStatus",
      "enum": [
        "unknown",
        "notApplicable",
        "compliant",
        "remediated",
        "nonCompliant",
        "error",
        "conflict"
      ],
      "type": "string"
    },
    "microsoft.graph.androidPermissionActionType": {
      "title": "androidPermissionActionType",
      "enum": [
        "prompt",
        "autoGrant",
        "autoDeny"
      ],
      "type": "string"
    },
    "microsoft.graph.mdmAppConfigKeyType": {
      "title": "mdmAppConfigKeyType",
      "enum": [
        "stringType",
        "integerType",
        "realType",
        "booleanType",
        "tokenType"
      ],
      "type": "string"
    },
    "microsoft.graph.iTunesPairingMode": {
      "title": "iTunesPairingMode",
      "enum": [
        "disallow",
        "allow",
        "requiresCertificate"
      ],
      "type": "string"
    },
    "microsoft.graph.importedDeviceIdentityType": {
      "title": "importedDeviceIdentityType",
      "enum": [
        "unknown",
        "imei",
        "serialNumber"
      ],
      "type": "string"
    },
    "microsoft.graph.enrollmentState": {
      "title": "enrollmentState",
      "enum": [
        "unknown",
        "enrolled",
        "pendingReset",
        "failed",
        "notContacted"
      ],
      "type": "string"
    },
    "microsoft.graph.platform": {
      "title": "platform",
      "enum": [
        "unknown",
        "ios",
        "android",
        "windows",
        "windowsMobile",
        "macOS"
      ],
      "type": "string"
    },
    "microsoft.graph.discoverySource": {
      "title": "discoverySource",
      "enum": [
        "unknown",
        "adminImport",
        "deviceEnrollmentProgram"
      ],
      "type": "string"
    },
    "microsoft.graph.managedDeviceRemoteAction": {
      "title": "managedDeviceRemoteAction",
      "enum": [
        "retire",
        "delete",
        "fullScan",
        "quickScan",
        "signatureUpdate"
      ],
      "type": "string"
    },
    "microsoft.graph.remoteAction": {
      "title": "remoteAction",
      "enum": [
        "unknown",
        "factoryReset",
        "removeCompanyData",
        "resetPasscode",
        "remoteLock",
        "enableLostMode",
        "disableLostMode",
        "locateDevice",
        "rebootNow",
        "recoverPasscode",
        "cleanWindowsDevice",
        "logoutSharedAppleDeviceActiveUser",
        "quickScan",
        "fullScan",
        "windowsDefenderUpdateSignatures",
        "factoryResetKeepEnrollmentData",
        "updateDeviceAccount",
        "automaticRedeployment",
        "shutDown"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceActionState": {
      "title": "deviceActionState",
      "enum": [
        "none",
        "pending",
        "canceled",
        "active",
        "done",
        "failed",
        "notSupported"
      ],
      "type": "string"
    },
    "microsoft.graph.runAsAccountType": {
      "title": "runAsAccountType",
      "enum": [
        "system",
        "user"
      ],
      "type": "string"
    },
    "microsoft.graph.runState": {
      "title": "runState",
      "enum": [
        "unknown",
        "success",
        "fail"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState": {
      "title": "deviceGuardVirtualizationBasedSecurityHardwareRequirementState",
      "enum": [
        "meetHardwareRequirements",
        "secureBootRequired",
        "dmaProtectionRequired",
        "hyperVNotSupportedForGuestVM",
        "hyperVNotAvailable"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceGuardVirtualizationBasedSecurityState": {
      "title": "deviceGuardVirtualizationBasedSecurityState",
      "enum": [
        "running",
        "rebootRequired",
        "require64BitArchitecture",
        "notLicensed",
        "notConfigured",
        "doesNotMeetHardwareRequirements",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState": {
      "title": "deviceGuardLocalSystemAuthorityCredentialGuardState",
      "enum": [
        "running",
        "rebootRequired",
        "notLicensed",
        "notConfigured",
        "virtualizationBasedSecurityNotRunning"
      ],
      "type": "string"
    },
    "microsoft.graph.ownerType": {
      "title": "ownerType",
      "enum": [
        "unknown",
        "company",
        "personal"
      ],
      "type": "string"
    },
    "microsoft.graph.managementState": {
      "title": "managementState",
      "enum": [
        "managed",
        "retirePending",
        "retireFailed",
        "wipePending",
        "wipeFailed",
        "unhealthy",
        "deletePending",
        "retireIssued",
        "wipeIssued",
        "wipeCanceled",
        "retireCanceled",
        "discovered"
      ],
      "type": "string"
    },
    "microsoft.graph.chassisType": {
      "title": "chassisType",
      "enum": [
        "unknown",
        "desktop",
        "laptop",
        "worksWorkstation",
        "enterpriseServer",
        "phone",
        "tablet",
        "mobileOther",
        "mobileUnknown"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceType": {
      "title": "deviceType",
      "enum": [
        "desktop",
        "windowsRT",
        "winMO6",
        "nokia",
        "windowsPhone",
        "mac",
        "winCE",
        "winEmbedded",
        "iPhone",
        "iPad",
        "iPod",
        "android",
        "iSocConsumer",
        "unix",
        "macMDM",
        "holoLens",
        "surfaceHub",
        "androidForWork",
        "windowsBlue",
        "windowsPhoneBlue",
        "blackberry",
        "palm",
        "fakeDevice",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.complianceState": {
      "title": "complianceState",
      "enum": [
        "unknown",
        "compliant",
        "noncompliant",
        "conflict",
        "error",
        "inGracePeriod",
        "configManager"
      ],
      "type": "string"
    },
    "microsoft.graph.managementAgentType": {
      "title": "managementAgentType",
      "enum": [
        "eas",
        "mdm",
        "easMdm",
        "intuneClient",
        "easIntuneClient",
        "configManagerClient",
        "configurationManagerClientMdm",
        "configurationManagerClientMdmEas",
        "unknown",
        "jamf"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceEnrollmentType": {
      "title": "deviceEnrollmentType",
      "enum": [
        "unknown",
        "userEnrollment",
        "deviceEnrollmentManager",
        "appleBulkWithUser",
        "appleBulkWithoutUser",
        "windowsAzureADJoin",
        "windowsBulkUserless",
        "windowsAutoEnrollment",
        "windowsBulkAzureDomainJoin",
        "windowsCoManagement"
      ],
      "type": "string"
    },
    "microsoft.graph.lostModeState": {
      "title": "lostModeState",
      "enum": [
        "disabled",
        "enabled"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceRegistrationState": {
      "title": "deviceRegistrationState",
      "enum": [
        "notRegistered",
        "smsidConflict",
        "registered",
        "revoked",
        "keyConflict",
        "approvalPending",
        "resetCert",
        "notRegisteredPendingEnrollment",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeAccessState": {
      "title": "deviceManagementExchangeAccessState",
      "enum": [
        "none",
        "unknown",
        "allowed",
        "blocked",
        "quarantined"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeAccessStateReason": {
      "title": "deviceManagementExchangeAccessStateReason",
      "enum": [
        "none",
        "unknown",
        "exchangeGlobalRule",
        "exchangeIndividualRule",
        "exchangeDeviceRule",
        "exchangeUpgrade",
        "exchangeMailboxPolicy",
        "other",
        "compliant",
        "notCompliant",
        "notEnrolled",
        "unknownLocation",
        "mfaRequired",
        "azureADBlockDueToAccessPolicy",
        "compromisedPassword",
        "deviceNotKnownWithManagedApp"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsDeviceHealthState": {
      "title": "windowsDeviceHealthState",
      "enum": [
        "clean",
        "fullScanPending",
        "rebootPending",
        "manualStepsPending",
        "offlineScanPending",
        "critical"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsMalwareSeverity": {
      "title": "windowsMalwareSeverity",
      "enum": [
        "unknown",
        "low",
        "moderate",
        "high",
        "severe"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsMalwareCategory": {
      "title": "windowsMalwareCategory",
      "enum": [
        "invalid",
        "adware",
        "spyware",
        "passwordStealer",
        "trojanDownloader",
        "worm",
        "backdoor",
        "remoteAccessTrojan",
        "trojan",
        "emailFlooder",
        "keylogger",
        "dialer",
        "monitoringSoftware",
        "browserModifier",
        "cookie",
        "browserPlugin",
        "aolExploit",
        "nuker",
        "securityDisabler",
        "jokeProgram",
        "hostileActiveXControl",
        "softwareBundler",
        "stealthNotifier",
        "settingsModifier",
        "toolBar",
        "remoteControlSoftware",
        "trojanFtp",
        "potentialUnwantedSoftware",
        "icqExploit",
        "trojanTelnet",
        "exploit",
        "filesharingProgram",
        "malwareCreationTool",
        "remote_Control_Software",
        "tool",
        "trojanDenialOfService",
        "trojanDropper",
        "trojanMassMailer",
        "trojanMonitoringSoftware",
        "trojanProxyServer",
        "virus",
        "known",
        "unknown",
        "spp",
        "behavior",
        "vulnerability",
        "policy"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsMalwareExecutionState": {
      "title": "windowsMalwareExecutionState",
      "enum": [
        "unknown",
        "blocked",
        "allowed",
        "running",
        "notRunning"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsMalwareState": {
      "title": "windowsMalwareState",
      "enum": [
        "unknown",
        "detected",
        "cleaned",
        "quarantined",
        "removed",
        "allowed",
        "blocked",
        "cleanFailed",
        "quarantineFailed",
        "removeFailed",
        "allowFailed",
        "abandoned",
        "blockFailed"
      ],
      "type": "string"
    },
    "microsoft.graph.managedDevicePartnerReportedHealthState": {
      "title": "managedDevicePartnerReportedHealthState",
      "enum": [
        "unknown",
        "activated",
        "deactivated",
        "secured",
        "lowSeverity",
        "mediumSeverity",
        "highSeverity",
        "unresponsive"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementSubscriptionState": {
      "title": "deviceManagementSubscriptionState",
      "enum": [
        "pending",
        "active",
        "warning",
        "disabled",
        "deleted",
        "blocked",
        "lockedOut"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementSubscriptions": {
      "title": "deviceManagementSubscriptions",
      "enum": [
        "none",
        "intune",
        "office365",
        "intunePremium",
        "intune_EDU",
        "intune_SMB"
      ],
      "type": "string"
    },
    "microsoft.graph.adminConsentState": {
      "title": "adminConsentState",
      "enum": [
        "notConfigured",
        "granted",
        "notGranted"
      ],
      "type": "string"
    },
    "microsoft.graph.healthState": {
      "title": "healthState",
      "enum": [
        "unknown",
        "healthy",
        "unhealthy"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsPrivacyDataAccessLevel": {
      "title": "windowsPrivacyDataAccessLevel",
      "enum": [
        "notConfigured",
        "forceAllow",
        "forceDeny",
        "userInControl"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsPrivacyDataCategory": {
      "title": "windowsPrivacyDataCategory",
      "enum": [
        "notConfigured",
        "accountInfo",
        "appsRunInBackground",
        "calendar",
        "callHistory",
        "camera",
        "contacts",
        "diagnosticsInfo",
        "email",
        "location",
        "messaging",
        "microphone",
        "motion",
        "notifications",
        "phone",
        "radios",
        "tasks",
        "syncWithDevices",
        "trustedDevices"
      ],
      "type": "string"
    },
    "microsoft.graph.easAuthenticationMethod": {
      "title": "easAuthenticationMethod",
      "enum": [
        "usernameAndPassword",
        "certificate"
      ],
      "type": "string"
    },
    "microsoft.graph.emailSyncDuration": {
      "title": "emailSyncDuration",
      "enum": [
        "userDefined",
        "oneDay",
        "threeDays",
        "oneWeek",
        "twoWeeks",
        "oneMonth",
        "unlimited"
      ],
      "type": "string"
    },
    "microsoft.graph.userEmailSource": {
      "title": "userEmailSource",
      "enum": [
        "userPrincipalName",
        "primarySmtpAddress"
      ],
      "type": "string"
    },
    "microsoft.graph.subjectNameFormat": {
      "title": "subjectNameFormat",
      "enum": [
        "commonName",
        "commonNameIncludingEmail",
        "commonNameAsEmail",
        "custom",
        "commonNameAsIMEI",
        "commonNameAsSerialNumber"
      ],
      "type": "string"
    },
    "microsoft.graph.subjectAlternativeNameType": {
      "title": "subjectAlternativeNameType",
      "enum": [
        "emailAddress",
        "userPrincipalName",
        "customAzureADAttribute"
      ],
      "type": "string"
    },
    "microsoft.graph.certificateValidityPeriodScale": {
      "title": "certificateValidityPeriodScale",
      "enum": [
        "days",
        "months",
        "years"
      ],
      "type": "string"
    },
    "microsoft.graph.keyUsages": {
      "title": "keyUsages",
      "enum": [
        "keyEncipherment",
        "digitalSignature"
      ],
      "type": "string"
    },
    "microsoft.graph.keySize": {
      "title": "keySize",
      "enum": [
        "size1024",
        "size2048"
      ],
      "type": "string"
    },
    "microsoft.graph.hashAlgorithms": {
      "title": "hashAlgorithms",
      "enum": [
        "sha1",
        "sha2"
      ],
      "type": "string"
    },
    "microsoft.graph.devicePlatformType": {
      "title": "devicePlatformType",
      "enum": [
        "android",
        "androidForWork",
        "iOS",
        "macOS",
        "windowsPhone81",
        "windows81AndLater",
        "windows10AndLater"
      ],
      "type": "string"
    },
    "microsoft.graph.androidUsernameSource": {
      "title": "androidUsernameSource",
      "enum": [
        "username",
        "userPrincipalName"
      ],
      "type": "string"
    },
    "microsoft.graph.emailSyncSchedule": {
      "title": "emailSyncSchedule",
      "enum": [
        "userDefined",
        "asMessagesArrive",
        "manual",
        "fifteenMinutes",
        "thirtyMinutes",
        "sixtyMinutes",
        "basedOnMyUsage"
      ],
      "type": "string"
    },
    "microsoft.graph.androidWiFiSecurityType": {
      "title": "androidWiFiSecurityType",
      "enum": [
        "open",
        "wpaEnterprise"
      ],
      "type": "string"
    },
    "microsoft.graph.wiFiAuthenticationMethod": {
      "title": "wiFiAuthenticationMethod",
      "enum": [
        "certificate",
        "usernameAndPassword"
      ],
      "type": "string"
    },
    "microsoft.graph.androidEapType": {
      "title": "androidEapType",
      "enum": [
        "eapTls",
        "eapTtls",
        "peap"
      ],
      "type": "string"
    },
    "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType": {
      "title": "nonEapAuthenticationMethodForEapTtlsType",
      "enum": [
        "unencryptedPassword",
        "challengeHandshakeAuthenticationProtocol",
        "microsoftChap",
        "microsoftChapVersionTwo"
      ],
      "type": "string"
    },
    "microsoft.graph.nonEapAuthenticationMethodForPeap": {
      "title": "nonEapAuthenticationMethodForPeap",
      "enum": [
        "none",
        "microsoftChapVersionTwo"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkRequiredPasswordType": {
      "title": "androidForWorkRequiredPasswordType",
      "enum": [
        "deviceDefault",
        "lowSecurityBiometric",
        "required",
        "atLeastNumeric",
        "numericComplex",
        "atLeastAlphabetic",
        "atLeastAlphanumeric",
        "alphanumericWithSymbols"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkCrossProfileDataSharingType": {
      "title": "androidForWorkCrossProfileDataSharingType",
      "enum": [
        "deviceDefault",
        "preventAny",
        "allowPersonalToWork",
        "noRestrictions"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkDefaultAppPermissionPolicyType": {
      "title": "androidForWorkDefaultAppPermissionPolicyType",
      "enum": [
        "deviceDefault",
        "prompt",
        "autoGrant",
        "autoDeny"
      ],
      "type": "string"
    },
    "microsoft.graph.androidForWorkVpnConnectionType": {
      "title": "androidForWorkVpnConnectionType",
      "enum": [
        "ciscoAnyConnect",
        "pulseSecure",
        "f5EdgeClient",
        "dellSonicWallMobileConnect",
        "checkPointCapsuleVpn",
        "citrix"
      ],
      "type": "string"
    },
    "microsoft.graph.vpnAuthenticationMethod": {
      "title": "vpnAuthenticationMethod",
      "enum": [
        "certificate",
        "usernameAndPassword"
      ],
      "type": "string"
    },
    "microsoft.graph.appsComplianceListType": {
      "title": "appsComplianceListType",
      "enum": [
        "none",
        "appsInListCompliant",
        "appsNotInListCompliant"
      ],
      "type": "string"
    },
    "microsoft.graph.appListType": {
      "title": "appListType",
      "enum": [
        "none",
        "appsInListCompliant",
        "appsNotInListCompliant"
      ],
      "type": "string"
    },
    "microsoft.graph.androidRequiredPasswordType": {
      "title": "androidRequiredPasswordType",
      "enum": [
        "deviceDefault",
        "alphabetic",
        "alphanumeric",
        "alphanumericWithSymbols",
        "lowSecurityBiometric",
        "numeric",
        "numericComplex",
        "any"
      ],
      "type": "string"
    },
    "microsoft.graph.webBrowserCookieSettings": {
      "title": "webBrowserCookieSettings",
      "enum": [
        "browserDefault",
        "blockAlways",
        "allowCurrentWebSite",
        "allowFromWebsitesVisited",
        "allowAlways"
      ],
      "type": "string"
    },
    "microsoft.graph.androidVpnConnectionType": {
      "title": "androidVpnConnectionType",
      "enum": [
        "ciscoAnyConnect",
        "pulseSecure",
        "f5EdgeClient",
        "dellSonicWallMobileConnect",
        "checkPointCapsuleVpn",
        "citrix"
      ],
      "type": "string"
    },
    "microsoft.graph.appleSubjectNameFormat": {
      "title": "appleSubjectNameFormat",
      "enum": [
        "commonName",
        "commonNameAsEmail",
        "custom",
        "commonNameIncludingEmail",
        "commonNameAsIMEI",
        "commonNameAsSerialNumber"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAustraliaMoviesType": {
      "title": "ratingAustraliaMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove15",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAustraliaTelevisionType": {
      "title": "ratingAustraliaTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "preschoolers",
        "children",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove15",
        "agesAbove15AdultViolence"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingCanadaMoviesType": {
      "title": "ratingCanadaMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove14",
        "agesAbove18",
        "restricted"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingCanadaTelevisionType": {
      "title": "ratingCanadaTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "children",
        "childrenAbove8",
        "general",
        "parentalGuidance",
        "agesAbove14",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingFranceMoviesType": {
      "title": "ratingFranceMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove10",
        "agesAbove12",
        "agesAbove16",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingFranceTelevisionType": {
      "title": "ratingFranceTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove10",
        "agesAbove12",
        "agesAbove16",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingGermanyMoviesType": {
      "title": "ratingGermanyMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "agesAbove6",
        "agesAbove12",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingGermanyTelevisionType": {
      "title": "ratingGermanyTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "agesAbove6",
        "agesAbove12",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingIrelandMoviesType": {
      "title": "ratingIrelandMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove12",
        "agesAbove15",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingIrelandTelevisionType": {
      "title": "ratingIrelandTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "children",
        "youngAdults",
        "parentalSupervision",
        "mature"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingJapanMoviesType": {
      "title": "ratingJapanMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove15",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingJapanTelevisionType": {
      "title": "ratingJapanTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "explicitAllowed"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingNewZealandMoviesType": {
      "title": "ratingNewZealandMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove13",
        "agesAbove15",
        "agesAbove16",
        "agesAbove18",
        "restricted",
        "agesAbove16Restricted"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingNewZealandTelevisionType": {
      "title": "ratingNewZealandTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedKingdomMoviesType": {
      "title": "ratingUnitedKingdomMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "universalChildren",
        "parentalGuidance",
        "agesAbove12Video",
        "agesAbove12Cinema",
        "agesAbove15",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedKingdomTelevisionType": {
      "title": "ratingUnitedKingdomTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "caution"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedStatesMoviesType": {
      "title": "ratingUnitedStatesMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "parentalGuidance13",
        "restricted",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedStatesTelevisionType": {
      "title": "ratingUnitedStatesTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "childrenAll",
        "childrenAbove7",
        "general",
        "parentalGuidance",
        "childrenAbove14",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAppsType": {
      "title": "ratingAppsType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove4",
        "agesAbove9",
        "agesAbove12",
        "agesAbove17"
      ],
      "type": "string"
    },
    "microsoft.graph.requiredPasswordType": {
      "title": "requiredPasswordType",
      "enum": [
        "deviceDefault",
        "alphanumeric",
        "numeric"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingRegionType": {
      "title": "ratingRegionType",
      "enum": [
        "noRegion",
        "australia",
        "canada",
        "france",
        "germany",
        "ireland",
        "japan",
        "newZealand",
        "unitedKingdom",
        "unitedStates"
      ],
      "type": "string"
    },
    "microsoft.graph.wiFiSecurityType": {
      "title": "wiFiSecurityType",
      "enum": [
        "open",
        "wpaPersonal",
        "wpaEnterprise",
        "wep"
      ],
      "type": "string"
    },
    "microsoft.graph.wiFiProxySetting": {
      "title": "wiFiProxySetting",
      "enum": [
        "none",
        "manual",
        "automatic"
      ],
      "type": "string"
    },
    "microsoft.graph.eapType": {
      "title": "eapType",
      "enum": [
        "eapTls",
        "leap",
        "eapSim",
        "eapTtls",
        "peap",
        "eapFast"
      ],
      "type": "string"
    },
    "microsoft.graph.eapFastConfiguration": {
      "title": "eapFastConfiguration",
      "enum": [
        "noProtectedAccessCredential",
        "useProtectedAccessCredential",
        "useProtectedAccessCredentialAndProvision",
        "useProtectedAccessCredentialAndProvisionAnonymously"
      ],
      "type": "string"
    },
    "microsoft.graph.iosNotificationAlertType": {
      "title": "iosNotificationAlertType",
      "enum": [
        "deviceDefault",
        "banner",
        "modal",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.appleVpnConnectionType": {
      "title": "appleVpnConnectionType",
      "enum": [
        "ciscoAnyConnect",
        "pulseSecure",
        "f5EdgeClient",
        "dellSonicWallMobileConnect",
        "checkPointCapsuleVpn",
        "customVpn",
        "ciscoIPSec",
        "citrix"
      ],
      "type": "string"
    },
    "microsoft.graph.vpnOnDemandRuleConnectionAction": {
      "title": "vpnOnDemandRuleConnectionAction",
      "enum": [
        "connect",
        "evaluateConnection",
        "ignore",
        "disconnect"
      ],
      "type": "string"
    },
    "microsoft.graph.vpnOnDemandRuleConnectionDomainAction": {
      "title": "vpnOnDemandRuleConnectionDomainAction",
      "enum": [
        "connectIfNeeded",
        "neverConnect"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderSecurityCenterNotificationsFromAppType": {
      "title": "defenderSecurityCenterNotificationsFromAppType",
      "enum": [
        "notConfigured",
        "blockNoncriticalNotifications",
        "blockAllNotifications"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderSecurityCenterITContactDisplayType": {
      "title": "defenderSecurityCenterITContactDisplayType",
      "enum": [
        "notConfigured",
        "displayInAppAndInNotifications",
        "displayOnlyInApp",
        "displayOnlyInNotifications"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallPreSharedKeyEncodingMethodType": {
      "title": "firewallPreSharedKeyEncodingMethodType",
      "enum": [
        "deviceDefault",
        "none",
        "utF8"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallCertificateRevocationListCheckMethodType": {
      "title": "firewallCertificateRevocationListCheckMethodType",
      "enum": [
        "deviceDefault",
        "none",
        "attempt",
        "require"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallPacketQueueingMethodType": {
      "title": "firewallPacketQueueingMethodType",
      "enum": [
        "deviceDefault",
        "disabled",
        "queueInbound",
        "queueOutbound",
        "queueBoth"
      ],
      "type": "string"
    },
    "microsoft.graph.stateManagementSetting": {
      "title": "stateManagementSetting",
      "enum": [
        "notConfigured",
        "blocked",
        "allowed"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderAttackSurfaceType": {
      "title": "defenderAttackSurfaceType",
      "enum": [
        "userDefined",
        "block",
        "auditMode"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderProtectionType": {
      "title": "defenderProtectionType",
      "enum": [
        "userDefined",
        "enable",
        "auditMode"
      ],
      "type": "string"
    },
    "microsoft.graph.appLockerApplicationControlType": {
      "title": "appLockerApplicationControlType",
      "enum": [
        "notConfigured",
        "enforceComponentsAndStoreApps",
        "auditComponentsAndStoreApps",
        "enforceComponentsStoreAppsAndSmartlocker",
        "auditComponentsStoreAppsAndSmartlocker"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationGuardBlockFileTransferType": {
      "title": "applicationGuardBlockFileTransferType",
      "enum": [
        "notConfigured",
        "blockImageAndTextFile",
        "blockImageFile",
        "blockNone",
        "blockTextFile"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationGuardBlockClipboardSharingType": {
      "title": "applicationGuardBlockClipboardSharingType",
      "enum": [
        "notConfigured",
        "blockBoth",
        "blockHostToContainer",
        "blockContainerToHost",
        "blockNone"
      ],
      "type": "string"
    },
    "microsoft.graph.bitLockerEncryptionMethod": {
      "title": "bitLockerEncryptionMethod",
      "enum": [
        "aesCbc128",
        "aesCbc256",
        "xtsAes128",
        "xtsAes256"
      ],
      "type": "string"
    },
    "microsoft.graph.configurationUsage": {
      "title": "configurationUsage",
      "enum": [
        "blocked",
        "required",
        "allowed"
      ],
      "type": "string"
    },
    "microsoft.graph.bitLockerRecoveryinformationType": {
      "title": "bitLockerRecoveryinformationType",
      "enum": [
        "passwordAndKey",
        "passwordOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.signInAssistantOptions": {
      "title": "signInAssistantOptions",
      "enum": [
        "notConfigured",
        "disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.diagnosticDataSubmissionMode": {
      "title": "diagnosticDataSubmissionMode",
      "enum": [
        "userDefined",
        "none",
        "basic",
        "enhanced",
        "full"
      ],
      "type": "string"
    },
    "microsoft.graph.inkAccessSetting": {
      "title": "inkAccessSetting",
      "enum": [
        "notConfigured",
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.edgeCookiePolicy": {
      "title": "edgeCookiePolicy",
      "enum": [
        "userDefined",
        "allow",
        "blockThirdParty",
        "blockAll"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderThreatAction": {
      "title": "defenderThreatAction",
      "enum": [
        "deviceDefault",
        "clean",
        "quarantine",
        "remove",
        "allow",
        "userDefined",
        "block"
      ],
      "type": "string"
    },
    "microsoft.graph.weeklySchedule": {
      "title": "weeklySchedule",
      "enum": [
        "userDefined",
        "everyday",
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderMonitorFileActivity": {
      "title": "defenderMonitorFileActivity",
      "enum": [
        "userDefined",
        "disable",
        "monitorAllFiles",
        "monitorIncomingFilesOnly",
        "monitorOutgoingFilesOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderPotentiallyUnwantedAppAction": {
      "title": "defenderPotentiallyUnwantedAppAction",
      "enum": [
        "deviceDefault",
        "block",
        "audit"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderPromptForSampleSubmission": {
      "title": "defenderPromptForSampleSubmission",
      "enum": [
        "userDefined",
        "alwaysPrompt",
        "promptBeforeSendingPersonalData",
        "neverSendData",
        "sendAllDataWithoutPrompting"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderScanType": {
      "title": "defenderScanType",
      "enum": [
        "userDefined",
        "disabled",
        "quick",
        "full"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderCloudBlockLevelType": {
      "title": "defenderCloudBlockLevelType",
      "enum": [
        "notConfigured",
        "high",
        "highPlus",
        "zeroTolerance"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsStartMenuAppListVisibilityType": {
      "title": "windowsStartMenuAppListVisibilityType",
      "enum": [
        "userDefined",
        "collapse",
        "remove",
        "disableSettingsApp"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsStartMenuModeType": {
      "title": "windowsStartMenuModeType",
      "enum": [
        "userDefined",
        "fullScreen",
        "nonFullScreen"
      ],
      "type": "string"
    },
    "microsoft.graph.visibilitySetting": {
      "title": "visibilitySetting",
      "enum": [
        "notConfigured",
        "hide",
        "show"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsSpotlightEnablementSettings": {
      "title": "windowsSpotlightEnablementSettings",
      "enum": [
        "notConfigured",
        "disabled",
        "enabled"
      ],
      "type": "string"
    },
    "microsoft.graph.automaticUpdateMode": {
      "title": "automaticUpdateMode",
      "enum": [
        "userDefined",
        "notifyDownload",
        "autoInstallAtMaintenanceTime",
        "autoInstallAndRebootAtMaintenanceTime",
        "autoInstallAndRebootAtScheduledTime",
        "autoInstallAndRebootWithoutEndUserControl"
      ],
      "type": "string"
    },
    "microsoft.graph.safeSearchFilterType": {
      "title": "safeSearchFilterType",
      "enum": [
        "userDefined",
        "strict",
        "moderate"
      ],
      "type": "string"
    },
    "microsoft.graph.edgeSearchEngineType": {
      "title": "edgeSearchEngineType",
      "enum": [
        "default",
        "bing"
      ],
      "type": "string"
    },
    "microsoft.graph.prereleaseFeatures": {
      "title": "prereleaseFeatures",
      "enum": [
        "userDefined",
        "settingsOnly",
        "settingsAndExperimentations",
        "notAllowed"
      ],
      "type": "string"
    },
    "microsoft.graph.sharedPCAccountDeletionPolicyType": {
      "title": "sharedPCAccountDeletionPolicyType",
      "enum": [
        "immediate",
        "diskSpaceThreshold",
        "diskSpaceThresholdOrInactiveThreshold"
      ],
      "type": "string"
    },
    "microsoft.graph.sharedPCAllowedAccountType": {
      "title": "sharedPCAllowedAccountType",
      "enum": [
        "guest",
        "domain"
      ],
      "type": "string"
    },
    "microsoft.graph.keyStorageProviderOption": {
      "title": "keyStorageProviderOption",
      "enum": [
        "useTpmKspOtherwiseUseSoftwareKsp",
        "useTpmKspOtherwiseFail",
        "usePassportForWorkKspOtherwiseFail",
        "useSoftwareKsp"
      ],
      "type": "string"
    },
    "microsoft.graph.certificateDestinationStore": {
      "title": "certificateDestinationStore",
      "enum": [
        "computerCertStoreRoot",
        "computerCertStoreIntermediate",
        "userCertStoreIntermediate"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsDeliveryOptimizationMode": {
      "title": "windowsDeliveryOptimizationMode",
      "enum": [
        "userDefined",
        "httpOnly",
        "httpWithPeeringNat",
        "httpWithPeeringPrivateGroup",
        "httpWithInternetPeering",
        "simpleDownload",
        "bypassMode"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUpdateRestartMode": {
      "title": "windowsUpdateRestartMode",
      "enum": [
        "userDefined",
        "batteryLevelCheckEnabled",
        "batteryLevelCheckDisabled"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUpdateType": {
      "title": "windowsUpdateType",
      "enum": [
        "userDefined",
        "all",
        "businessReadyOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUpdateInsiderBuildControl": {
      "title": "windowsUpdateInsiderBuildControl",
      "enum": [
        "userDefined",
        "allowed",
        "notAllowed"
      ],
      "type": "string"
    },
    "microsoft.graph.windows10VpnConnectionType": {
      "title": "windows10VpnConnectionType",
      "enum": [
        "pulseSecure",
        "f5EdgeClient",
        "dellSonicWallMobileConnect",
        "checkPointCapsuleVpn",
        "automatic",
        "ikEv2",
        "l2tp",
        "pptp",
        "citrix"
      ],
      "type": "string"
    },
    "microsoft.graph.windows10VpnAuthenticationMethod": {
      "title": "windows10VpnAuthenticationMethod",
      "enum": [
        "certificate",
        "usernameAndPassword",
        "customEapXml"
      ],
      "type": "string"
    },
    "microsoft.graph.windows10AppType": {
      "title": "windows10AppType",
      "enum": [
        "desktop",
        "universal"
      ],
      "type": "string"
    },
    "microsoft.graph.vpnTrafficRuleAppType": {
      "title": "vpnTrafficRuleAppType",
      "enum": [
        "none",
        "desktop",
        "universal"
      ],
      "type": "string"
    },
    "microsoft.graph.vpnTrafficRuleRoutingPolicyType": {
      "title": "vpnTrafficRuleRoutingPolicyType",
      "enum": [
        "none",
        "splitTunnel",
        "forceTunnel"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsVpnConnectionType": {
      "title": "windowsVpnConnectionType",
      "enum": [
        "pulseSecure",
        "f5EdgeClient",
        "dellSonicWallMobileConnect",
        "checkPointCapsuleVpn"
      ],
      "type": "string"
    },
    "microsoft.graph.internetSiteSecurityLevel": {
      "title": "internetSiteSecurityLevel",
      "enum": [
        "userDefined",
        "medium",
        "mediumHigh",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.siteSecurityLevel": {
      "title": "siteSecurityLevel",
      "enum": [
        "userDefined",
        "low",
        "mediumLow",
        "medium",
        "mediumHigh",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.updateClassification": {
      "title": "updateClassification",
      "enum": [
        "userDefined",
        "recommendedAndImportant",
        "important",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUserAccountControlSettings": {
      "title": "windowsUserAccountControlSettings",
      "enum": [
        "userDefined",
        "alwaysNotify",
        "notifyOnAppChanges",
        "notifyOnAppChangesWithoutDimming",
        "neverNotify"
      ],
      "type": "string"
    },
    "microsoft.graph.miracastChannel": {
      "title": "miracastChannel",
      "enum": [
        "userDefined",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "ten",
        "eleven",
        "thirtySix",
        "forty",
        "fortyFour",
        "fortyEight",
        "oneHundredFortyNine",
        "oneHundredFiftyThree",
        "oneHundredFiftySeven",
        "oneHundredSixtyOne",
        "oneHundredSixtyFive"
      ],
      "type": "string"
    },
    "microsoft.graph.welcomeScreenMeetingInformation": {
      "title": "welcomeScreenMeetingInformation",
      "enum": [
        "userDefined",
        "showOrganizerAndTimeOnly",
        "showOrganizerAndTimeAndSubject"
      ],
      "type": "string"
    },
    "microsoft.graph.editionUpgradeLicenseType": {
      "title": "editionUpgradeLicenseType",
      "enum": [
        "productKey",
        "licenseFile"
      ],
      "type": "string"
    },
    "microsoft.graph.windows10EditionType": {
      "title": "windows10EditionType",
      "enum": [
        "windows10Enterprise",
        "windows10EnterpriseN",
        "windows10Education",
        "windows10EducationN",
        "windows10MobileEnterprise",
        "windows10HolographicEnterprise",
        "windows10Professional",
        "windows10ProfessionalN",
        "windows10ProfessionalEducation",
        "windows10ProfessionalEducationN"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceComplianceActionType": {
      "title": "deviceComplianceActionType",
      "enum": [
        "noAction",
        "notification",
        "block",
        "retire",
        "wipe",
        "removeResourceAccessProfiles"
      ],
      "type": "string"
    },
    "microsoft.graph.notificationTemplateBrandingOptions": {
      "title": "notificationTemplateBrandingOptions",
      "enum": [
        "none",
        "includeCompanyLogo",
        "includeCompanyName",
        "includeContactInformation"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceThreatProtectionLevel": {
      "title": "deviceThreatProtectionLevel",
      "enum": [
        "unavailable",
        "secured",
        "low",
        "medium",
        "high",
        "notSet"
      ],
      "type": "string"
    },
    "microsoft.graph.policyPlatformType": {
      "title": "policyPlatformType",
      "enum": [
        "android",
        "androidForWork",
        "iOS",
        "macOS",
        "windowsPhone81",
        "windows81AndLater",
        "windows10AndLater",
        "all"
      ],
      "type": "string"
    },
    "microsoft.graph.iosUpdatesInstallStatus": {
      "title": "iosUpdatesInstallStatus",
      "enum": [
        "success",
        "available",
        "idle",
        "downloading",
        "downloadFailed",
        "downloadRequiresComputer",
        "downloadInsufficientSpace",
        "downloadInsufficientPower",
        "downloadInsufficientNetwork",
        "installing",
        "installInsufficientSpace",
        "installInsufficientPower",
        "installPhoneCallInProgress",
        "installFailed",
        "notSupportedOperation",
        "sharedDeviceUserLoggedInError"
      ],
      "type": "string"
    },
    "microsoft.graph.ndesConnectorState": {
      "title": "ndesConnectorState",
      "enum": [
        "none",
        "active",
        "inactive"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorSyncType": {
      "title": "deviceManagementExchangeConnectorSyncType",
      "enum": [
        "fullSync",
        "deltaSync"
      ],
      "type": "string"
    },
    "microsoft.graph.mdmAuthority": {
      "title": "mdmAuthority",
      "enum": [
        "unknown",
        "intune",
        "sccm",
        "office365"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsHelloForBusinessPinUsage": {
      "title": "windowsHelloForBusinessPinUsage",
      "enum": [
        "allowed",
        "required",
        "disallowed"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsHelloForBusinessConfiguration": {
      "title": "windowsHelloForBusinessConfiguration",
      "enum": [
        "disabled",
        "enabled",
        "notConfigured"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenState": {
      "title": "vppTokenState",
      "enum": [
        "unknown",
        "valid",
        "expired",
        "invalid"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenActionState": {
      "title": "vppTokenActionState",
      "enum": [
        "none",
        "inProgress",
        "successful",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenSyncStatus": {
      "title": "vppTokenSyncStatus",
      "enum": [
        "none",
        "inProgress",
        "completed",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorStatus": {
      "title": "deviceManagementExchangeConnectorStatus",
      "enum": [
        "connectionPending",
        "connected",
        "disconnected",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorType": {
      "title": "deviceManagementExchangeConnectorType",
      "enum": [
        "onPremises",
        "hosted",
        "serviceToService",
        "dedicated"
      ],
      "type": "string"
    },
    "microsoft.graph.enablement": {
      "title": "enablement",
      "enum": [
        "notConfigured",
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeAccessLevel": {
      "title": "deviceManagementExchangeAccessLevel",
      "enum": [
        "none",
        "allow",
        "block",
        "quarantine"
      ],
      "type": "string"
    },
    "microsoft.graph.exchangeAccessRuleType": {
      "title": "exchangeAccessRuleType",
      "enum": [
        "family",
        "model"
      ],
      "type": "string"
    },
    "microsoft.graph.mobileThreatPartnerTenantState": {
      "title": "mobileThreatPartnerTenantState",
      "enum": [
        "unavailable",
        "available",
        "enabled",
        "unresponsive"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementPartnerTenantState": {
      "title": "deviceManagementPartnerTenantState",
      "enum": [
        "unknown",
        "unavailable",
        "enabled",
        "terminated",
        "rejected",
        "unresponsive"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementPartnerAppType": {
      "title": "deviceManagementPartnerAppType",
      "enum": [
        "unknown",
        "singleTenantApp",
        "multiTenantApp"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataTransferLevel": {
      "title": "managedAppDataTransferLevel",
      "enum": [
        "allApps",
        "managedApps",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppClipboardSharingLevel": {
      "title": "managedAppClipboardSharingLevel",
      "enum": [
        "allApps",
        "managedAppsWithPasteIn",
        "managedApps",
        "blocked"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppPinCharacterSet": {
      "title": "managedAppPinCharacterSet",
      "enum": [
        "numeric",
        "alphanumericAndSymbol"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataStorageLocation": {
      "title": "managedAppDataStorageLocation",
      "enum": [
        "oneDriveForBusiness",
        "sharePoint",
        "localStorage"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataEncryptionType": {
      "title": "managedAppDataEncryptionType",
      "enum": [
        "useDeviceSettings",
        "afterDeviceRestart",
        "whenDeviceLockedExceptOpenFiles",
        "whenDeviceLocked"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsInformationProtectionEnforcementLevel": {
      "title": "windowsInformationProtectionEnforcementLevel",
      "enum": [
        "noProtection",
        "encryptAndAuditOnly",
        "encryptAuditAndPrompt",
        "encryptAuditAndBlock"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsInformationProtectionPinCharacterRequirements": {
      "title": "windowsInformationProtectionPinCharacterRequirements",
      "enum": [
        "notAllow",
        "requireAtLeastOne",
        "allow"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppFlaggedReason": {
      "title": "managedAppFlaggedReason",
      "enum": [
        "none",
        "rootedDevice"
      ],
      "type": "string"
    },
    "microsoft.graph.installState": {
      "title": "installState",
      "enum": [
        "notApplicable",
        "installed",
        "failed",
        "notInstalled",
        "uninstallFailed",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsAutopilotSyncStatus": {
      "title": "windowsAutopilotSyncStatus",
      "enum": [
        "unknown",
        "inProgress",
        "completed",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUserType": {
      "title": "windowsUserType",
      "enum": [
        "administrator",
        "standard"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsAutopilotProfileAssignmentStatus": {
      "title": "windowsAutopilotProfileAssignmentStatus",
      "enum": [
        "unknown",
        "assignedInSync",
        "assignedOutOfSync",
        "assignedUnkownSyncState",
        "notAssigned",
        "pending",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.depTokenType": {
      "title": "depTokenType",
      "enum": [
        "none",
        "dep",
        "appleSchoolManager"
      ],
      "type": "string"
    },
    "microsoft.graph.remoteAssistanceOnboardingStatus": {
      "title": "remoteAssistanceOnboardingStatus",
      "enum": [
        "notOnboarded",
        "onboarding",
        "onboarded"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationType": {
      "title": "applicationType",
      "enum": [
        "universal",
        "desktop"
      ],
      "type": "string"
    },
    "microsoft.graph.giphyRatingType": {
      "title": "giphyRatingType",
      "enum": [
        "moderate",
        "strict"
      ],
      "type": "string"
    },
    "microsoft.graph.attributeFlowType": {
      "title": "attributeFlowType",
      "enum": [
        "Always",
        "ObjectAddOnly",
        "MultiValueAddOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.attributeFlowBehavior": {
      "title": "attributeFlowBehavior",
      "enum": [
        "FlowWhenChanged",
        "FlowAlways"
      ],
      "type": "string"
    },
    "microsoft.graph.attributeMappingSourceType": {
      "title": "attributeMappingSourceType",
      "enum": [
        "Attribute",
        "Constant",
        "Function"
      ],
      "type": "string"
    },
    "microsoft.graph.entryExportStatus": {
      "title": "entryExportStatus",
      "enum": [
        "Noop",
        "Success",
        "RetryableError",
        "PermanentError",
        "Error"
      ],
      "type": "string"
    },
    "microsoft.graph.attributeType": {
      "title": "attributeType",
      "enum": [
        "Boolean",
        "Binary",
        "Reference",
        "Integer",
        "String"
      ],
      "type": "string"
    },
    "microsoft.graph.entrySyncOperation": {
      "title": "entrySyncOperation",
      "enum": [
        "None",
        "Add",
        "Delete",
        "Update"
      ],
      "type": "string"
    },
    "microsoft.graph.mutability": {
      "title": "mutability",
      "enum": [
        "ReadWrite",
        "ReadOnly",
        "Immutable",
        "WriteOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.objectFlowTypes": {
      "title": "objectFlowTypes",
      "enum": [
        "None",
        "Add",
        "Update",
        "Delete"
      ],
      "type": "string"
    },
    "microsoft.graph.synchronizationSecret": {
      "title": "synchronizationSecret",
      "enum": [
        "None",
        "UserName",
        "Password",
        "SecretToken",
        "AppKey",
        "BaseAddress",
        "ClientIdentifier",
        "ClientSecret",
        "SingleSignOnType",
        "Sandbox",
        "Url",
        "Domain",
        "ConsumerKey",
        "ConsumerSecret",
        "TokenKey",
        "TokenExpiration",
        "Oauth2AccessToken",
        "Oauth2AccessTokenCreationTime",
        "Oauth2RefreshToken",
        "SyncAll",
        "InstanceName",
        "Oauth2ClientId",
        "Oauth2ClientSecret",
        "CompanyId",
        "UpdateKeyOnSoftDelete",
        "SynchronizationSchedule",
        "SystemOfRecord",
        "SandboxName",
        "EnforceDomain",
        "SyncNotificationSettings",
        "Server",
        "PerformInboundEntitlementGrants",
        "HardDeletesEnabled",
        "SyncAgentCompatibilityKey",
        "SyncAgentADContainer",
        "ValidateDomain",
        "TestReferences"
      ],
      "type": "string"
    },
    "microsoft.graph.synchronizationStatusCode": {
      "title": "synchronizationStatusCode",
      "enum": [
        "NotConfigured",
        "NotRun",
        "Active",
        "Paused",
        "Quarantine"
      ],
      "type": "string"
    },
    "microsoft.graph.synchronizationTaskExecutionResult": {
      "title": "synchronizationTaskExecutionResult",
      "enum": [
        "Succeeded",
        "Failed",
        "EntryLevelErrors"
      ],
      "type": "string"
    },
    "microsoft.graph.synchronizationJobRestartScope": {
      "title": "synchronizationJobRestartScope",
      "enum": [
        "Full",
        "QuarantineState",
        "Watermark",
        "Escrows",
        "ConnectorDataStore",
        "None"
      ],
      "type": "string"
    },
    "microsoft.graph.quarantineReason": {
      "title": "quarantineReason",
      "enum": [
        "EncounteredBaseEscrowThreshold",
        "EncounteredTotalEscrowThreshold",
        "EncounteredEscrowProportionThreshold",
        "EncounteredQuarantineException",
        "Unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.synchronizationScheduleState": {
      "title": "synchronizationScheduleState",
      "enum": [
        "Active",
        "Disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.scopeOperatorMultiValuedComparisonType": {
      "title": "scopeOperatorMultiValuedComparisonType",
      "enum": [
        "All",
        "Any"
      ],
      "type": "string"
    },
    "microsoft.graph.scopeOperatorType": {
      "title": "scopeOperatorType",
      "enum": [
        "Binary",
        "Unary"
      ],
      "type": "string"
    },
    "microsoft.graph.educationUserRole": {
      "title": "educationUserRole",
      "enum": [
        "student",
        "teacher",
        "none",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationSynchronizationProfileState": {
      "title": "educationSynchronizationProfileState",
      "enum": [
        "deleting",
        "deletionFailed",
        "provisioningFailed",
        "provisioned",
        "provisioning",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationSynchronizationStatus": {
      "title": "educationSynchronizationStatus",
      "enum": [
        "paused",
        "inProgress",
        "success",
        "error",
        "validationError",
        "quarantined",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationExternalSource": {
      "title": "educationExternalSource",
      "enum": [
        "sis",
        "manual",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationGender": {
      "title": "educationGender",
      "enum": [
        "female",
        "male",
        "other",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationAssignmentStatus": {
      "title": "educationAssignmentStatus",
      "enum": [
        "draft",
        "published",
        "assigned",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationSubmissionStatus": {
      "title": "educationSubmissionStatus",
      "enum": [
        "working",
        "submitted",
        "completed",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceEnrollmentFailureReason": {
      "title": "deviceEnrollmentFailureReason",
      "enum": [
        "unknown",
        "authentication",
        "authorization",
        "accountValidation",
        "userValidation",
        "deviceNotSupported",
        "inMaintenance",
        "badRequest",
        "featureNotSupported",
        "enrollmentRestrictionsEnforced",
        "clientDisconnected"
      ],
      "type": "string"
    },
    "odata.error": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.main": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "description": "The structure of this object is service-specific",
          "type": "object"
        }
      }
    },
    "odata.error.detail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "top": {
      "in": "query",
      "name": "$top",
      "description": "Show only the first n items",
      "type": "integer",
      "minimum": 0
    },
    "skip": {
      "in": "query",
      "name": "$skip",
      "description": "Skip the first n items",
      "type": "integer",
      "minimum": 0
    },
    "count": {
      "in": "query",
      "name": "$count",
      "description": "Include count of items",
      "type": "boolean"
    },
    "filter": {
      "in": "query",
      "name": "$filter",
      "description": "Filter items by property values",
      "type": "string"
    },
    "search": {
      "in": "query",
      "name": "$search",
      "description": "Search items by search phrases",
      "type": "string"
    }
  },
  "responses": {
    "error": {
      "description": "error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "securityDefinitions": {
    "DelegatedWork": {
      "type": "OAuth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "User.ReadAll": "Read all user data",
        "User.WriteAll": "Write all user data",
        "Directory.ReadAll": "Write to directory"
      },
      "description": "DelegatedWork"
    },
    "DelegatedPersonal": {
      "type": "OAuth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "User.ReadAll": "Read all user data",
        "User.WriteAll": "Write all user data",
        "Directory.ReadAll": "Write to directory"
      },
      "description": "DelegatedPersonal"
    },
    "Application": {
      "type": "OAuth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "User.ReadAll": "Read all user data",
        "User.WriteAll": "Write all user data",
        "Directory.ReadAll": "Write to directory"
      },
      "description": "Application"
    }
  },
  "tags": [
    {
      "name": "schemaExtensions"
    },
    {
      "name": "directoryObjects"
    },
    {
      "name": "applications"
    },
    {
      "name": "administrativeUnits"
    },
    {
      "name": "allowedDataLocations"
    },
    {
      "name": "appRoleAssignments"
    },
    {
      "name": "contacts"
    },
    {
      "name": "devices"
    },
    {
      "name": "domains"
    },
    {
      "name": "domainDnsRecords"
    },
    {
      "name": "groups"
    },
    {
      "name": "directoryRoles"
    },
    {
      "name": "directoryRoleTemplates"
    },
    {
      "name": "directorySettingTemplates"
    },
    {
      "name": "organization"
    },
    {
      "name": "oauth2PermissionGrants"
    },
    {
      "name": "scopedRoleMemberships"
    },
    {
      "name": "servicePrincipals"
    },
    {
      "name": "settings"
    },
    {
      "name": "subscribedSkus"
    },
    {
      "name": "users",
      "description": "Use this API to create a new User. The request body contains the user to create. At a minimum, you must specify the required properties for the user. You can optionally specify any other writable properties."
    },
    {
      "name": "policies"
    },
    {
      "name": "contracts"
    },
    {
      "name": "workbooks"
    },
    {
      "name": "drives"
    },
    {
      "name": "shares"
    },
    {
      "name": "sites"
    },
    {
      "name": "subscriptions"
    },
    {
      "name": "identityRiskEvents"
    },
    {
      "name": "impossibleTravelRiskEvents"
    },
    {
      "name": "leakedCredentialsRiskEvents"
    },
    {
      "name": "anonymousIpRiskEvents"
    },
    {
      "name": "suspiciousIpRiskEvents"
    },
    {
      "name": "unfamiliarLocationRiskEvents"
    },
    {
      "name": "malwareRiskEvents"
    },
    {
      "name": "privilegedRoles"
    },
    {
      "name": "privilegedRoleAssignments"
    },
    {
      "name": "privilegedOperationEvents"
    },
    {
      "name": "privilegedSignupStatus"
    },
    {
      "name": "privilegedApproval"
    },
    {
      "name": "invitations"
    },
    {
      "name": "appConfigurationGroupAssignments"
    },
    {
      "name": "assignments"
    },
    {
      "name": "vppTokens"
    },
    {
      "name": "enrollmentConfigurationAssignment"
    },
    {
      "name": "commands"
    },
    {
      "name": "payloadResponse"
    },
    {
      "name": "team"
    },
    {
      "name": "channels"
    },
    {
      "name": "chatThreads"
    },
    {
      "name": "groupLifecyclePolicies"
    },
    {
      "name": "identityProviders"
    },
    {
      "name": "functions"
    },
    {
      "name": "filterOperators"
    },
    {
      "name": "me"
    },
    {
      "name": "directory"
    },
    {
      "name": "drive"
    },
    {
      "name": "planner"
    },
    {
      "name": "deviceManagement"
    },
    {
      "name": "deviceAppManagement"
    },
    {
      "name": "reports"
    },
    {
      "name": "education"
    }
  ]
}