{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at https://graph.microsoft.com/v1.0",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://graph.microsoft.com/v1.0"
    }
  ],
  "paths": {
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entities from directoryObjects",
        "operationId": "GetEntitiesFromDirectoryObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryObject",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Add new entity to directoryObjects",
        "operationId": "AddEntityToDirectoryObjects",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entity from directoryObjects by key",
        "operationId": "GetEntityFromDirectoryObjectsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Update entity in directoryObjects",
        "operationId": "UpdateEntityInDirectoryObjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Delete entity from directoryObjects",
        "operationId": "DeleteEntityFromDirectoryObjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.getByIds": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getByIds",
        "operationId": "InvokeGetByIds",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action checkMemberGroups",
        "operationId": "InvokeCheckMemberGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberGroups",
        "operationId": "InvokeGetMemberGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberObjects",
        "operationId": "InvokeGetMemberObjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.user/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "InvokeSubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "InvokeUnsubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "InvokeAddFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "InvokeRemoveFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.group/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "InvokeResetUnseenCount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entities from devices",
        "operationId": "GetEntitiesFromDevices",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "alternativeSecurityIds",
                  "alternativeSecurityIds desc",
                  "approximateLastSignInDateTime",
                  "approximateLastSignInDateTime desc",
                  "deviceId",
                  "deviceId desc",
                  "deviceMetadata",
                  "deviceMetadata desc",
                  "deviceVersion",
                  "deviceVersion desc",
                  "displayName",
                  "displayName desc",
                  "isCompliant",
                  "isCompliant desc",
                  "isManaged",
                  "isManaged desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "operatingSystemVersion",
                  "operatingSystemVersion desc",
                  "physicalIds",
                  "physicalIds desc",
                  "trustType",
                  "trustType desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of device",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.device"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Add new entity to devices",
        "operationId": "AddEntityToDevices",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/devices('{id}')": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entity from devices by key",
        "operationId": "GetEntityFromDevicesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "devices"
        ],
        "summary": "Update entity in devices",
        "operationId": "UpdateEntityInDevices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Delete entity from devices",
        "operationId": "DeleteEntityFromDevices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/devices('{id}')/extensions": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get extensions from devices",
        "operationId": "GetExtensionsFromDevices",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "alternativeSecurityIds",
                  "alternativeSecurityIds desc",
                  "approximateLastSignInDateTime",
                  "approximateLastSignInDateTime desc",
                  "deviceId",
                  "deviceId desc",
                  "deviceMetadata",
                  "deviceMetadata desc",
                  "deviceVersion",
                  "deviceVersion desc",
                  "displayName",
                  "displayName desc",
                  "isCompliant",
                  "isCompliant desc",
                  "isManaged",
                  "isManaged desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "operatingSystemVersion",
                  "operatingSystemVersion desc",
                  "physicalIds",
                  "physicalIds desc",
                  "trustType",
                  "trustType desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "registeredOwners",
                  "registeredUsers",
                  "extensions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Add new navigation property to extensions for devices",
        "operationId": "AddExtensionsToDevices",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entities from domains",
        "operationId": "GetEntitiesFromDomains",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "authenticationType",
                  "authenticationType desc",
                  "availabilityStatus",
                  "availabilityStatus desc",
                  "isAdminManaged",
                  "isAdminManaged desc",
                  "isDefault",
                  "isDefault desc",
                  "isInitial",
                  "isInitial desc",
                  "isRoot",
                  "isRoot desc",
                  "isVerified",
                  "isVerified desc",
                  "supportedServices",
                  "supportedServices desc",
                  "state",
                  "state desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of domain",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.domain"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add new entity to domains",
        "operationId": "AddEntityToDomains",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains('{id}')": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entity from domains by key",
        "operationId": "GetEntityFromDomainsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domains"
        ],
        "summary": "Update entity in domains",
        "operationId": "UpdateEntityInDomains",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "summary": "Delete entity from domains",
        "operationId": "DeleteEntityFromDomains",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/serviceConfigurationRecords": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "GetServiceConfigurationRecordsFromDomains",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "authenticationType",
                  "authenticationType desc",
                  "availabilityStatus",
                  "availabilityStatus desc",
                  "isAdminManaged",
                  "isAdminManaged desc",
                  "isDefault",
                  "isDefault desc",
                  "isInitial",
                  "isInitial desc",
                  "isRoot",
                  "isRoot desc",
                  "isVerified",
                  "isVerified desc",
                  "supportedServices",
                  "supportedServices desc",
                  "state",
                  "state desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add new navigation property to serviceConfigurationRecords for domains",
        "operationId": "AddServiceConfigurationRecordsToDomains",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/verificationDnsRecords": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "GetVerificationDnsRecordsFromDomains",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "authenticationType",
                  "authenticationType desc",
                  "availabilityStatus",
                  "availabilityStatus desc",
                  "isAdminManaged",
                  "isAdminManaged desc",
                  "isDefault",
                  "isDefault desc",
                  "isInitial",
                  "isInitial desc",
                  "isRoot",
                  "isRoot desc",
                  "isVerified",
                  "isVerified desc",
                  "supportedServices",
                  "supportedServices desc",
                  "state",
                  "state desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add new navigation property to verificationDnsRecords for domains",
        "operationId": "AddVerificationDnsRecordsToDomains",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/microsoft.graph.verify": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Invoke action verify",
        "operationId": "InvokeVerify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entities from domainDnsRecords",
        "operationId": "GetEntitiesFromDomainDnsRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "isOptional",
                  "isOptional desc",
                  "label",
                  "label desc",
                  "recordType",
                  "recordType desc",
                  "supportedService",
                  "supportedService desc",
                  "ttl",
                  "ttl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of domainDnsRecord",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Add new entity to domainDnsRecords",
        "operationId": "AddEntityToDomainDnsRecords",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords('{id}')": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entity from domainDnsRecords by key",
        "operationId": "GetEntityFromDomainDnsRecordsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Update entity in domainDnsRecords",
        "operationId": "UpdateEntityInDomainDnsRecords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Delete entity from domainDnsRecords",
        "operationId": "DeleteEntityFromDomainDnsRecords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entities from groups",
        "operationId": "GetEntitiesFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of group",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new entity to groups",
        "operationId": "AddEntityToGroups",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entity from groups by key",
        "operationId": "GetEntityFromGroupsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update entity in groups",
        "operationId": "UpdateEntityInGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete entity from groups",
        "operationId": "DeleteEntityFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/settings": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get settings from groups",
        "operationId": "GetSettingsFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to settings for groups",
        "operationId": "AddSettingsToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/extensions": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get extensions from groups",
        "operationId": "GetExtensionsFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to extensions for groups",
        "operationId": "AddExtensionsToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/threads": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get threads from groups",
        "operationId": "GetThreadsFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to threads for groups",
        "operationId": "AddThreadsToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/calendar": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get calendar from groups",
        "operationId": "GetCalendarFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/calendarView": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "GetCalendarViewFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/events": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get events from groups",
        "operationId": "GetEventsFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to events for groups",
        "operationId": "AddEventsToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/conversations": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get conversations from groups",
        "operationId": "GetConversationsFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to conversations for groups",
        "operationId": "AddConversationsToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/photo": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get photo from groups",
        "operationId": "GetPhotoFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update the navigation property photo in groups",
        "operationId": "UpdatePhotoInGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/photos": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get photos from groups",
        "operationId": "GetPhotosFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/acceptedSenders": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "GetAcceptedSendersFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to acceptedSenders for groups",
        "operationId": "AddAcceptedSendersToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/rejectedSenders": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "GetRejectedSendersFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to rejectedSenders for groups",
        "operationId": "AddRejectedSendersToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/drive": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get drive from groups",
        "operationId": "GetDriveFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update the navigation property drive in groups",
        "operationId": "UpdateDriveInGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/drives": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get drives from groups",
        "operationId": "GetDrivesFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to drives for groups",
        "operationId": "AddDrivesToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/sites": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get sites from groups",
        "operationId": "GetSitesFromGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "visibility",
                  "visibility desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new navigation property to sites for groups",
        "operationId": "AddSitesToGroups",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/planner": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get planner from groups",
        "operationId": "GetPlannerFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update the navigation property planner in groups",
        "operationId": "UpdatePlannerInGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/onenote": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get onenote from groups",
        "operationId": "GetOnenoteFromGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "visibility",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isSubscribedByMail",
                  "unseenCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "memberOf",
                  "createdOnBehalfOf",
                  "owners",
                  "settings",
                  "extensions",
                  "threads",
                  "calendar",
                  "calendarView",
                  "events",
                  "conversations",
                  "photo",
                  "photos",
                  "acceptedSenders",
                  "rejectedSenders",
                  "drive",
                  "drives",
                  "sites",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update the navigation property onenote in groups",
        "operationId": "UpdateOnenoteInGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "InvokeSubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "InvokeUnsubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "InvokeAddFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "InvokeRemoveFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "InvokeResetUnseenCount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entities from directoryRoles",
        "operationId": "GetEntitiesFromDirectoryRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "roleTemplateId",
                  "roleTemplateId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "roleTemplateId"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRole",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Add new entity to directoryRoles",
        "operationId": "AddEntityToDirectoryRoles",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoles('{id}')": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entity from directoryRoles by key",
        "operationId": "GetEntityFromDirectoryRolesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "roleTemplateId"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Update entity in directoryRoles",
        "operationId": "UpdateEntityInDirectoryRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Delete entity from directoryRoles",
        "operationId": "DeleteEntityFromDirectoryRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "operationId": "GetEntitiesFromDirectoryRoleTemplates",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRoleTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "operationId": "AddEntityToDirectoryRoleTemplates",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates('{id}')": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "operationId": "GetEntityFromDirectoryRoleTemplatesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "operationId": "UpdateEntityInDirectoryRoleTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "operationId": "DeleteEntityFromDirectoryRoleTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entities from organization",
        "operationId": "GetEntitiesFromOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "country",
                  "country desc",
                  "countryLetterCode",
                  "countryLetterCode desc",
                  "displayName",
                  "displayName desc",
                  "marketingNotificationEmails",
                  "marketingNotificationEmails desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationMails desc",
                  "securityComplianceNotificationPhones",
                  "securityComplianceNotificationPhones desc",
                  "state",
                  "state desc",
                  "street",
                  "street desc",
                  "technicalNotificationMails",
                  "technicalNotificationMails desc",
                  "verifiedDomains",
                  "verifiedDomains desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "country",
                  "countryLetterCode",
                  "displayName",
                  "marketingNotificationEmails",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "verifiedDomains"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of organization",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.organization"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Add new entity to organization",
        "operationId": "AddEntityToOrganization",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization('{id}')": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entity from organization by key",
        "operationId": "GetEntityFromOrganizationByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "country",
                  "countryLetterCode",
                  "displayName",
                  "marketingNotificationEmails",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "verifiedDomains"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "organization"
        ],
        "summary": "Update entity in organization",
        "operationId": "UpdateEntityInOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "summary": "Delete entity from organization",
        "operationId": "DeleteEntityFromOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization('{id}')/extensions": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get extensions from organization",
        "operationId": "GetExtensionsFromOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "country",
                  "country desc",
                  "countryLetterCode",
                  "countryLetterCode desc",
                  "displayName",
                  "displayName desc",
                  "marketingNotificationEmails",
                  "marketingNotificationEmails desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationMails desc",
                  "securityComplianceNotificationPhones",
                  "securityComplianceNotificationPhones desc",
                  "state",
                  "state desc",
                  "street",
                  "street desc",
                  "technicalNotificationMails",
                  "technicalNotificationMails desc",
                  "verifiedDomains",
                  "verifiedDomains desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "country",
                  "countryLetterCode",
                  "displayName",
                  "marketingNotificationEmails",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "verifiedDomains"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "extensions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Add new navigation property to extensions for organization",
        "operationId": "AddExtensionsToOrganization",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupSettings": {
      "get": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Get entities from groupSettings",
        "operationId": "GetEntitiesFromGroupSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "templateId",
                  "templateId desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupSetting",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Add new entity to groupSettings",
        "operationId": "AddEntityToGroupSettings",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupSettings('{id}')": {
      "get": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Get entity from groupSettings by key",
        "operationId": "GetEntityFromGroupSettingsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Update entity in groupSettings",
        "operationId": "UpdateEntityInGroupSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Delete entity from groupSettings",
        "operationId": "DeleteEntityFromGroupSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupSettingTemplates": {
      "get": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Get entities from groupSettingTemplates",
        "operationId": "GetEntitiesFromGroupSettingTemplates",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "description",
                  "description desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "description",
                  "values"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupSettingTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Add new entity to groupSettingTemplates",
        "operationId": "AddEntityToGroupSettingTemplates",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupSettingTemplates('{id}')": {
      "get": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Get entity from groupSettingTemplates by key",
        "operationId": "GetEntityFromGroupSettingTemplatesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "description",
                  "values"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Update entity in groupSettingTemplates",
        "operationId": "UpdateEntityInGroupSettingTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Delete entity from groupSettingTemplates",
        "operationId": "DeleteEntityFromGroupSettingTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entities from subscribedSkus",
        "operationId": "GetEntitiesFromSubscribedSkus",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "capabilityStatus",
                  "capabilityStatus desc",
                  "consumedUnits",
                  "consumedUnits desc",
                  "prepaidUnits",
                  "prepaidUnits desc",
                  "servicePlans",
                  "servicePlans desc",
                  "skuId",
                  "skuId desc",
                  "skuPartNumber",
                  "skuPartNumber desc",
                  "appliesTo",
                  "appliesTo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber",
                  "appliesTo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscribedSku",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Add new entity to subscribedSkus",
        "operationId": "AddEntityToSubscribedSkus",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscribedSkus('{id}')": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "operationId": "GetEntityFromSubscribedSkusByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber",
                  "appliesTo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Update entity in subscribedSkus",
        "operationId": "UpdateEntityInSubscribedSkus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Delete entity from subscribedSkus",
        "operationId": "DeleteEntityFromSubscribedSkus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get entities from users",
        "operationId": "GetEntitiesFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of user",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new entity to users",
        "operationId": "AddEntityToUsers",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get entity from users by key",
        "operationId": "GetEntityFromUsersByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update entity in users",
        "operationId": "UpdateEntityInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete entity from users",
        "operationId": "DeleteEntityFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/licenseDetails": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "GetLicenseDetailsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to licenseDetails for users",
        "operationId": "AddLicenseDetailsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/extensions": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get extensions from users",
        "operationId": "GetExtensionsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to extensions for users",
        "operationId": "AddExtensionsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/messages": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get messages from users",
        "operationId": "GetMessagesFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to messages for users",
        "operationId": "AddMessagesToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/mailFolders": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "GetMailFoldersFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to mailFolders for users",
        "operationId": "AddMailFoldersToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendar": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get calendar from users",
        "operationId": "GetCalendarFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendars": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get calendars from users",
        "operationId": "GetCalendarsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to calendars for users",
        "operationId": "AddCalendarsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendarGroups": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "GetCalendarGroupsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to calendarGroups for users",
        "operationId": "AddCalendarGroupsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/calendarView": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get calendarView from users",
        "operationId": "GetCalendarViewFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/events": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get events from users",
        "operationId": "GetEventsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to events for users",
        "operationId": "AddEventsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/people": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get people from users",
        "operationId": "GetPeopleFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/contacts": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get contacts from users",
        "operationId": "GetContactsFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to contacts for users",
        "operationId": "AddContactsToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/contactFolders": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "GetContactFoldersFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to contactFolders for users",
        "operationId": "AddContactFoldersToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/inferenceClassification": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get inferenceClassification from users",
        "operationId": "GetInferenceClassificationFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the navigation property inferenceClassification in users",
        "operationId": "UpdateInferenceClassificationInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/photo": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get photo from users",
        "operationId": "GetPhotoFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the navigation property photo in users",
        "operationId": "UpdatePhotoInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/photos": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get photos from users",
        "operationId": "GetPhotosFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/drive": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get drive from users",
        "operationId": "GetDriveFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the navigation property drive in users",
        "operationId": "UpdateDriveInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/drives": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get drives from users",
        "operationId": "GetDrivesFromUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new navigation property to drives for users",
        "operationId": "AddDrivesToUsers",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/planner": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get planner from users",
        "operationId": "GetPlannerFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the navigation property planner in users",
        "operationId": "UpdatePlannerInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/onenote": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get onenote from users",
        "operationId": "GetOnenoteFromUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the navigation property onenote in users",
        "operationId": "UpdateOnenoteInUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entities from contracts",
        "operationId": "GetEntitiesFromContracts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "contractType",
                  "contractType desc",
                  "customerId",
                  "customerId desc",
                  "defaultDomainName",
                  "defaultDomainName desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of contract",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.contract"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contracts"
        ],
        "summary": "Add new entity to contracts",
        "operationId": "AddEntityToContracts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contracts('{id}')": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entity from contracts by key",
        "operationId": "GetEntityFromContractsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contracts"
        ],
        "summary": "Update entity in contracts",
        "operationId": "UpdateEntityInContracts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contracts"
        ],
        "summary": "Delete entity from contracts",
        "operationId": "DeleteEntityFromContracts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entities from schemaExtensions",
        "operationId": "GetEntitiesFromSchemaExtensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "targetTypes",
                  "targetTypes desc",
                  "properties",
                  "properties desc",
                  "status",
                  "status desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "targetTypes",
                  "properties",
                  "status",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of schemaExtension",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Add new entity to schemaExtensions",
        "operationId": "AddEntityToSchemaExtensions",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/schemaExtensions('{id}')": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "operationId": "GetEntityFromSchemaExtensionsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "targetTypes",
                  "properties",
                  "status",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Update entity in schemaExtensions",
        "operationId": "UpdateEntityInSchemaExtensions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Delete entity from schemaExtensions",
        "operationId": "DeleteEntityFromSchemaExtensions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entities from drives",
        "operationId": "GetEntitiesFromDrives",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of drive",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.drive"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives"
        ],
        "summary": "Add new entity to drives",
        "operationId": "AddEntityToDrives",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entity from drives by key",
        "operationId": "GetEntityFromDrivesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives"
        ],
        "summary": "Update entity in drives",
        "operationId": "UpdateEntityInDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "drives"
        ],
        "summary": "Delete entity from drives",
        "operationId": "DeleteEntityFromDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/items": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get items from drives",
        "operationId": "GetItemsFromDrives",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives"
        ],
        "summary": "Add new navigation property to items for drives",
        "operationId": "AddItemsToDrives",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/list": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get list from drives",
        "operationId": "GetListFromDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives"
        ],
        "summary": "Update the navigation property list in drives",
        "operationId": "UpdateListInDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/root": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get root from drives",
        "operationId": "GetRootFromDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives"
        ],
        "summary": "Update the navigation property root in drives",
        "operationId": "UpdateRootInDrives",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/special": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get special from drives",
        "operationId": "GetSpecialFromDrives",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives"
        ],
        "summary": "Add new navigation property to special for drives",
        "operationId": "AddSpecialToDrives",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function recent",
        "operationId": "InvokeRecent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "InvokeSharedWithMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entities from shares",
        "operationId": "GetEntitiesFromShares",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of sharedDriveItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares"
        ],
        "summary": "Add new entity to shares",
        "operationId": "AddEntityToShares",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entity from shares by key",
        "operationId": "GetEntityFromSharesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update entity in shares",
        "operationId": "UpdateEntityInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "shares"
        ],
        "summary": "Delete entity from shares",
        "operationId": "DeleteEntityFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/driveItem": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get driveItem from shares",
        "operationId": "GetDriveItemFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update the navigation property driveItem in shares",
        "operationId": "UpdateDriveItemInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/items": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get items from shares",
        "operationId": "GetItemsFromShares",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares"
        ],
        "summary": "Add new navigation property to items for shares",
        "operationId": "AddItemsToShares",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/list": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get list from shares",
        "operationId": "GetListFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update the navigation property list in shares",
        "operationId": "UpdateListInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/listItem": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get listItem from shares",
        "operationId": "GetListItemFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update the navigation property listItem in shares",
        "operationId": "UpdateListItemInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/root": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get root from shares",
        "operationId": "GetRootFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update the navigation property root in shares",
        "operationId": "UpdateRootInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares('{id}')/site": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get site from shares",
        "operationId": "GetSiteFromShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update the navigation property site in shares",
        "operationId": "UpdateSiteInShares",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entities from sites",
        "operationId": "GetEntitiesFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of site",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.site"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new entity to sites",
        "operationId": "AddEntityToSites",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entity from sites by key",
        "operationId": "GetEntityFromSitesByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "summary": "Update entity in sites",
        "operationId": "UpdateEntityInSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "sites"
        ],
        "summary": "Delete entity from sites",
        "operationId": "DeleteEntityFromSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/columns": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get columns from sites",
        "operationId": "GetColumnsFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to columns for sites",
        "operationId": "AddColumnsToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/contentTypes": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "GetContentTypesFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to contentTypes for sites",
        "operationId": "AddContentTypesToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/drive": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get drive from sites",
        "operationId": "GetDriveFromSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "summary": "Update the navigation property drive in sites",
        "operationId": "UpdateDriveInSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/drives": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get drives from sites",
        "operationId": "GetDrivesFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to drives for sites",
        "operationId": "AddDrivesToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/items": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get items from sites",
        "operationId": "GetItemsFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to items for sites",
        "operationId": "AddItemsToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/lists": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get lists from sites",
        "operationId": "GetListsFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to lists for sites",
        "operationId": "AddListsToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/sites": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get sites from sites",
        "operationId": "GetSitesFromSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new navigation property to sites for sites",
        "operationId": "AddSitesToSites",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/onenote": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get onenote from sites",
        "operationId": "GetOnenoteFromSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "summary": "Update the navigation property onenote in sites",
        "operationId": "UpdateOnenoteInSites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/microsoft.graph.getByPath(path={path})": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Invoke function getByPath",
        "operationId": "InvokeGetByPath",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.site"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entities from workbooks",
        "operationId": "GetEntitiesFromWorkbooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of driveItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new entity to workbooks",
        "operationId": "AddEntityToWorkbooks",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entity from workbooks by key",
        "operationId": "GetEntityFromWorkbooksByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks"
        ],
        "summary": "Update entity in workbooks",
        "operationId": "UpdateEntityInWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "workbooks"
        ],
        "summary": "Delete entity from workbooks",
        "operationId": "DeleteEntityFromWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/children": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get children from workbooks",
        "operationId": "GetChildrenFromWorkbooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new navigation property to children for workbooks",
        "operationId": "AddChildrenToWorkbooks",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/listItem": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get listItem from workbooks",
        "operationId": "GetListItemFromWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks"
        ],
        "summary": "Update the navigation property listItem in workbooks",
        "operationId": "UpdateListItemInWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/permissions": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get permissions from workbooks",
        "operationId": "GetPermissionsFromWorkbooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.permission"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new navigation property to permissions for workbooks",
        "operationId": "AddPermissionsToWorkbooks",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/thumbnails": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get thumbnails from workbooks",
        "operationId": "GetThumbnailsFromWorkbooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.thumbnailSet"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new navigation property to thumbnails for workbooks",
        "operationId": "AddThumbnailsToWorkbooks",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/workbook": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get workbook from workbooks",
        "operationId": "GetWorkbookFromWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.workbook"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks"
        ],
        "summary": "Update the navigation property workbook in workbooks",
        "operationId": "UpdateWorkbookInWorkbooks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta(token={token})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "operationId": "InvokeDelta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.copy": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action copy",
        "operationId": "InvokeCopy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createLink": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createLink",
        "operationId": "InvokeCreateLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "InvokeCreateUploadSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.invite": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action invite",
        "operationId": "InvokeInvite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "GetEntitiesFromSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "resource",
                  "changeType",
                  "clientState",
                  "notificationUrl",
                  "expirationDateTime"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscription",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscription"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "AddEntityToSubscriptions",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscriptions('{id}')": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "GetEntityFromSubscriptionsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "resource",
                  "changeType",
                  "clientState",
                  "notificationUrl",
                  "expirationDateTime"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "UpdateEntityInSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "DeleteEntityFromSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entities from invitations",
        "operationId": "GetEntitiesFromInvitations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "invitedUserDisplayName",
                  "invitedUserDisplayName desc",
                  "invitedUserType",
                  "invitedUserType desc",
                  "invitedUserEmailAddress",
                  "invitedUserEmailAddress desc",
                  "invitedUserMessageInfo",
                  "invitedUserMessageInfo desc",
                  "sendInvitationMessage",
                  "sendInvitationMessage desc",
                  "inviteRedirectUrl",
                  "inviteRedirectUrl desc",
                  "inviteRedeemUrl",
                  "inviteRedeemUrl desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "invitedUserDisplayName",
                  "invitedUserType",
                  "invitedUserEmailAddress",
                  "invitedUserMessageInfo",
                  "sendInvitationMessage",
                  "inviteRedirectUrl",
                  "inviteRedeemUrl",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of invitation",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.invitation"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Add new entity to invitations",
        "operationId": "AddEntityToInvitations",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.invitation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.invitation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/invitations('{id}')": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entity from invitations by key",
        "operationId": "GetEntityFromInvitationsByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "invitedUserDisplayName",
                  "invitedUserType",
                  "invitedUserEmailAddress",
                  "invitedUserMessageInfo",
                  "sendInvitationMessage",
                  "inviteRedirectUrl",
                  "inviteRedeemUrl",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.invitation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "invitations"
        ],
        "summary": "Update entity in invitations",
        "operationId": "UpdateEntityInInvitations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.invitation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "invitations"
        ],
        "summary": "Delete entity from invitations",
        "operationId": "DeleteEntityFromInvitations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get me",
        "operationId": "GetMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update me",
        "operationId": "UpdateMe",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/licenseDetails": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "GetLicenseDetailsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to licenseDetails for me",
        "operationId": "AddLicenseDetailsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/extensions": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get extensions from me",
        "operationId": "GetExtensionsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to extensions for me",
        "operationId": "AddExtensionsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/messages": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get messages from me",
        "operationId": "GetMessagesFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to messages for me",
        "operationId": "AddMessagesToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/mailFolders": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "GetMailFoldersFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to mailFolders for me",
        "operationId": "AddMailFoldersToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/calendar": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get calendar from me",
        "operationId": "GetCalendarFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/calendars": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get calendars from me",
        "operationId": "GetCalendarsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to calendars for me",
        "operationId": "AddCalendarsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/calendarGroups": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "GetCalendarGroupsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to calendarGroups for me",
        "operationId": "AddCalendarGroupsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/calendarView": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get calendarView from me",
        "operationId": "GetCalendarViewFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/events": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get events from me",
        "operationId": "GetEventsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to events for me",
        "operationId": "AddEventsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/people": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get people from me",
        "operationId": "GetPeopleFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/contacts": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get contacts from me",
        "operationId": "GetContactsFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to contacts for me",
        "operationId": "AddContactsToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/contactFolders": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "GetContactFoldersFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to contactFolders for me",
        "operationId": "AddContactFoldersToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/inferenceClassification": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get inferenceClassification from me",
        "operationId": "GetInferenceClassificationFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update the navigation property inferenceClassification in me",
        "operationId": "UpdateInferenceClassificationInMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/photo": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get photo from me",
        "operationId": "GetPhotoFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update the navigation property photo in me",
        "operationId": "UpdatePhotoInMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/photos": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get photos from me",
        "operationId": "GetPhotosFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/drive": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get drive from me",
        "operationId": "GetDriveFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update the navigation property drive in me",
        "operationId": "UpdateDriveInMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/drives": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get drives from me",
        "operationId": "GetDrivesFromMe",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Add new navigation property to drives for me",
        "operationId": "AddDrivesToMe",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/planner": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get planner from me",
        "operationId": "GetPlannerFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update the navigation property planner in me",
        "operationId": "UpdatePlannerInMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/onenote": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get onenote from me",
        "operationId": "GetOnenoteFromMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "ownedDevices",
                  "registeredDevices",
                  "manager",
                  "directReports",
                  "memberOf",
                  "createdObjects",
                  "ownedObjects",
                  "licenseDetails",
                  "extensions",
                  "messages",
                  "mailFolders",
                  "calendar",
                  "calendars",
                  "calendarGroups",
                  "calendarView",
                  "events",
                  "people",
                  "contacts",
                  "contactFolders",
                  "inferenceClassification",
                  "photo",
                  "photos",
                  "drive",
                  "drives",
                  "planner",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update the navigation property onenote in me",
        "operationId": "UpdateOnenoteInMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "InvokeAssignLicense",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "InvokeChangePassword",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "InvokeSendMail",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "InvokeFindMeetingTimes",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "InvokeReminderView",
        "parameters": [
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get drive",
        "operationId": "GetDrive",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive"
        ],
        "summary": "Update drive",
        "operationId": "UpdateDrive",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/items": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get items from drive",
        "operationId": "GetItemsFromDrive",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drive"
        ],
        "summary": "Add new navigation property to items for drive",
        "operationId": "AddItemsToDrive",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/list": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get list from drive",
        "operationId": "GetListFromDrive",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive"
        ],
        "summary": "Update the navigation property list in drive",
        "operationId": "UpdateListInDrive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/root": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get root from drive",
        "operationId": "GetRootFromDrive",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive"
        ],
        "summary": "Update the navigation property root in drive",
        "operationId": "UpdateRootInDrive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/special": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get special from drive",
        "operationId": "GetSpecialFromDrive",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drive"
        ],
        "summary": "Add new navigation property to special for drive",
        "operationId": "AddSpecialToDrive",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function recent",
        "operationId": "InvokeRecent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function search",
        "operationId": "InvokeSearch",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "InvokeSharedWithMe",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get planner",
        "operationId": "GetPlanner",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks",
                  "plans",
                  "buckets"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "Update planner",
        "operationId": "UpdatePlanner",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/planner/tasks": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get tasks from planner",
        "operationId": "GetTasksFromPlanner",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks",
                  "plans",
                  "buckets"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "Add new navigation property to tasks for planner",
        "operationId": "AddTasksToPlanner",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/planner/plans": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get plans from planner",
        "operationId": "GetPlansFromPlanner",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks",
                  "plans",
                  "buckets"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "Add new navigation property to plans for planner",
        "operationId": "AddPlansToPlanner",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/planner/buckets": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get buckets from planner",
        "operationId": "GetBucketsFromPlanner",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks",
                  "plans",
                  "buckets"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "Add new navigation property to buckets for planner",
        "operationId": "AddBucketsToPlanner",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get reports",
        "operationId": "GetReports",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.reportRoot"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "reports"
        ],
        "summary": "Update reports",
        "operationId": "UpdateReports",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.reportRoot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserDetail()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationsUserDetail",
        "operationId": "InvokeGetOffice365ActivationsUserDetail",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationCounts()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationCounts",
        "operationId": "InvokeGetOffice365ActivationCounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserCounts()": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActivationsUserCounts",
        "operationId": "InvokeGetOffice365ActivationsUserCounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "InvokeGetOffice365ActiveUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "InvokeGetOffice365ActiveUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ServicesUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ServicesUserCounts",
        "operationId": "InvokeGetOffice365ServicesUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365ActiveUserCounts",
        "operationId": "InvokeGetOffice365ActiveUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "InvokeGetOffice365GroupsActivityDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "InvokeGetOffice365GroupsActivityDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityCounts",
        "operationId": "InvokeGetOffice365GroupsActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityGroupCounts",
        "operationId": "InvokeGetOffice365GroupsActivityGroupCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityStorage",
        "operationId": "InvokeGetOffice365GroupsActivityStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOffice365GroupsActivityFileCounts",
        "operationId": "InvokeGetOffice365GroupsActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "InvokeGetEmailActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "InvokeGetEmailActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityCounts",
        "operationId": "InvokeGetEmailActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailActivityUserCounts",
        "operationId": "InvokeGetEmailActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "InvokeGetEmailAppUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "InvokeGetEmailAppUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageAppsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageAppsUserCounts",
        "operationId": "InvokeGetEmailAppUsageAppsUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageUserCounts",
        "operationId": "InvokeGetEmailAppUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageVersionsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getEmailAppUsageVersionsUserCounts",
        "operationId": "InvokeGetEmailAppUsageVersionsUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageDetail",
        "operationId": "InvokeGetMailboxUsageDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageMailboxCounts",
        "operationId": "InvokeGetMailboxUsageMailboxCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageQuotaStatusMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageQuotaStatusMailboxCounts",
        "operationId": "InvokeGetMailboxUsageQuotaStatusMailboxCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getMailboxUsageStorage",
        "operationId": "InvokeGetMailboxUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "InvokeGetOneDriveActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "InvokeGetOneDriveActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityUserCounts",
        "operationId": "InvokeGetOneDriveActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveActivityFileCounts",
        "operationId": "InvokeGetOneDriveActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "InvokeGetOneDriveUsageAccountDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "InvokeGetOneDriveUsageAccountDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageAccountCounts",
        "operationId": "InvokeGetOneDriveUsageAccountCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageFileCounts",
        "operationId": "InvokeGetOneDriveUsageFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getOneDriveUsageStorage",
        "operationId": "InvokeGetOneDriveUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "InvokeGetSharePointActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "InvokeGetSharePointActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityFileCounts",
        "operationId": "InvokeGetSharePointActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityUserCounts",
        "operationId": "InvokeGetSharePointActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityPages(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointActivityPages",
        "operationId": "InvokeGetSharePointActivityPages",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "InvokeGetSharePointSiteUsageDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "InvokeGetSharePointSiteUsageDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageFileCounts",
        "operationId": "InvokeGetSharePointSiteUsageFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageSiteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageSiteCounts",
        "operationId": "InvokeGetSharePointSiteUsageSiteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsageStorage",
        "operationId": "InvokeGetSharePointSiteUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsagePages(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSharePointSiteUsagePages",
        "operationId": "InvokeGetSharePointSiteUsagePages",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "InvokeGetSkypeForBusinessActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "InvokeGetSkypeForBusinessActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessOrganizerActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityUserCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityMinuteCounts",
        "operationId": "InvokeGetSkypeForBusinessParticipantActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageDistributionUserCounts",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageDistributionUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserCounts",
        "operationId": "InvokeGetSkypeForBusinessDeviceUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "InvokeGetYammerActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "InvokeGetYammerActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityCounts",
        "operationId": "InvokeGetYammerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerActivityUserCounts",
        "operationId": "InvokeGetYammerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "InvokeGetYammerDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "InvokeGetYammerDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageDistributionUserCounts",
        "operationId": "InvokeGetYammerDeviceUsageDistributionUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserCounts",
        "operationId": "InvokeGetYammerDeviceUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "InvokeGetYammerGroupsActivityDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "InvokeGetYammerGroupsActivityDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityGroupCounts",
        "operationId": "InvokeGetYammerGroupsActivityGroupCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Invoke function getYammerGroupsActivityCounts",
        "operationId": "InvokeGetYammerGroupsActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.report"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "microsoft.graph.entity": {
        "title": "entity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "microsoft.graph.directoryObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directoryObject",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.device": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "device",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "alternativeSecurityIds": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.alternativeSecurityId"
                }
              },
              "approximateLastSignInDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "nullable": true
              },
              "deviceMetadata": {
                "type": "string",
                "nullable": true
              },
              "deviceVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "isCompliant": {
                "type": "boolean",
                "nullable": true
              },
              "isManaged": {
                "type": "boolean",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "nullable": true
              },
              "operatingSystemVersion": {
                "type": "string",
                "nullable": true
              },
              "physicalIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "trustType": {
                "type": "string",
                "nullable": true
              },
              "registeredOwners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "registeredUsers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.alternativeSecurityId": {
        "title": "alternativeSecurityId",
        "type": "object",
        "properties": {
          "type": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "identityProvider": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        }
      },
      "microsoft.graph.extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "extension",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.directoryRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRole",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "roleTemplateId": {
                "type": "string",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.directoryRoleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRoleTemplate",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domain",
            "type": "object",
            "properties": {
              "authenticationType": {
                "type": "string"
              },
              "availabilityStatus": {
                "type": "string",
                "nullable": true
              },
              "isAdminManaged": {
                "type": "boolean"
              },
              "isDefault": {
                "type": "boolean"
              },
              "isInitial": {
                "type": "boolean"
              },
              "isRoot": {
                "type": "boolean"
              },
              "isVerified": {
                "type": "boolean"
              },
              "supportedServices": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.domainState"
                  }
                ],
                "nullable": true
              },
              "serviceConfigurationRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              },
              "verificationDnsRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              },
              "domainNameReferences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.domainState": {
        "title": "domainState",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "nullable": true
          },
          "lastActionDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.domainDnsRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domainDnsRecord",
            "type": "object",
            "properties": {
              "isOptional": {
                "type": "boolean"
              },
              "label": {
                "type": "string"
              },
              "recordType": {
                "type": "string",
                "nullable": true
              },
              "supportedService": {
                "type": "string"
              },
              "ttl": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "microsoft.graph.domainDnsCnameRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsCnameRecord",
            "type": "object",
            "properties": {
              "canonicalName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.domainDnsMxRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsMxRecord",
            "type": "object",
            "properties": {
              "mailExchange": {
                "type": "string"
              },
              "preference": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.domainDnsSrvRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsSrvRecord",
            "type": "object",
            "properties": {
              "nameTarget": {
                "type": "string",
                "nullable": true
              },
              "port": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "protocol": {
                "type": "string",
                "nullable": true
              },
              "service": {
                "type": "string",
                "nullable": true
              },
              "weight": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.domainDnsTxtRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsTxtRecord",
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              }
            }
          }
        ]
      },
      "microsoft.graph.domainDnsUnavailableRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsUnavailableRecord",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.licenseDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "licenseDetails",
            "type": "object",
            "properties": {
              "servicePlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                }
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.servicePlanInfo": {
        "title": "servicePlanInfo",
        "type": "object",
        "properties": {
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "servicePlanName": {
            "type": "string",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "nullable": true
          },
          "appliesTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "group",
            "type": "object",
            "properties": {
              "classification": {
                "type": "string",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "groupTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "mail": {
                "type": "string",
                "nullable": true
              },
              "mailEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "renewedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "securityEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "visibility": {
                "type": "string",
                "nullable": true
              },
              "allowExternalSenders": {
                "type": "boolean",
                "nullable": true
              },
              "autoSubscribeNewMembers": {
                "type": "boolean",
                "nullable": true
              },
              "isSubscribedByMail": {
                "type": "boolean",
                "nullable": true
              },
              "unseenCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "createdOnBehalfOf": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "settings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "conversations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "photos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              },
              "acceptedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "rejectedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerGroup"
                  }
                ],
                "nullable": true
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.groupSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "groupSetting",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "templateId": {
                "type": "string",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingValue"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.conversationThread": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversationThread",
            "type": "object",
            "properties": {
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              },
              "topic": {
                "type": "string"
              },
              "hasAttachments": {
                "type": "boolean"
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              },
              "preview": {
                "type": "string"
              },
              "isLocked": {
                "type": "boolean"
              },
              "posts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.post"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.calendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendar",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarColor"
                  }
                ],
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "nullable": true
              },
              "canShare": {
                "type": "boolean",
                "nullable": true
              },
              "canViewPrivateItems": {
                "type": "boolean",
                "nullable": true
              },
              "canEdit": {
                "type": "boolean",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "nullable": true
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.outlookItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookItem",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "nullable": true
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "event",
            "type": "object",
            "properties": {
              "originalStartTimeZone": {
                "type": "string",
                "nullable": true
              },
              "originalEndTimeZone": {
                "type": "string",
                "nullable": true
              },
              "responseStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "nullable": true
              },
              "iCalUId": {
                "type": "string",
                "nullable": true
              },
              "reminderMinutesBeforeStart": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "isReminderOn": {
                "type": "boolean",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "nullable": true
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "nullable": true
              },
              "sensitivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sensitivity"
                  }
                ],
                "nullable": true
              },
              "start": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "originalStart": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "end": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.location"
                  }
                ],
                "nullable": true
              },
              "isAllDay": {
                "type": "boolean",
                "nullable": true
              },
              "isCancelled": {
                "type": "boolean",
                "nullable": true
              },
              "isOrganizer": {
                "type": "boolean",
                "nullable": true
              },
              "recurrence": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.patternedRecurrence"
                  }
                ],
                "nullable": true
              },
              "responseRequested": {
                "type": "boolean",
                "nullable": true
              },
              "seriesMasterId": {
                "type": "string",
                "nullable": true
              },
              "showAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
                  }
                ],
                "nullable": true
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eventType"
                  }
                ],
                "nullable": true
              },
              "attendees": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.attendee"
                    }
                  ],
                  "nullable": true
                }
              },
              "organizer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "nullable": true
              },
              "onlineMeetingUrl": {
                "type": "string",
                "nullable": true
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.conversation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversation",
            "type": "object",
            "properties": {
              "topic": {
                "type": "string"
              },
              "hasAttachments": {
                "type": "boolean"
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "preview": {
                "type": "string"
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.profilePhoto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "profilePhoto",
            "type": "object",
            "properties": {
              "height": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "width": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.baseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "baseItem",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "eTag": {
                "type": "string",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "parentReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "nullable": true
              },
              "webUrl": {
                "type": "string",
                "nullable": true
              },
              "createdByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              },
              "lastModifiedByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.drive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "drive",
            "type": "object",
            "properties": {
              "driveType": {
                "type": "string",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "quota": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.quota"
                  }
                ],
                "nullable": true
              },
              "sharePointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "special": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.site": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "site",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "siteCollection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteCollection"
                  }
                ],
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              },
              "lists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerGroup",
            "type": "object",
            "properties": {
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.onenote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenote",
            "type": "object",
            "properties": {
              "notebooks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.notebook"
                }
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteResource"
                }
              },
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteOperation"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "contract",
            "type": "object",
            "properties": {
              "contractType": {
                "type": "string",
                "nullable": true
              },
              "customerId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "defaultDomainName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.subscribedSku": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscribedSku",
            "type": "object",
            "properties": {
              "capabilityStatus": {
                "type": "string",
                "nullable": true
              },
              "consumedUnits": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "prepaidUnits": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.licenseUnitsDetail"
                  }
                ],
                "nullable": true
              },
              "servicePlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                }
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "nullable": true
              },
              "appliesTo": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.licenseUnitsDetail": {
        "title": "licenseUnitsDetail",
        "type": "object",
        "properties": {
          "enabled": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "suspended": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warning": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.organization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "organization",
            "type": "object",
            "properties": {
              "assignedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                }
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "countryLetterCode": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "marketingNotificationEmails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                }
              },
              "securityComplianceNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "securityComplianceNotificationPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "street": {
                "type": "string",
                "nullable": true
              },
              "technicalNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "verifiedDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.verifiedDomain"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.assignedPlan": {
        "title": "assignedPlan",
        "type": "object",
        "properties": {
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "capabilityStatus": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "microsoft.graph.provisionedPlan": {
        "title": "provisionedPlan",
        "type": "object",
        "properties": {
          "capabilityStatus": {
            "type": "string",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.verifiedDomain": {
        "title": "verifiedDomain",
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "isInitial": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.user": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "user",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "assignedLicenses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                }
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                }
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "department": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "jobTitle": {
                "type": "string",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "nullable": true
              },
              "onPremisesImmutableId": {
                "type": "string",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "passwordPolicies": {
                "type": "string",
                "nullable": true
              },
              "passwordProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.passwordProfile"
                  }
                ],
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                }
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "streetAddress": {
                "type": "string",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "nullable": true
              },
              "usageLocation": {
                "type": "string",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "nullable": true
              },
              "mailboxSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxSettings"
                  }
                ],
                "nullable": true
              },
              "aboutMe": {
                "type": "string",
                "nullable": true
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "hireDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "interests": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "mySite": {
                "type": "string",
                "nullable": true
              },
              "pastProjects": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "preferredName": {
                "type": "string",
                "nullable": true
              },
              "responsibilities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "schools": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "ownedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "registeredDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "manager": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "directReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "createdObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "ownedObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "licenseDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "mailFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              },
              "calendarGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "people": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "contactFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                  }
                ],
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "photos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                  }
                ],
                "nullable": true
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.assignedLicense": {
        "title": "assignedLicense",
        "type": "object",
        "properties": {
          "disabledPlans": {
            "type": "array",
            "items": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            }
          },
          "skuId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "microsoft.graph.passwordProfile": {
        "title": "passwordProfile",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          },
          "forceChangePasswordNextSignIn": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "microsoft.graph.mailboxSettings": {
        "title": "mailboxSettings",
        "type": "object",
        "properties": {
          "automaticRepliesSetting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesSetting"
              }
            ],
            "nullable": true
          },
          "archiveFolder": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.localeInfo"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.automaticRepliesSetting": {
        "title": "automaticRepliesSetting",
        "type": "object",
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesStatus"
              }
            ],
            "nullable": true
          },
          "externalAudience": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalAudienceScope"
              }
            ],
            "nullable": true
          },
          "scheduledStartDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "scheduledEndDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "internalReplyMessage": {
            "type": "string",
            "nullable": true
          },
          "externalReplyMessage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.dateTimeTimeZone": {
        "title": "dateTimeTimeZone",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.localeInfo": {
        "title": "localeInfo",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.message": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "message",
            "type": "object",
            "properties": {
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "sentDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "nullable": true
              },
              "internetMessageId": {
                "type": "string",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "nullable": true
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "nullable": true
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "nullable": true
              },
              "from": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "nullable": true
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                }
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                }
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                }
              },
              "conversationId": {
                "type": "string",
                "nullable": true
              },
              "uniqueBody": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "isDeliveryReceiptRequested": {
                "type": "boolean",
                "nullable": true
              },
              "isReadReceiptRequested": {
                "type": "boolean",
                "nullable": true
              },
              "isRead": {
                "type": "boolean",
                "nullable": true
              },
              "isDraft": {
                "type": "boolean",
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "nullable": true
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.mailFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailFolder",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "nullable": true
              },
              "childFolderCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "unreadItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "totalItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.calendarGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendarGroup",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "classId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "nullable": true
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "person",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "nullable": true
              },
              "birthday": {
                "type": "string",
                "nullable": true
              },
              "personNotes": {
                "type": "string",
                "nullable": true
              },
              "isFavorite": {
                "type": "boolean",
                "nullable": true
              },
              "scoredEmailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.scoredEmailAddress"
                    }
                  ],
                  "nullable": true
                }
              },
              "phones": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.phone"
                    }
                  ],
                  "nullable": true
                }
              },
              "postalAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.location"
                    }
                  ],
                  "nullable": true
                }
              },
              "websites": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.website"
                    }
                  ],
                  "nullable": true
                }
              },
              "jobTitle": {
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "nullable": true
              },
              "yomiCompany": {
                "type": "string",
                "nullable": true
              },
              "department": {
                "type": "string",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "nullable": true
              },
              "profession": {
                "type": "string",
                "nullable": true
              },
              "personType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.personType"
                  }
                ],
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "imAddress": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "contact",
            "type": "object",
            "properties": {
              "parentFolderId": {
                "type": "string",
                "nullable": true
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "fileAs": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "initials": {
                "type": "string",
                "nullable": true
              },
              "middleName": {
                "type": "string",
                "nullable": true
              },
              "nickName": {
                "type": "string",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "yomiGivenName": {
                "type": "string",
                "nullable": true
              },
              "yomiSurname": {
                "type": "string",
                "nullable": true
              },
              "yomiCompanyName": {
                "type": "string",
                "nullable": true
              },
              "generation": {
                "type": "string",
                "nullable": true
              },
              "emailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                    }
                  ],
                  "nullable": true
                }
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "jobTitle": {
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "nullable": true
              },
              "department": {
                "type": "string",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "nullable": true
              },
              "profession": {
                "type": "string",
                "nullable": true
              },
              "businessHomePage": {
                "type": "string",
                "nullable": true
              },
              "assistantName": {
                "type": "string",
                "nullable": true
              },
              "manager": {
                "type": "string",
                "nullable": true
              },
              "homePhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "mobilePhone": {
                "type": "string",
                "nullable": true
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "homeAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "nullable": true
              },
              "businessAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "nullable": true
              },
              "otherAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "nullable": true
              },
              "spouseName": {
                "type": "string",
                "nullable": true
              },
              "personalNotes": {
                "type": "string",
                "nullable": true
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.contactFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contactFolder",
            "type": "object",
            "properties": {
              "parentFolderId": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.inferenceClassification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassification",
            "type": "object",
            "properties": {
              "overrides": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverride"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerUser",
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.settingValue": {
        "title": "settingValue",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.groupSettingTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "groupSettingTemplate",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingTemplateValue"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.settingTemplateValue": {
        "title": "settingTemplateValue",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.ComplexExtensionValue": {
        "title": "ComplexExtensionValue",
        "type": "object"
      },
      "microsoft.graph.schemaExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "schemaExtension",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "targetTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extensionSchemaProperty"
                }
              },
              "status": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              }
            }
          }
        ]
      },
      "microsoft.graph.extensionSchemaProperty": {
        "title": "extensionSchemaProperty",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.attachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "attachment",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "contentType": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "isInline": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "microsoft.graph.recipient": {
        "title": "recipient",
        "type": "object",
        "properties": {
          "emailAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.emailAddress": {
        "title": "emailAddress",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.attendeeBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          {
            "title": "attendeeBase",
            "type": "object",
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attendeeType"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.meetingTimeSuggestionsResult": {
        "title": "meetingTimeSuggestionsResult",
        "type": "object",
        "properties": {
          "meetingTimeSuggestions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.meetingTimeSuggestion"
                }
              ],
              "nullable": true
            }
          },
          "emptySuggestionsReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.meetingTimeSuggestion": {
        "title": "meetingTimeSuggestion",
        "type": "object",
        "properties": {
          "meetingTimeSlot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeSlot"
              }
            ],
            "nullable": true
          },
          "confidence": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "organizerAvailability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "nullable": true
          },
          "attendeeAvailability": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attendeeAvailability"
                }
              ],
              "nullable": true
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.location"
                }
              ],
              "nullable": true
            }
          },
          "suggestionReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.timeSlot": {
        "title": "timeSlot",
        "type": "object",
        "properties": {
          "start": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "end": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.attendeeAvailability": {
        "title": "attendeeAvailability",
        "type": "object",
        "properties": {
          "attendee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
              }
            ],
            "nullable": true
          },
          "availability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.location": {
        "title": "location",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "locationEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.physicalAddress": {
        "title": "physicalAddress",
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "countryOrRegion": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.locationConstraint": {
        "title": "locationConstraint",
        "type": "object",
        "properties": {
          "isRequired": {
            "type": "boolean",
            "nullable": true
          },
          "suggestLocation": {
            "type": "boolean",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.locationConstraintItem"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "microsoft.graph.locationConstraintItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.location"
          },
          {
            "title": "locationConstraintItem",
            "type": "object",
            "properties": {
              "resolveAvailability": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.timeConstraint": {
        "title": "timeConstraint",
        "type": "object",
        "properties": {
          "activityDomain": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.activityDomain"
              }
            ],
            "nullable": true
          },
          "timeslots": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.timeSlot"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "microsoft.graph.reminder": {
        "title": "reminder",
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "eventStartTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "eventEndTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "changeKey": {
            "type": "string",
            "nullable": true
          },
          "eventSubject": {
            "type": "string",
            "nullable": true
          },
          "eventLocation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.location"
              }
            ],
            "nullable": true
          },
          "eventWebLink": {
            "type": "string",
            "nullable": true
          },
          "reminderFireTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.singleValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "singleValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.multiValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "multiValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.itemBody": {
        "title": "itemBody",
        "type": "object",
        "properties": {
          "contentType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bodyType"
              }
            ],
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.fileAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "fileAttachment",
            "type": "object",
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "contentLocation": {
                "type": "string",
                "nullable": true
              },
              "contentBytes": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.itemAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "itemAttachment",
            "type": "object",
            "properties": {
              "item": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outlookItem"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.responseStatus": {
        "title": "responseStatus",
        "type": "object",
        "properties": {
          "response": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.responseType"
              }
            ],
            "nullable": true
          },
          "time": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.patternedRecurrence": {
        "title": "patternedRecurrence",
        "type": "object",
        "properties": {
          "pattern": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePattern"
              }
            ],
            "nullable": true
          },
          "range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRange"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.recurrencePattern": {
        "title": "recurrencePattern",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePatternType"
              }
            ],
            "nullable": true
          },
          "interval": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                }
              ],
              "nullable": true
            }
          },
          "firstDayOfWeek": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
              }
            ],
            "nullable": true
          },
          "index": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.weekIndex"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.recurrenceRange": {
        "title": "recurrenceRange",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRangeType"
              }
            ],
            "nullable": true
          },
          "startDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "recurrenceTimeZone": {
            "type": "string",
            "nullable": true
          },
          "numberOfOccurrences": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "microsoft.graph.attendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
          },
          {
            "title": "attendee",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.eventMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.message"
          },
          {
            "title": "eventMessage",
            "type": "object",
            "properties": {
              "meetingMessageType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.meetingMessageType"
                  }
                ],
                "nullable": true
              },
              "event": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.referenceAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "referenceAttachment",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.openTypeExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.extension"
          },
          {
            "title": "openTypeExtension",
            "type": "object",
            "properties": {
              "extensionName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "microsoft.graph.post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "post",
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "hasAttachments": {
                "type": "boolean"
              },
              "from": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "nullable": true
              },
              "newParticipants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              },
              "conversationId": {
                "type": "string",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "inReplyTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.post"
                  }
                ],
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.inferenceClassificationOverride": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassificationOverride",
            "type": "object",
            "properties": {
              "classifyAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "nullable": true
              },
              "senderEmailAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.scoredEmailAddress": {
        "title": "scoredEmailAddress",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "relevanceScore": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          }
        }
      },
      "microsoft.graph.phone": {
        "title": "phone",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.phoneType"
              }
            ],
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.website": {
        "title": "website",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.websiteType"
              }
            ],
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.personType": {
        "title": "personType",
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "nullable": true
          },
          "subclass": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.identitySet": {
        "title": "identitySet",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "nullable": true
          },
          "device": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "nullable": true
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.identity": {
        "title": "identity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.itemReference": {
        "title": "itemReference",
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "nullable": true
          },
          "driveType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "shareId": {
            "type": "string",
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.sharepointIds": {
        "title": "sharepointIds",
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "nullable": true
          },
          "listItemId": {
            "type": "string",
            "nullable": true
          },
          "listItemUniqueId": {
            "type": "string",
            "nullable": true
          },
          "siteId": {
            "type": "string",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "nullable": true
          },
          "webId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.columnDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnDefinition",
            "type": "object",
            "properties": {
              "boolean": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.booleanColumn"
                  }
                ],
                "nullable": true
              },
              "calculated": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calculatedColumn"
                  }
                ],
                "nullable": true
              },
              "choice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.choiceColumn"
                  }
                ],
                "nullable": true
              },
              "columnGroup": {
                "type": "string",
                "nullable": true
              },
              "currency": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.currencyColumn"
                  }
                ],
                "nullable": true
              },
              "dateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeColumn"
                  }
                ],
                "nullable": true
              },
              "defaultValue": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defaultColumnValue"
                  }
                ],
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "nullable": true
              },
              "indexed": {
                "type": "boolean",
                "nullable": true
              },
              "lookup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.lookupColumn"
                  }
                ],
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "number": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.numberColumn"
                  }
                ],
                "nullable": true
              },
              "personOrGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.personOrGroupColumn"
                  }
                ],
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "nullable": true
              },
              "required": {
                "type": "boolean",
                "nullable": true
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.textColumn"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.booleanColumn": {
        "title": "booleanColumn",
        "type": "object"
      },
      "microsoft.graph.calculatedColumn": {
        "title": "calculatedColumn",
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "nullable": true
          },
          "outputType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.choiceColumn": {
        "title": "choiceColumn",
        "type": "object",
        "properties": {
          "allowTextEntry": {
            "type": "boolean",
            "nullable": true
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "displayAs": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.currencyColumn": {
        "title": "currencyColumn",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.dateTimeColumn": {
        "title": "dateTimeColumn",
        "type": "object",
        "properties": {
          "displayAs": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.defaultColumnValue": {
        "title": "defaultColumnValue",
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.lookupColumn": {
        "title": "lookupColumn",
        "type": "object",
        "properties": {
          "allowMultipleValues": {
            "type": "boolean",
            "nullable": true
          },
          "allowUnlimitedLength": {
            "type": "boolean",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "listId": {
            "type": "string",
            "nullable": true
          },
          "primaryLookupColumnId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.numberColumn": {
        "title": "numberColumn",
        "type": "object",
        "properties": {
          "decimalPlaces": {
            "type": "string",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "nullable": true
          },
          "maximum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "minimum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          }
        }
      },
      "microsoft.graph.personOrGroupColumn": {
        "title": "personOrGroupColumn",
        "type": "object",
        "properties": {
          "allowMultipleSelection": {
            "type": "boolean",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "nullable": true
          },
          "chooseFromType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.textColumn": {
        "title": "textColumn",
        "type": "object",
        "properties": {
          "allowMultipleLines": {
            "type": "boolean",
            "nullable": true
          },
          "appendChangesToExistingText": {
            "type": "boolean",
            "nullable": true
          },
          "linesForEditing": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.columnLink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnLink",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.contentType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contentType",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "group": {
                "type": "string",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "nullable": true
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "order": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeOrder"
                  }
                ],
                "nullable": true
              },
              "parentId": {
                "type": "string",
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "nullable": true
              },
              "sealed": {
                "type": "boolean",
                "nullable": true
              },
              "columnLinks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnLink"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.contentTypeOrder": {
        "title": "contentTypeOrder",
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "nullable": true
          },
          "position": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.quota": {
        "title": "quota",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "remaining": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "microsoft.graph.systemFacet": {
        "title": "systemFacet",
        "type": "object"
      },
      "microsoft.graph.driveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "driveItem",
            "type": "object",
            "properties": {
              "audio": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.audio"
                  }
                ],
                "nullable": true
              },
              "content": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              },
              "cTag": {
                "type": "string",
                "nullable": true
              },
              "deleted": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deleted"
                  }
                ],
                "nullable": true
              },
              "file": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.file"
                  }
                ],
                "nullable": true
              },
              "fileSystemInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
                  }
                ],
                "nullable": true
              },
              "folder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.folder"
                  }
                ],
                "nullable": true
              },
              "image": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.image"
                  }
                ],
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.geoCoordinates"
                  }
                ],
                "nullable": true
              },
              "package": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.package"
                  }
                ],
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.photo"
                  }
                ],
                "nullable": true
              },
              "remoteItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteItem"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "nullable": true
              },
              "searchResult": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.searchResult"
                  }
                ],
                "nullable": true
              },
              "shared": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.shared"
                  }
                ],
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "specialFolder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.specialFolder"
                  }
                ],
                "nullable": true
              },
              "video": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.video"
                  }
                ],
                "nullable": true
              },
              "webDavUrl": {
                "type": "string",
                "nullable": true
              },
              "children": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "permissions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.permission"
                }
              },
              "thumbnails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.thumbnailSet"
                }
              },
              "workbook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbook"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "list",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listInfo"
                  }
                ],
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.audio": {
        "title": "audio",
        "type": "object",
        "properties": {
          "album": {
            "type": "string",
            "nullable": true
          },
          "albumArtist": {
            "type": "string",
            "nullable": true
          },
          "artist": {
            "type": "string",
            "nullable": true
          },
          "bitrate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "composers": {
            "type": "string",
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "nullable": true
          },
          "disc": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "discCount": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "genre": {
            "type": "string",
            "nullable": true
          },
          "hasDrm": {
            "type": "boolean",
            "nullable": true
          },
          "isVariableBitrate": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "track": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trackCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.deleted": {
        "title": "deleted",
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.file": {
        "title": "file",
        "type": "object",
        "properties": {
          "hashes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.hashes"
              }
            ],
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "processingMetadata": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "microsoft.graph.hashes": {
        "title": "hashes",
        "type": "object",
        "properties": {
          "crc32Hash": {
            "type": "string",
            "nullable": true
          },
          "quickXorHash": {
            "type": "string",
            "nullable": true
          },
          "sha1Hash": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.fileSystemInfo": {
        "title": "fileSystemInfo",
        "type": "object",
        "properties": {
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastAccessedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.folder": {
        "title": "folder",
        "type": "object",
        "properties": {
          "childCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "view": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folderView"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.folderView": {
        "title": "folderView",
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "viewType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.image": {
        "title": "image",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.geoCoordinates": {
        "title": "geoCoordinates",
        "type": "object",
        "properties": {
          "altitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          }
        }
      },
      "microsoft.graph.package": {
        "title": "package",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.photo": {
        "title": "photo",
        "type": "object",
        "properties": {
          "cameraMake": {
            "type": "string",
            "nullable": true
          },
          "cameraModel": {
            "type": "string",
            "nullable": true
          },
          "exposureDenominator": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "exposureNumerator": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "fNumber": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "focalLength": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "iso": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "takenDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.remoteItem": {
        "title": "remoteItem",
        "type": "object",
        "properties": {
          "createdBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.file"
              }
            ],
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "nullable": true
          },
          "folder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folder"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "package": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.package"
              }
            ],
            "nullable": true
          },
          "parentReference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.itemReference"
              }
            ],
            "nullable": true
          },
          "shared": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.shared"
              }
            ],
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "specialFolder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.specialFolder"
              }
            ],
            "nullable": true
          },
          "webDavUrl": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.shared": {
        "title": "shared",
        "type": "object",
        "properties": {
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "sharedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "sharedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.specialFolder": {
        "title": "specialFolder",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.root": {
        "title": "root",
        "type": "object"
      },
      "microsoft.graph.searchResult": {
        "title": "searchResult",
        "type": "object",
        "properties": {
          "onClickTelemetryUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.video": {
        "title": "video",
        "type": "object",
        "properties": {
          "audioBitsPerSample": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "audioChannels": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "audioFormat": {
            "type": "string",
            "nullable": true
          },
          "audioSamplesPerSecond": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bitrate": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fourCC": {
            "type": "string",
            "nullable": true
          },
          "frameRate": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.listItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "listItem",
            "type": "object",
            "properties": {
              "contentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeInfo"
                  }
                ],
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "fields": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fieldValueSet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.permission": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "permission",
            "type": "object",
            "properties": {
              "grantedTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "nullable": true
              },
              "invitation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingInvitation"
                  }
                ],
                "nullable": true
              },
              "link": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingLink"
                  }
                ],
                "nullable": true
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "shareId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.thumbnailSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "thumbnailSet",
            "type": "object",
            "properties": {
              "large": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "nullable": true
              },
              "medium": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "nullable": true
              },
              "small": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "nullable": true
              },
              "source": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbook",
            "type": "object",
            "properties": {
              "application": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookApplication"
                  }
                ],
                "nullable": true
              },
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              },
              "worksheets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                }
              },
              "functions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFunctions"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.fieldValueSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "fieldValueSet",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.listInfo": {
        "title": "listInfo",
        "type": "object",
        "properties": {
          "contentTypesEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.contentTypeInfo": {
        "title": "contentTypeInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.sharingInvitation": {
        "title": "sharingInvitation",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "invitedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "redeemedBy": {
            "type": "string",
            "nullable": true
          },
          "signInRequired": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "microsoft.graph.sharingLink": {
        "title": "sharingLink",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.sharedDriveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "sharedDriveItem",
            "type": "object",
            "properties": {
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "site": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.site"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.siteCollection": {
        "title": "siteCollection",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.thumbnail": {
        "title": "thumbnail",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceItemId": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "microsoft.graph.driveItemUploadableProperties": {
        "title": "driveItemUploadableProperties",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.driveRecipient": {
        "title": "driveRecipient",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.uploadSession": {
        "title": "uploadSession",
        "type": "object",
        "properties": {
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextExpectedRanges": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "uploadUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.workbookApplication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookApplication",
            "type": "object",
            "properties": {
              "calculationMode": {
                "type": "string"
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookNamedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookNamedItem",
            "type": "object",
            "properties": {
              "comment": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "scope": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "visible": {
                "type": "boolean"
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTable",
            "type": "object",
            "properties": {
              "highlightFirstColumn": {
                "type": "boolean"
              },
              "highlightLastColumn": {
                "type": "boolean"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "showBandedColumns": {
                "type": "boolean"
              },
              "showBandedRows": {
                "type": "boolean"
              },
              "showFilterButton": {
                "type": "boolean"
              },
              "showHeaders": {
                "type": "boolean"
              },
              "showTotals": {
                "type": "boolean"
              },
              "style": {
                "type": "string",
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableColumn"
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableRow"
                }
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookTableSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookWorksheet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheet",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "position": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "visibility": {
                "type": "string"
              },
              "charts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChart"
                }
              },
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "pivotTables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookPivotTable"
                }
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtection"
                  }
                ],
                "nullable": true
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookFunctions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFunctions",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.workbookSessionInfo": {
        "title": "workbookSessionInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "persistChanges": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "microsoft.graph.Json": {
        "title": "Json",
        "type": "object"
      },
      "microsoft.graph.workbookChart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChart",
            "type": "object",
            "properties": {
              "height": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double"
              },
              "left": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "top": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double"
              },
              "width": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double"
              },
              "axes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxes"
                  }
                ],
                "nullable": true
              },
              "dataLabels": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabels"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAreaFormat"
                  }
                ],
                "nullable": true
              },
              "legend": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegend"
                  }
                ],
                "nullable": true
              },
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartSeries"
                }
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitle"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAxes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxes",
            "type": "object",
            "properties": {
              "categoryAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "seriesAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "valueAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartDataLabels": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabels",
            "type": "object",
            "properties": {
              "position": {
                "type": "string",
                "nullable": true
              },
              "separator": {
                "type": "string",
                "nullable": true
              },
              "showBubbleSize": {
                "type": "boolean",
                "nullable": true
              },
              "showCategoryName": {
                "type": "boolean",
                "nullable": true
              },
              "showLegendKey": {
                "type": "boolean",
                "nullable": true
              },
              "showPercentage": {
                "type": "boolean",
                "nullable": true
              },
              "showSeriesName": {
                "type": "boolean",
                "nullable": true
              },
              "showValue": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabelFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAreaFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAreaFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartLegend": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegend",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "nullable": true
              },
              "position": {
                "type": "string",
                "nullable": true
              },
              "visible": {
                "type": "boolean"
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegendFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartSeries": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeries",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartSeriesFormat"
                  }
                ],
                "nullable": true
              },
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartPoint"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitle",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "nullable": true
              },
              "text": {
                "type": "string",
                "nullable": true
              },
              "visible": {
                "type": "boolean"
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFill",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.workbookChartFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "nullable": true
              },
              "color": {
                "type": "string",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAxis": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxis",
            "type": "object",
            "properties": {
              "majorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "maximum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "minimum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "minorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisFormat"
                  }
                ],
                "nullable": true
              },
              "majorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "minorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitle"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAxisFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartGridlines": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlines",
            "type": "object",
            "properties": {
              "visible": {
                "type": "boolean"
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlinesFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAxisTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitle",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "nullable": true
              },
              "visible": {
                "type": "boolean"
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartLineFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLineFormat",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartAxisTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitleFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartDataLabelFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabelFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartGridlinesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlinesFormat",
            "type": "object",
            "properties": {
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartLegendFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegendFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPoint",
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartPointFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartPointFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPointFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartSeriesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeriesFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookChartTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitleFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFilter",
            "type": "object",
            "properties": {
              "criteria": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilterCriteria"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookFilterCriteria": {
        "title": "workbookFilterCriteria",
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "criterion1": {
            "type": "string",
            "nullable": true
          },
          "criterion2": {
            "type": "string",
            "nullable": true
          },
          "dynamicCriteria": {
            "type": "string"
          },
          "filterOn": {
            "type": "string"
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "nullable": true
          },
          "operator": {
            "type": "string"
          },
          "values": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.Json"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.workbookIcon": {
        "title": "workbookIcon",
        "type": "object",
        "properties": {
          "index": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "set": {
            "type": "string"
          }
        }
      },
      "microsoft.graph.workbookFormatProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFormatProtection",
            "type": "object",
            "properties": {
              "formulaHidden": {
                "type": "boolean",
                "nullable": true
              },
              "locked": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookFunctionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFunctionResult",
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookPivotTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookPivotTable",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRange": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRange",
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "nullable": true
              },
              "addressLocal": {
                "type": "string",
                "nullable": true
              },
              "cellCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "columnHidden": {
                "type": "boolean",
                "nullable": true
              },
              "columnIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "nullable": true
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "rowHidden": {
                "type": "boolean",
                "nullable": true
              },
              "rowIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFormat"
                  }
                ],
                "nullable": true
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRangeFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFormat",
            "type": "object",
            "properties": {
              "columnWidth": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double",
                "nullable": true
              },
              "horizontalAlignment": {
                "type": "string",
                "nullable": true
              },
              "rowHeight": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double",
                "nullable": true
              },
              "verticalAlignment": {
                "type": "string",
                "nullable": true
              },
              "wrapText": {
                "type": "boolean",
                "nullable": true
              },
              "borders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeBorder"
                }
              },
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFont"
                  }
                ],
                "nullable": true
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFormatProtection"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRangeSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeSort",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.workbookRangeBorder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeBorder",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "nullable": true
              },
              "sideIndex": {
                "type": "string",
                "nullable": true
              },
              "style": {
                "type": "string",
                "nullable": true
              },
              "weight": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRangeFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFill",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRangeFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "nullable": true
              },
              "color": {
                "type": "string",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookRangeView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeView",
            "type": "object",
            "properties": {
              "cellAddresses": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeView"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookTableColumn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableColumn",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "filter": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilter"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookTableRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableRow",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32"
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookTableSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableSort",
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.workbookSortField"
                    }
                  ],
                  "nullable": true
                }
              },
              "matchCase": {
                "type": "boolean"
              },
              "method": {
                "type": "string"
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookSortField": {
        "title": "workbookSortField",
        "type": "object",
        "properties": {
          "ascending": {
            "type": "boolean"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "dataOption": {
            "type": "string"
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "nullable": true
          },
          "key": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "sortOn": {
            "type": "string"
          }
        }
      },
      "microsoft.graph.workbookWorksheetProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheetProtection",
            "type": "object",
            "properties": {
              "options": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtectionOptions"
                  }
                ],
                "nullable": true
              },
              "protected": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "microsoft.graph.workbookWorksheetProtectionOptions": {
        "title": "workbookWorksheetProtectionOptions",
        "type": "object",
        "properties": {
          "allowAutoFilter": {
            "type": "boolean"
          },
          "allowDeleteColumns": {
            "type": "boolean"
          },
          "allowDeleteRows": {
            "type": "boolean"
          },
          "allowFormatCells": {
            "type": "boolean"
          },
          "allowFormatColumns": {
            "type": "boolean"
          },
          "allowFormatRows": {
            "type": "boolean"
          },
          "allowInsertColumns": {
            "type": "boolean"
          },
          "allowInsertHyperlinks": {
            "type": "boolean"
          },
          "allowInsertRows": {
            "type": "boolean"
          },
          "allowPivotTables": {
            "type": "boolean"
          },
          "allowSort": {
            "type": "boolean"
          }
        }
      },
      "microsoft.graph.workbookFilterDatetime": {
        "title": "workbookFilterDatetime",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "specificity": {
            "type": "string"
          }
        }
      },
      "microsoft.graph.workbookRangeReference": {
        "title": "workbookRangeReference",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.subscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscription",
            "type": "object",
            "properties": {
              "resource": {
                "type": "string"
              },
              "changeType": {
                "type": "string"
              },
              "clientState": {
                "type": "string",
                "nullable": true
              },
              "notificationUrl": {
                "type": "string"
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "microsoft.graph.invitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "invitation",
            "type": "object",
            "properties": {
              "invitedUserDisplayName": {
                "type": "string",
                "nullable": true
              },
              "invitedUserType": {
                "type": "string",
                "nullable": true
              },
              "invitedUserEmailAddress": {
                "type": "string"
              },
              "invitedUserMessageInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.invitedUserMessageInfo"
                  }
                ],
                "nullable": true
              },
              "sendInvitationMessage": {
                "type": "boolean",
                "nullable": true
              },
              "inviteRedirectUrl": {
                "type": "string"
              },
              "inviteRedeemUrl": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "invitedUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.invitedUserMessageInfo": {
        "title": "invitedUserMessageInfo",
        "type": "object",
        "properties": {
          "ccRecipients": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            }
          },
          "messageLanguage": {
            "type": "string",
            "nullable": true
          },
          "customizedMessageBody": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.plannerTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTask",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "planId": {
                "type": "string",
                "nullable": true
              },
              "bucketId": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string"
              },
              "orderHint": {
                "type": "string",
                "nullable": true
              },
              "assigneePriority": {
                "type": "string",
                "nullable": true
              },
              "percentComplete": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "startDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dueDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "hasDescription": {
                "type": "boolean",
                "nullable": true
              },
              "previewType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
                  }
                ],
                "nullable": true
              },
              "completedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "completedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "referenceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "checklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "activeChecklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "appliedCategories": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAppliedCategories"
                  }
                ],
                "nullable": true
              },
              "assignments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignments"
                  }
                ],
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "nullable": true
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerTaskDetails"
                  }
                ],
                "nullable": true
              },
              "assignedToTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "progressTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "bucketTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlan",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string"
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPlanDetails"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.planner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "planner",
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerBucket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucket",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "planId": {
                "type": "string",
                "nullable": true
              },
              "orderHint": {
                "type": "string",
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerAppliedCategories": {
        "title": "plannerAppliedCategories",
        "type": "object"
      },
      "microsoft.graph.plannerAssignments": {
        "title": "plannerAssignments",
        "type": "object"
      },
      "microsoft.graph.plannerTaskDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTaskDetails",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "previewType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
                  }
                ],
                "nullable": true
              },
              "references": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerExternalReferences"
                  }
                ],
                "nullable": true
              },
              "checklist": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerChecklistItems"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerAssignedToTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "unassignedOrderHint": {
                "type": "string",
                "nullable": true
              },
              "orderHintsByAssignee": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerOrderHintsByAssignee"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerProgressTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucketTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerPlanDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlanDetails",
            "type": "object",
            "properties": {
              "sharedWith": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUserIds"
                  }
                ],
                "nullable": true
              },
              "categoryDescriptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerCategoryDescriptions"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.plannerExternalReference": {
        "title": "plannerExternalReference",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "previewPriority": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.plannerChecklistItem": {
        "title": "plannerChecklistItem",
        "type": "object",
        "properties": {
          "isChecked": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "microsoft.graph.plannerAssignment": {
        "title": "plannerAssignment",
        "type": "object",
        "properties": {
          "assignedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.plannerExternalReferences": {
        "title": "plannerExternalReferences",
        "type": "object"
      },
      "microsoft.graph.plannerChecklistItems": {
        "title": "plannerChecklistItems",
        "type": "object"
      },
      "microsoft.graph.plannerOrderHintsByAssignee": {
        "title": "plannerOrderHintsByAssignee",
        "type": "object"
      },
      "microsoft.graph.plannerUserIds": {
        "title": "plannerUserIds",
        "type": "object"
      },
      "microsoft.graph.plannerCategoryDescriptions": {
        "title": "plannerCategoryDescriptions",
        "type": "object",
        "properties": {
          "category1": {
            "type": "string",
            "nullable": true
          },
          "category2": {
            "type": "string",
            "nullable": true
          },
          "category3": {
            "type": "string",
            "nullable": true
          },
          "category4": {
            "type": "string",
            "nullable": true
          },
          "category5": {
            "type": "string",
            "nullable": true
          },
          "category6": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.onenoteEntityBaseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenoteEntityBaseModel",
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.onenoteEntitySchemaObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteEntitySchemaObjectModel",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.onenoteEntityHierarchyModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenoteEntityHierarchyModel",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.notebook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "notebook",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "nullable": true
              },
              "userRole": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteUserRole"
                  }
                ],
                "nullable": true
              },
              "isShared": {
                "type": "boolean",
                "nullable": true
              },
              "sectionsUrl": {
                "type": "string",
                "nullable": true
              },
              "sectionGroupsUrl": {
                "type": "string",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebookLinks"
                  }
                ],
                "nullable": true
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.onenoteSection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "onenoteSection",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionLinks"
                  }
                ],
                "nullable": true
              },
              "pagesUrl": {
                "type": "string",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.sectionGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "sectionGroup",
            "type": "object",
            "properties": {
              "sectionsUrl": {
                "type": "string",
                "nullable": true
              },
              "sectionGroupsUrl": {
                "type": "string",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              }
            }
          }
        ]
      },
      "microsoft.graph.onenotePage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenotePage",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "nullable": true
              },
              "createdByAppId": {
                "type": "string",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.pageLinks"
                  }
                ],
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "nullable": true
              },
              "content": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "level": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "order": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "userTags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "parentSection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                  }
                ],
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.onenoteResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteResource",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "operation",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.operationStatus"
                  }
                ],
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastActionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.onenoteOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.operation"
          },
          {
            "title": "onenoteOperation",
            "type": "object",
            "properties": {
              "resourceLocation": {
                "type": "string",
                "nullable": true
              },
              "resourceId": {
                "type": "string",
                "nullable": true
              },
              "error": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteOperationError"
                  }
                ],
                "nullable": true
              },
              "percentComplete": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "microsoft.graph.notebookLinks": {
        "title": "notebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.externalLink": {
        "title": "externalLink",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.sectionLinks": {
        "title": "sectionLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.pageLinks": {
        "title": "pageLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.onenoteOperationError": {
        "title": "onenoteOperationError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.diagnostic": {
        "title": "diagnostic",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "microsoft.graph.onenotePatchContentCommand": {
        "title": "onenotePatchContentCommand",
        "type": "object",
        "properties": {
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchActionType"
              }
            ]
          },
          "target": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchInsertPosition"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.onenotePagePreview": {
        "title": "onenotePagePreview",
        "type": "object",
        "properties": {
          "previewText": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePagePreviewLinks"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.onenotePagePreviewLinks": {
        "title": "onenotePagePreviewLinks",
        "type": "object",
        "properties": {
          "previewImageUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.recentNotebook": {
        "title": "recentNotebook",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "lastAccessedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recentNotebookLinks"
              }
            ],
            "nullable": true
          },
          "sourceService": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenoteSourceService"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.recentNotebookLinks": {
        "title": "recentNotebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        }
      },
      "microsoft.graph.reportRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "reportRoot",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.report": {
        "title": "report",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        }
      },
      "microsoft.graph.automaticRepliesStatus": {
        "title": "automaticRepliesStatus",
        "enum": [
          "disabled",
          "alwaysEnabled",
          "scheduled"
        ],
        "type": "string"
      },
      "microsoft.graph.externalAudienceScope": {
        "title": "externalAudienceScope",
        "enum": [
          "none",
          "contactsOnly",
          "all"
        ],
        "type": "string"
      },
      "microsoft.graph.attendeeType": {
        "title": "attendeeType",
        "enum": [
          "required",
          "optional",
          "resource"
        ],
        "type": "string"
      },
      "microsoft.graph.freeBusyStatus": {
        "title": "freeBusyStatus",
        "enum": [
          "free",
          "tentative",
          "busy",
          "oof",
          "workingElsewhere",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.activityDomain": {
        "title": "activityDomain",
        "enum": [
          "unknown",
          "work",
          "personal",
          "unrestricted"
        ],
        "type": "string"
      },
      "microsoft.graph.bodyType": {
        "title": "bodyType",
        "enum": [
          "text",
          "html"
        ],
        "type": "string"
      },
      "microsoft.graph.importance": {
        "title": "importance",
        "enum": [
          "low",
          "normal",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.inferenceClassificationType": {
        "title": "inferenceClassificationType",
        "enum": [
          "focused",
          "other"
        ],
        "type": "string"
      },
      "microsoft.graph.calendarColor": {
        "title": "calendarColor",
        "enum": [
          "lightBlue",
          "lightGreen",
          "lightOrange",
          "lightGray",
          "lightYellow",
          "lightTeal",
          "lightPink",
          "lightBrown",
          "lightRed",
          "maxColor",
          "auto"
        ],
        "type": "string"
      },
      "microsoft.graph.responseType": {
        "title": "responseType",
        "enum": [
          "none",
          "organizer",
          "tentativelyAccepted",
          "accepted",
          "declined",
          "notResponded"
        ],
        "type": "string"
      },
      "microsoft.graph.sensitivity": {
        "title": "sensitivity",
        "enum": [
          "normal",
          "personal",
          "private",
          "confidential"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrencePatternType": {
        "title": "recurrencePatternType",
        "enum": [
          "daily",
          "weekly",
          "absoluteMonthly",
          "relativeMonthly",
          "absoluteYearly",
          "relativeYearly"
        ],
        "type": "string"
      },
      "microsoft.graph.dayOfWeek": {
        "title": "dayOfWeek",
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.weekIndex": {
        "title": "weekIndex",
        "enum": [
          "first",
          "second",
          "third",
          "fourth",
          "last"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrenceRangeType": {
        "title": "recurrenceRangeType",
        "enum": [
          "endDate",
          "noEnd",
          "numbered"
        ],
        "type": "string"
      },
      "microsoft.graph.eventType": {
        "title": "eventType",
        "enum": [
          "singleInstance",
          "occurrence",
          "exception",
          "seriesMaster"
        ],
        "type": "string"
      },
      "microsoft.graph.meetingMessageType": {
        "title": "meetingMessageType",
        "enum": [
          "none",
          "meetingRequest",
          "meetingCancelled",
          "meetingAccepted",
          "meetingTenativelyAccepted",
          "meetingDeclined"
        ],
        "type": "string"
      },
      "microsoft.graph.phoneType": {
        "title": "phoneType",
        "enum": [
          "home",
          "business",
          "mobile",
          "other",
          "assistant",
          "homeFax",
          "businessFax",
          "otherFax",
          "pager",
          "radio"
        ],
        "type": "string"
      },
      "microsoft.graph.websiteType": {
        "title": "websiteType",
        "enum": [
          "other",
          "home",
          "work",
          "blog",
          "profile"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerPreviewType": {
        "title": "plannerPreviewType",
        "enum": [
          "automatic",
          "noPreview",
          "checklist",
          "description",
          "reference"
        ],
        "type": "string"
      },
      "microsoft.graph.operationStatus": {
        "title": "operationStatus",
        "enum": [
          "NotStarted",
          "Running",
          "Completed",
          "Failed"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchInsertPosition": {
        "title": "onenotePatchInsertPosition",
        "enum": [
          "After",
          "Before"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchActionType": {
        "title": "onenotePatchActionType",
        "enum": [
          "Replace",
          "Append",
          "Delete",
          "Insert",
          "Prepend"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteSourceService": {
        "title": "onenoteSourceService",
        "enum": [
          "Unknown",
          "OneDrive",
          "OneDriveForBusiness",
          "OnPremOneDriveForBusiness"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteUserRole": {
        "title": "onenoteUserRole",
        "enum": [
          "Owner",
          "Contributor",
          "Reader",
          "None"
        ],
        "type": "string"
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "directoryObjects"
    },
    {
      "name": "devices"
    },
    {
      "name": "domains"
    },
    {
      "name": "domainDnsRecords"
    },
    {
      "name": "groups"
    },
    {
      "name": "directoryRoles"
    },
    {
      "name": "directoryRoleTemplates"
    },
    {
      "name": "organization"
    },
    {
      "name": "groupSettings"
    },
    {
      "name": "groupSettingTemplates"
    },
    {
      "name": "subscribedSkus"
    },
    {
      "name": "users"
    },
    {
      "name": "contracts"
    },
    {
      "name": "schemaExtensions"
    },
    {
      "name": "drives"
    },
    {
      "name": "shares"
    },
    {
      "name": "sites"
    },
    {
      "name": "workbooks"
    },
    {
      "name": "subscriptions"
    },
    {
      "name": "invitations"
    },
    {
      "name": "me"
    },
    {
      "name": "drive"
    },
    {
      "name": "planner"
    },
    {
      "name": "reports"
    }
  ]
}