# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - master
pr:
  branches:
    include:
      - master

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ProductBinPath: '$(Build.SourcesDirectory)\bin\$(BuildConfiguration)'

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
      demands:
      - msbuild
      - vstest
    customBuildTags:
    - ES365AIMigrationTooling 
    stages:

    - stage: build
      jobs:
        - job: build
          templateContext:
            outputs:
            - output: pipelineArtifact
              displayName: 'Publish Artifact: Nugets'
              artifactName: Nugets
              targetPath: '$(Build.ArtifactStagingDirectory)'
          steps:

          - task: UseDotNet@2
            displayName: 'Use .NET 6' # needed for ESRP signing
            inputs:
              version: 6.x

          - task: UseDotNet@2
            displayName: 'Use .NET 8'
            inputs:
              version: 8.x

          # Install the nuget tool.
          - task: NuGetToolInstaller@0
            displayName: 'Use NuGet >=5.2.0'
            inputs:
              versionSpec: '>=5.2.0'
              checkLatest: true

          # Build the Product project
          - task: DotNetCoreCLI@2
            displayName: 'build'
            inputs:
              projects: '$(Build.SourcesDirectory)\Microsoft.OpenApi.OData.sln'
              arguments: '--configuration $(BuildConfiguration) --no-incremental'

          # Run the Unit test
          - task: DotNetCoreCLI@2
            displayName: 'test'
            inputs:
              command: test
              projects: '$(Build.SourcesDirectory)\Microsoft.OpenApi.OData.sln'
              arguments: '--configuration $(BuildConfiguration) --no-build'

          - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
            displayName: 'ESRP CodeSigning'
            inputs:
              ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
              FolderPath: src
              signConfigType: inlineSignParams
              inlineOperation: |
                [
                    {
                        "keyCode": "CP-230012",
                        "operationSetCode": "SigntoolSign",
                        "parameters": [
                        {
                            "parameterName": "OpusName",
                            "parameterValue": "Microsoft"
                        },
                        {
                            "parameterName": "OpusInfo",
                            "parameterValue": "http://www.microsoft.com"
                        },
                        {
                            "parameterName": "FileDigest",
                            "parameterValue": "/fd \"SHA256\""
                        },
                        {
                            "parameterName": "PageHash",
                            "parameterValue": "/NPH"
                        },
                        {
                            "parameterName": "TimeStamp",
                            "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                        ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    },
                    {
                        "keyCode": "CP-230012",
                        "operationSetCode": "SigntoolVerify",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    }
                ]
              SessionTimeout: 20

          # Pack
          - task: DotNetCoreCLI@2
            displayName: 'pack'
            inputs:
              command: pack
              projects: src/Microsoft.OpenApi.OData.Reader/Microsoft.OpenAPI.OData.Reader.csproj
              arguments: '-o $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration) --no-build --include-symbols --include-source /p:SymbolPackageFormat=snupkg'

          - task: PowerShell@2
            displayName: 'Validate project version has been incremented'
            condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
            inputs:
              targetType: 'filePath'
              filePath: $(System.DefaultWorkingDirectory)\scripts\ValidateProjectVersionUpdated.ps1
              pwsh: true

          - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
            displayName: 'ESRP CodeSigning Nuget Packages'
            inputs:
              ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
              FolderPath: '$(Build.ArtifactStagingDirectory)'
              Pattern: '*.nupkg'
              signConfigType: inlineSignParams
              inlineOperation: |
                [
                    {
                        "keyCode": "CP-401405",
                        "operationSetCode": "NuGetSign",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    },
                    {
                        "keyCode": "CP-401405",
                        "operationSetCode": "NuGetVerify",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    }
                ]
              SessionTimeout: 20

    - stage: deploy
      condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
      dependsOn: build
      jobs:
        - deployment: deploy
          environment: nuget-org
          strategy:
            runOnce:
              deploy:
                pool:
                  vmImage: ubuntu-latest
                steps:
                - task: DownloadPipelineArtifact@2
                  displayName: Download nupkg from artifacts
                  inputs:
                    artifact: Nugets
                    source: current
                - task: 1ES.PublishNuget@1
                  displayName: 'NuGet push'
                  inputs:
                    packagesToPush: '$(Pipeline.Workspace)/Nugets/Microsoft.OpenApi.OData.*.nupkg'
                    nuGetFeedType: external
                    publishFeedCredentials: 'OpenAPI Nuget Connection'
                    packageParentPath: '$(Pipeline.Workspace)'
      
