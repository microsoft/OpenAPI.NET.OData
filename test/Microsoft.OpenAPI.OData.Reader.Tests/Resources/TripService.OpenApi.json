{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace Microsoft.OData.Service.Sample.TrippinInMemory.Models",
    "description": "This OData service is located at http://services.odata.org/TrippinRESTierService",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://services.odata.org/TrippinRESTierService"
    }
  ],
  "paths": {
    "/Airlines": {
      "description": "Provides operations to manage the collection of Airline entities.",
      "get": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Get entities from Airlines",
        "operationId": "Airlines.Airline.ListAirline",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "AirlineCode desc",
                  "Name",
                  "Name desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "Name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirlineCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Add new entity to Airlines",
        "operationId": "Airlines.Airline.CreateAirline",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airlines/{AirlineCode}": {
      "description": "Provides operations to manage the collection of Airline entities.",
      "get": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Get entity from Airlines by key (AirlineCode)",
        "operationId": "Airlines.Airline.GetAirlineByAirlineCode",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "Name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Update entity in Airlines by key (AirlineCode)",
        "operationId": "Airlines.Airline.UpdateAirlineByAirlineCode",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Delete entity from Airlines by key (AirlineCode)",
        "operationId": "Airlines.Airline.DeleteAirlineByAirlineCode",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airlines/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Airlines-27a7",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports": {
      "description": "Provides operations to manage the collection of Airport entities.",
      "get": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Get entities from Airports",
        "operationId": "Airports.Airport.ListAirport",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "Name desc",
                  "IcaoCode",
                  "IcaoCode desc",
                  "IataCode",
                  "IataCode desc",
                  "Location",
                  "Location desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "IcaoCode",
                  "IataCode",
                  "Location"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Add new entity to Airports",
        "operationId": "Airports.Airport.CreateAirport",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/{IcaoCode}": {
      "description": "Provides operations to manage the collection of Airport entities.",
      "get": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Get entity from Airports by key (IcaoCode)",
        "operationId": "Airports.Airport.GetAirportByIcaoCode",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "IcaoCode",
                  "IataCode",
                  "Location"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Update entity in Airports by key (IcaoCode)",
        "operationId": "Airports.Airport.UpdateAirportByIcaoCode",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Delete entity from Airports by key (IcaoCode)",
        "operationId": "Airports.Airport.DeleteAirportByIcaoCode",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/{IcaoCode}/Location": {
      "get": {
        "summary": "Get Location property value",
        "operationId": "Location.AirportLocation.GetAirportLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City",
                  "Loc",
                  "EmergencyAuthority"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "EmergencyAuthority"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "put": {
        "summary": "Update property Location value.",
        "operationId": "Location.AirportLocation.UpdateAirportLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority": {
      "description": "Provides operations to manage the EmergencyAuthority property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation entity.",
      "get": {
        "tags": [
          "Airports.Person"
        ],
        "summary": "Get EmergencyAuthority from Airports",
        "description": "The person to contact in case of a crisis at this location.",
        "operationId": "Airports.GetEmergencyAuthority",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/$ref": {
      "description": "Provides operations to manage the collection of Airport entities.",
      "get": {
        "tags": [
          "Airports.Person"
        ],
        "summary": "Get ref of EmergencyAuthority from Airports",
        "description": "The person to contact in case of a crisis at this location.",
        "operationId": "Airports.GetRefEmergencyAuthority",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "Airports.Person"
        ],
        "summary": "Update the ref of navigation property EmergencyAuthority in Airports",
        "operationId": "Airports.UpdateRefEmergencyAuthority",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPutBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Airports.Person"
        ],
        "summary": "Delete ref of navigation property EmergencyAuthority for Airports",
        "operationId": "Airports.DeleteRefEmergencyAuthority",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-2ffe",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-fbf9",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-e708",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/{IcaoCode}/Location/EmergencyAuthority/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-0bb9",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Airports-60cc",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GetNearestAirport(lat={lat},lon={lon})": {
      "description": "Provides operations to call the GetNearestAirport method.",
      "get": {
        "tags": [
          "Airports"
        ],
        "summary": "Invoke functionImport GetNearestAirport",
        "operationId": "FunctionImport.GetNearestAirport",
        "parameters": [
          {
            "name": "lat",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "oneOf": [
                {
                  "type": "number",
                  "format": "double"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ReferenceNumeric"
                }
              ]
            }
          },
          {
            "name": "lon",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "oneOf": [
                {
                  "type": "number",
                  "format": "double"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ReferenceNumeric"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                    },
                    {
                      "type": "object",
                      "nullable": true
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "functionImport"
      }
    },
    "/GetPersonWithMostFriends()": {
      "description": "Provides operations to call the GetPersonWithMostFriends method.",
      "get": {
        "tags": [
          "People"
        ],
        "summary": "Invoke functionImport GetPersonWithMostFriends",
        "description": "The person with most friends.",
        "operationId": "FunctionImport.GetPersonWithMostFriends",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                    },
                    {
                      "type": "object",
                      "nullable": true
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "functionImport"
      }
    },
    "/Me": {
      "description": "Provides operations to manage the Person singleton.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get Me",
        "operationId": "Me.Person.GetPerson",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Update Me",
        "operationId": "Me.Person.UpdatePerson",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-38f2",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-b1a4",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-5575",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend": {
      "description": "Provides operations to manage the BestFriend property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get BestFriend from Me",
        "description": "The best friend.",
        "operationId": "Me.GetBestFriend",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "Me.UpdateBestFriend",
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/BestFriend/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of BestFriend from Me",
        "description": "The best friend.",
        "operationId": "Me.GetRefBestFriend",
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "Me.UpdateRefBestFriend",
        "requestBody": {
          "$ref": "#/components/requestBodies/refPutBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for Me",
        "operationId": "Me.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/BestFriend/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-b695",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-2154",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-0105",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-a28d",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-dcf6",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-09a9",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends": {
      "description": "Provides operations to manage the Friends property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get Friends from Me",
        "operationId": "Me.ListFriends",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/{UserName}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property Friends for Me",
        "operationId": "Me.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/{UserName}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-246e",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-f440",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-42c7",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-15cc",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-3dc7",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-ddec",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends-182b",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of Friends from Me",
        "operationId": "Me.ListRefFriends",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Create new navigation property ref to Friends for Me",
        "operationId": "Me.CreateRefFriends",
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-f4a5",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-884b",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-98ae",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-9376",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-ba49",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-bd18",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers": {
      "description": "Provides operations to manage the Peers property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee entity.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get Peers from Me",
        "operationId": "Me.ListPeers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property Peers for Me",
        "operationId": "Me.DeleteRefPeers",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-3e91",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-1e59",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-be1d",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-dc11",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Peers-9fc2",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of Peers from Me",
        "operationId": "Me.ListRefPeers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Create new navigation property ref to Peers for Me",
        "operationId": "Me.CreateRefPeers",
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "description": "Provides operations to call the GetFavoriteAirline method.",
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.GetFavoriteAirline",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFavoriteAirlineResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName='{userName}')": {
      "description": "Provides operations to call the GetFriendsTrips method.",
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName='{userName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFriendsTripsResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "description": "Provides operations to call the GetPeersForTrip method.",
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.GetPeersForTrip",
        "requestBody": {
          "$ref": "#/components/requestBodies/GetPeersForTripRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetPeersForTripResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-16dc",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports": {
      "description": "Provides operations to manage the DirectReports property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager entity.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get DirectReports from Me",
        "operationId": "Me.ListDirectReports",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property DirectReports for Me",
        "operationId": "Me.DeleteRefDirectReports",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-f650",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-660b",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-a070",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-5e6e",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.DirectReports-8b92",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of DirectReports from Me",
        "operationId": "Me.ListRefDirectReports",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Create new navigation property ref to DirectReports for Me",
        "operationId": "Me.CreateRefDirectReports",
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "description": "Provides operations to call the Hire method.",
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      },
                      {
                        "type": "object",
                        "nullable": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "description": "Provides operations to call the ShareTrip method.",
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.ShareTrip",
        "requestBody": {
          "$ref": "#/components/requestBodies/ShareTripRequestBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName='{lastName}')": {
      "description": "Provides operations to call the UpdatePersonLastName method.",
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName='{lastName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdatePersonLastNameResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/Me/Trips": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "List trips.",
        "description": "Retrieve a list of trips.",
        "operationId": "Me.ListTrips",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Create a trip.",
        "description": "Create a new trip.",
        "operationId": "Me.CreateTrips",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Get a trip.",
        "description": "Retrieve the properties of a trip.",
        "operationId": "Me.GetTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Update a trip.",
        "description": "Update an instance of a trip.",
        "operationId": "Me.UpdateTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Delete a trip.",
        "description": "Delete an instance of a trip.",
        "operationId": "Me.DeleteTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "description": "Provides operations to call the GetInvolvedPeople method.",
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "Me.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          },
                          {
                            "type": "object",
                            "nullable": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/Me/Trips/{TripId}/PlanItems": {
      "description": "Provides operations to manage the PlanItems property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip entity.",
      "get": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from Me",
        "operationId": "Me.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for Me",
        "operationId": "Me.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/PlanItems/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems-c250",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/Me/Trips/{TripId}/PlanItems/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from Me",
        "operationId": "Me.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for Me",
        "operationId": "Me.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips-7b69",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/me",
          "description": "The Me API is deprecated and will stop returning data on March 2023. Please use the new me2 API."
        }
      }
    },
    "/NewComePeople": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get entities from NewComePeople",
        "operationId": "NewComePeople.Person.ListPerson",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Add new entity to NewComePeople",
        "operationId": "NewComePeople.Person.CreatePerson",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get entity from NewComePeople by key (UserName)",
        "operationId": "NewComePeople.Person.GetPersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Update entity in NewComePeople by key (UserName)",
        "operationId": "NewComePeople.Person.UpdatePersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete entity from NewComePeople by key (UserName)",
        "operationId": "NewComePeople.Person.DeletePersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-29d6",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-d026",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-29d3",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend": {
      "description": "Provides operations to manage the BestFriend property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get BestFriend from NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.GetBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "NewComePeople.UpdateBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/BestFriend/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get ref of BestFriend from NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.GetRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "NewComePeople.UpdateRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPutBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for NewComePeople",
        "operationId": "NewComePeople.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/BestFriend/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-513c",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-73fa",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-ba36",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-8ebe",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-7b75",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-61ce",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/bestfriend",
          "description": "The bestfriend API is deprecated and will stop returning data on March 2023. Please use the new friends API."
        }
      }
    },
    "/NewComePeople/{UserName}/Friends": {
      "description": "Provides operations to manage the Friends property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get Friends from NewComePeople",
        "operationId": "NewComePeople.ListFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete ref of navigation property Friends for NewComePeople",
        "operationId": "NewComePeople.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-9334",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-eeb4",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-be92",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-f4d9",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-2969",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-708f",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends-2ec1",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get ref of Friends from NewComePeople",
        "operationId": "NewComePeople.ListRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Create new navigation property ref to Friends for NewComePeople",
        "operationId": "NewComePeople.CreateRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-2969",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-4069",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-708f",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-d1d3",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-3fd9",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "description": "Provides operations to call the GetFavoriteAirline method.",
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFavoriteAirlineResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName='{userName}')": {
      "description": "Provides operations to call the GetFriendsTrips method.",
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName='{userName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFriendsTripsResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/trips",
          "description": "The GetFriendsTrips API is deprecated and will stop returning data on March 2023. Please use the new trips API on friends."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "description": "Provides operations to call the GetPeersForTrip method.",
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GetPeersForTripRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetPeersForTripResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "description": "Provides operations to call the Hire method.",
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "NewComePeople.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      },
                      {
                        "type": "object",
                        "nullable": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "description": "Provides operations to call the ShareTrip method.",
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ShareTripRequestBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName='{lastName}')": {
      "description": "Provides operations to call the UpdatePersonLastName method.",
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName='{lastName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdatePersonLastNameResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/NewComePeople/{UserName}/Trips": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "List trips.",
        "description": "Retrieve a list of trips.",
        "operationId": "NewComePeople.ListTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Create a trip.",
        "description": "Create a new trip.",
        "operationId": "NewComePeople.CreateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Get a trip.",
        "description": "Retrieve the properties of a trip.",
        "operationId": "NewComePeople.GetTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Update a trip.",
        "description": "Update an instance of a trip.",
        "operationId": "NewComePeople.UpdateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Delete a trip.",
        "description": "Delete an instance of a trip.",
        "operationId": "NewComePeople.DeleteTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "description": "Provides operations to call the GetInvolvedPeople method.",
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "NewComePeople.Person.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          },
                          {
                            "type": "object",
                            "nullable": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems": {
      "description": "Provides operations to manage the PlanItems property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip entity.",
      "get": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from NewComePeople",
        "operationId": "NewComePeople.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for NewComePeople",
        "operationId": "NewComePeople.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems-841f",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from NewComePeople",
        "operationId": "NewComePeople.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for NewComePeople",
        "operationId": "NewComePeople.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips-d155",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.NewComePeople-55d5",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get entities from People",
        "operationId": "People.Person.ListPerson",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Add new entity to People",
        "operationId": "People.Person.CreatePerson",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get entity from People by key (UserName)",
        "operationId": "People.Person.GetPersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "People.Person"
        ],
        "summary": "Update entity in People by key (UserName)",
        "operationId": "People.Person.UpdatePersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete entity from People by key (UserName)",
        "operationId": "People.Person.DeletePersonByUserName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-ed5a",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-e5b8",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-4abd",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend": {
      "description": "Provides operations to manage the BestFriend property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get BestFriend from People",
        "description": "The best friend.",
        "operationId": "People.GetBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "People.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "People.UpdateBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/BestFriend/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of BestFriend from People",
        "description": "The best friend.",
        "operationId": "People.GetRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "People.Person"
        ],
        "summary": "Update the best friend.",
        "description": "Update an instance of a best friend.",
        "operationId": "People.UpdateRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPutBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for People",
        "operationId": "People.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/BestFriend/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-16df",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-c332",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-fe88",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-53c4",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-7188",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-5f08",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends": {
      "description": "Provides operations to manage the Friends property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get Friends from People",
        "operationId": "People.ListFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/{UserName1}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property Friends for People",
        "operationId": "People.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/{UserName1}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-bdaf",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-a5f6",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-2795",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-da5e",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-11bf",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-1cfb",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends-92b9",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of Friends from People",
        "operationId": "People.ListRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Create new navigation property ref to Friends for People",
        "operationId": "People.CreateRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-11bf",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-a96c",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-1cfb",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-26b3",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-d0cf",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-317b",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers": {
      "description": "Provides operations to manage the Peers property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee entity.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get Peers from People",
        "operationId": "People.ListPeers",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property Peers for People",
        "operationId": "People.DeleteRefPeers",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-755d",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-b918",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-ef5e",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/{UserName1}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-311b",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Peers-44d2",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Peers/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of Peers from People",
        "operationId": "People.ListRefPeers",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Create new navigation property ref to Peers for People",
        "operationId": "People.CreateRefPeers",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "description": "Provides operations to call the GetFavoriteAirline method.",
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFavoriteAirlineResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName='{userName}')": {
      "description": "Provides operations to call the GetFriendsTrips method.",
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName='{userName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFriendsTripsResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "description": "Provides operations to call the GetPeersForTrip method.",
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GetPeersForTripRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetPeersForTripResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Item.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-d051",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports": {
      "description": "Provides operations to manage the DirectReports property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager entity.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get DirectReports from People",
        "operationId": "People.ListDirectReports",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property DirectReports for People",
        "operationId": "People.DeleteRefDirectReports",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/AddressInfo": {
      "get": {
        "summary": "Get AddressInfo property value",
        "operationId": "AddressInfo.Location.ListLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "Address desc",
                  "City",
                  "City desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property AddressInfo value.",
        "operationId": "AddressInfo.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "post": {
        "summary": "Sets a new value for the collection of Location.",
        "operationId": "AddressInfo.Location.SetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/AddressInfo/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.AddressInfo-f46e",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-1252",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/AddressInfo/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-5d49",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/HomeAddress": {
      "get": {
        "summary": "Get HomeAddress property value",
        "operationId": "HomeAddress.Location.GetLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Address",
                  "City"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      },
      "patch": {
        "summary": "Update property HomeAddress value.",
        "operationId": "HomeAddress.Location.UpdateLocation",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/{UserName1}/HomeAddress/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "description": "Casts the previous resource to EventLocation.",
      "get": {
        "tags": [
          "Location.EventLocation"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation-cf8d",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocationCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.DirectReports-0ec4",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/DirectReports/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of DirectReports from People",
        "operationId": "People.ListRefDirectReports",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Create new navigation property ref to DirectReports for People",
        "operationId": "People.CreateRefDirectReports",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "description": "Provides operations to call the Hire method.",
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      },
                      {
                        "type": "object",
                        "nullable": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "description": "Provides operations to call the ShareTrip method.",
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ShareTripRequestBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName='{lastName}')": {
      "description": "Provides operations to call the UpdatePersonLastName method.",
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName='{lastName}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdatePersonLastNameResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/People/{UserName}/Trips": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "People.Trip"
        ],
        "summary": "List trips.",
        "description": "Retrieve a list of trips.",
        "operationId": "People.ListTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Create a trip.",
        "description": "Create a new trip.",
        "operationId": "People.CreateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}": {
      "description": "Provides operations to manage the Trips property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person entity.",
      "get": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Get a trip.",
        "description": "Retrieve the properties of a trip.",
        "operationId": "People.GetTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Update a trip.",
        "description": "Update an instance of a trip.",
        "operationId": "People.UpdateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Delete a trip.",
        "description": "Delete an instance of a trip.",
        "operationId": "People.DeleteTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "description": "Provides operations to call the GetInvolvedPeople method.",
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "People.Person.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          },
                          {
                            "type": "object",
                            "nullable": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems": {
      "description": "Provides operations to manage the PlanItems property of the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip entity.",
      "get": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from People",
        "operationId": "People.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "delete": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for People",
        "operationId": "People.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems-9a27",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/$ref": {
      "description": "Provides operations to manage the collection of Person entities.",
      "get": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from People",
        "operationId": "People.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StringCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for People",
        "operationId": "People.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/refPostBody"
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips-e877",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.People-dd8d",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "description": "Casts the previous resource to Employee.",
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-013a",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee-ef29",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "description": "Casts the previous resource to Manager.",
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the items of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager in the Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person collection",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.Items.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-3e14",
        "parameters": [
          {
            "name": "ConsistencyLevel",
            "in": "header",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.tripservice.com/advanced-queries",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example-1": {
                "description": "$search and $count queries require the client to set the ConsistencyLevel HTTP header to 'eventual'.",
                "value": "eventual"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager-2d48",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "deprecated": true,
        "x-ms-deprecation": {
          "removalDate": "2023-03-15T00:00:00.0000000",
          "date": "2021-08-24T00:00:00.0000000",
          "version": "2021-05/people",
          "description": "The People API is deprecated and will stop returning data on March 2023. Please use the new newPeople API."
        }
      }
    },
    "/ResetDataSource": {
      "description": "Provides operations to call the ResetDataSource method.",
      "post": {
        "tags": [
          "ResetDataSource"
        ],
        "summary": "Invoke actionImport ResetDataSource",
        "description": "Resets the data source to default values.",
        "operationId": "ActionImport.ResetDataSource",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "actionImport"
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "MiddleName": {
            "type": "string",
            "nullable": true
          },
          "Gender": {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender"
          },
          "Age": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "Emails": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "AddressInfo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                },
                {
                  "type": "object",
                  "nullable": true
                }
              ]
            }
          },
          "HomeAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          },
          "FavoriteFeature": {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
          },
          "Features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
            }
          },
          "Friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            },
            "x-ms-navigationProperty": true
          },
          "BestFriend": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              },
              {
                "type": "object",
                "nullable": true
              }
            ],
            "description": "The best friend.",
            "x-ms-navigationProperty": true
          },
          "Trips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
            },
            "description": "Collection of trips.",
            "x-ms-navigationProperty": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline": {
        "title": "Airline",
        "type": "object",
        "properties": {
          "AirlineCode": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport": {
        "title": "Airport",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "IcaoCode": {
            "type": "string"
          },
          "IataCode": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location": {
        "title": "Location",
        "type": "object",
        "properties": {
          "Address": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.City"
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City": {
        "title": "City",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "CountryRegion": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          {
            "title": "AirportLocation",
            "type": "object",
            "properties": {
              "Loc": {
                "$ref": "#/components/schemas/Edm.GeographyPoint"
              },
              "EmergencyAuthority": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ],
                "description": "The person to contact in case of a crisis at this location.",
                "x-ms-navigationProperty": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          {
            "title": "EventLocation",
            "type": "object",
            "properties": {
              "BuildingInfo": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip": {
        "title": "Trip",
        "type": "object",
        "properties": {
          "TripId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ShareId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Budget": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "StartsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "PlanItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
            },
            "x-ms-navigationProperty": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem": {
        "title": "PlanItem",
        "type": "object",
        "properties": {
          "PlanItemId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ConfirmationCode": {
            "type": "string",
            "nullable": true
          },
          "StartsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "Duration": {
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string",
            "format": "duration"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
          },
          {
            "title": "Event",
            "type": "object",
            "properties": {
              "OccursAt": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ]
              },
              "Description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
          },
          {
            "title": "PublicTransportation",
            "type": "object",
            "properties": {
              "SeatNumber": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation"
          },
          {
            "title": "Flight",
            "type": "object",
            "properties": {
              "FlightNumber": {
                "type": "string",
                "nullable": true
              },
              "Airline": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ],
                "x-ms-navigationProperty": true
              },
              "From": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ],
                "x-ms-navigationProperty": true
              },
              "To": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ],
                "x-ms-navigationProperty": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          {
            "title": "Employee",
            "type": "object",
            "properties": {
              "Cost": {
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int64"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "Peers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                },
                "x-ms-navigationProperty": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          {
            "title": "Manager",
            "type": "object",
            "properties": {
              "Budget": {
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int64"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "BossOffice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ]
              },
              "DirectReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                },
                "x-ms-navigationProperty": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender": {
        "title": "PersonGender",
        "enum": [
          "Male",
          "Female",
          "Unknow"
        ],
        "type": "string",
        "description": "Gender of the person.",
        "x-ms-enum": {
          "name": "PersonGender",
          "modelAsString": false,
          "values": [
            {
              "value": "Male",
              "description": "The Male gender.",
              "name": "Male"
            },
            {
              "value": "Female",
              "description": "The Female gender.",
              "name": "Female"
            },
            {
              "value": "Unknow",
              "description": "Unknown gender or prefers not to say.",
              "name": "Unknow"
            }
          ]
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature": {
        "title": "Feature",
        "enum": [
          "Feature1",
          "Feature2",
          "Feature3",
          "Feature4"
        ],
        "type": "string"
      },
      "Edm.Geography": {
        "$ref": "#/components/schemas/Edm.Geometry"
      },
      "Edm.GeographyPoint": {
        "$ref": "#/components/schemas/Edm.GeometryPoint"
      },
      "Edm.GeographyLineString": {
        "$ref": "#/components/schemas/Edm.GeometryLineString"
      },
      "Edm.GeographyPolygon": {
        "$ref": "#/components/schemas/Edm.GeometryPolygon"
      },
      "Edm.GeographyMultiPoint": {
        "$ref": "#/components/schemas/Edm.GeometryMultiPoint"
      },
      "Edm.GeographyMultiLineString": {
        "$ref": "#/components/schemas/Edm.GeometryMultiLineString"
      },
      "Edm.GeographyMultiPolygon": {
        "$ref": "#/components/schemas/Edm.GeometryMultiPolygon"
      },
      "Edm.GeographyCollection": {
        "$ref": "#/components/schemas/Edm.GeometryCollection"
      },
      "Edm.Geometry": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Edm.GeometryPoint"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryLineString"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryPolygon"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiPoint"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiLineString"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiPolygon"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryCollection"
          }
        ]
      },
      "Edm.GeometryPoint": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Point"
            ],
            "type": "string",
            "default": "Point"
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoJSON.position"
          }
        }
      },
      "Edm.GeometryLineString": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "LineString"
            ]
          },
          "coordinates": {
            "minItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSON.position"
            }
          }
        }
      },
      "Edm.GeometryPolygon": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Polygon"
            ]
          },
          "coordinates": {
            "minItems": 4,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GeoJSON.position"
              }
            }
          }
        }
      },
      "Edm.GeometryMultiPoint": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPoint"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSON.position"
            }
          }
        }
      },
      "Edm.GeometryMultiLineString": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiLineString"
            ]
          },
          "coordinates": {
            "minItems": 2,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GeoJSON.position"
              }
            }
          }
        }
      },
      "Edm.GeometryMultiPolygon": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPolygon"
            ]
          },
          "coordinates": {
            "minItems": 4,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GeoJSON.position"
                }
              }
            }
          }
        }
      },
      "Edm.GeometryCollection": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "GeometryCollection"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Edm.Geometry"
            }
          }
        }
      },
      "GeoJSON.position": {
        "minItems": 2,
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.ODataError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.MainError"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.MainError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.ErrorDetails"
            }
          },
          "innererror": {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.InnerError"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.ErrorDetails": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.InnerError": {
        "title": "InnerError",
        "type": "object",
        "properties": {
          "Date": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RequestId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ODataCountResponse": {
        "type": "integer",
        "format": "int32"
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse": {
        "title": "Collection of Person",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirlineCollectionResponse": {
        "title": "Collection of Airline",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportCollectionResponse": {
        "title": "Collection of Airport",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse": {
        "title": "Collection of Trip",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse": {
        "title": "Collection of PlanItem",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse": {
        "title": "Collection of Employee",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse": {
        "title": "Collection of Manager",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventCollectionResponse": {
        "title": "Collection of Event",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportationCollectionResponse": {
        "title": "Collection of PublicTransportation",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.FlightCollectionResponse": {
        "title": "Collection of Flight",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse": {
        "title": "Collection of Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
            }
          }
        }
      },
      "StringCollectionResponse": {
        "title": "Collection of string",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReferenceUpdate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          },
          "@odata.type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferenceCreate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ReferenceNumeric": {
        "enum": [
          "-INF",
          "INF",
          "NaN"
        ]
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ODataErrors.ODataError"
            }
          }
        }
      },
      "ODataCountResponse": {
        "description": "The count of the resource",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/ODataCountResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirlineCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirlineCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.TripCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItemCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EmployeeCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ManagerCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportationCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportationCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.FlightCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.FlightCollectionResponse"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.LocationCollectionResponse"
            }
          }
        }
      },
      "StringCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StringCollectionResponse"
            }
          }
        }
      },
      "GetFavoriteAirlineResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                },
                {
                  "type": "object",
                  "nullable": true
                }
              ]
            }
          }
        }
      },
      "GetFriendsTripsResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "title": "Collection of Trip",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                      },
                      {
                        "type": "object",
                        "nullable": true
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "UpdatePersonLastNameResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        }
      },
      "GetPeersForTripResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "title": "Collection of Person",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      },
                      {
                        "type": "object",
                        "nullable": true
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.InnerError": {
        "value": {
          "Date": "0001-01-01T00:00:00.0000000+00:00",
          "RequestId": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person": {
        "value": {
          "AddressInfo": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
            }
          ],
          "Age": 0,
          "BestFriend": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          "Emails": [
            "String"
          ],
          "FavoriteFeature": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
          },
          "Features": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
            }
          ],
          "FirstName": "String",
          "Friends": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ],
          "Gender": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender"
          },
          "HomeAddress": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          "LastName": "String",
          "MiddleName": "String",
          "Trips": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
            }
          ],
          "UserName": "String (identifier)"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline": {
        "value": {
          "AirlineCode": "String (identifier)",
          "Name": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport": {
        "value": {
          "IataCode": "String",
          "IcaoCode": "String (identifier)",
          "Location": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
          },
          "Name": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location": {
        "value": {
          "Address": "String",
          "City": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City": {
        "value": {
          "CountryRegion": "String",
          "Name": "String",
          "Region": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation": {
        "value": {
          "EmergencyAuthority": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          "Loc": "GeographyPoint"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
        "value": {
          "BuildingInfo": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip": {
        "value": {
          "Budget": 0,
          "Description": "String",
          "EndsAt": "0001-01-01T00:00:00.0000000+00:00",
          "Name": "String",
          "PlanItems": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
            }
          ],
          "ShareId": "00000000-0000-0000-0000-000000000000",
          "StartsAt": "0001-01-01T00:00:00.0000000+00:00",
          "Tags": [
            "String"
          ],
          "TripId": 0
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem": {
        "value": {
          "ConfirmationCode": "String",
          "Duration": "Duration",
          "EndsAt": "0001-01-01T00:00:00.0000000+00:00",
          "PlanItemId": 0,
          "StartsAt": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event": {
        "value": {
          "Description": "String",
          "OccursAt": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation": {
        "value": {
          "SeatNumber": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight": {
        "value": {
          "Airline": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
          },
          "FlightNumber": "String",
          "From": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
          },
          "To": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
        "value": {
          "Cost": 0,
          "Peers": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ]
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
        "value": {
          "BossOffice": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          "Budget": 0,
          "DirectReports": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ]
        }
      }
    },
    "requestBodies": {
      "refPostBody": {
        "description": "New navigation property ref value",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceCreate"
            }
          }
        },
        "required": true
      },
      "refPutBody": {
        "description": "New navigation property ref values",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceUpdate"
            }
          }
        },
        "required": true
      },
      "ShareTripRequestBody": {
        "description": "Action parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string"
                },
                "tripId": {
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "required": true
      },
      "GetPeersForTripRequestBody": {
        "description": "Action parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string"
                },
                "tripId": {
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "required": true
      }
    }
  },
  "tags": [
    {
      "name": "Airlines.Airline",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Airports.Airport",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Airports.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Location.EventLocation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Airports",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Me.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Person.Employee"
    },
    {
      "name": "Person.Manager"
    },
    {
      "name": "Me.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Me.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Me.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Me.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "NewComePeople.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "NewComePeople.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "ResetDataSource",
      "x-ms-docs-toc-type": "container"
    }
  ]
}